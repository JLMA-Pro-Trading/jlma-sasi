{"version":3,"names":["cov_1hn5yhipnd","actualCoverage","React","s","StatisticsView","stats","agents","isActive","f","agentsByType","reduce","acc","agent","type","b","agentsByStatus","status","averageEfficiency","length","sum","efficiency","totalTasksCompleted","completedTasks","_jsxs","className","children","_jsx","totalAgents","tasksCompleted","toFixed","processingUnits","Object","entries","map","count","style","width","networkEfficiency","asiProgress","globalContributors","toLocaleString","filter","slice","name","currentTask","repository","viewBox","d","strokeDasharray","progress","x","y","Math","round","id"],"sources":["/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/StatisticsView.tsx"],"sourcesContent":["import React from 'react'\nimport { SwarmStats, Agent } from '../contexts/SwarmContext'\nimport '../styles/StatisticsView.css'\n\ninterface StatisticsViewProps {\n  stats: SwarmStats\n  agents: Agent[]\n  isActive: boolean\n}\n\nconst StatisticsView: React.FC<StatisticsViewProps> = ({ stats, agents, isActive }) => {\n  // Calculate additional statistics\n  const agentsByType = agents.reduce((acc, agent) => {\n    acc[agent.type] = (acc[agent.type] || 0) + 1\n    return acc\n  }, {} as Record<string, number>)\n\n  const agentsByStatus = agents.reduce((acc, agent) => {\n    acc[agent.status] = (acc[agent.status] || 0) + 1\n    return acc\n  }, {} as Record<string, number>)\n\n  const averageEfficiency = agents.length > 0 \n    ? agents.reduce((sum, agent) => sum + agent.efficiency, 0) / agents.length \n    : 0\n\n  const totalTasksCompleted = agents.reduce((sum, agent) => sum + agent.completedTasks, 0)\n\n  return (\n    <div className=\"statistics-view\">\n      <div className=\"statistics-header\">\n        <h1 className=\"statistics-title\">SASI@home Statistics</h1>\n        <div className=\"status-indicator\">\n          <span className={`status-badge ${isActive ? 'active' : 'inactive'}`}>\n            {isActive ? 'SWARM ACTIVE' : 'SWARM INACTIVE'}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"statistics-grid\">\n        {/* Overall Stats */}\n        <div className=\"stat-section overview\">\n          <h2>Overview</h2>\n          <div className=\"stat-cards\">\n            <div className=\"stat-card primary\">\n              <div className=\"stat-icon\">ü§ñ</div>\n              <div className=\"stat-content\">\n                <div className=\"stat-value\">{stats.totalAgents}</div>\n                <div className=\"stat-label\">Total Agents</div>\n              </div>\n            </div>\n            \n            <div className=\"stat-card success\">\n              <div className=\"stat-icon\">‚úÖ</div>\n              <div className=\"stat-content\">\n                <div className=\"stat-value\">{stats.tasksCompleted}</div>\n                <div className=\"stat-label\">Tasks Completed</div>\n              </div>\n            </div>\n            \n            <div className=\"stat-card warning\">\n              <div className=\"stat-icon\">‚ö°</div>\n              <div className=\"stat-content\">\n                <div className=\"stat-value\">{averageEfficiency.toFixed(1)}%</div>\n                <div className=\"stat-label\">Avg Efficiency</div>\n              </div>\n            </div>\n            \n            <div className=\"stat-card info\">\n              <div className=\"stat-icon\">üìä</div>\n              <div className=\"stat-content\">\n                <div className=\"stat-value\">{stats.processingUnits}</div>\n                <div className=\"stat-label\">Processing Units</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Agent Types Distribution */}\n        <div className=\"stat-section agent-types\">\n          <h2>Agent Types</h2>\n          <div className=\"agent-type-grid\">\n            {Object.entries(agentsByType).map(([type, count]) => (\n              <div key={type} className=\"agent-type-card\">\n                <div className=\"agent-type-header\">\n                  <div className={`agent-type-icon ${type}`}>\n                    {type === 'researcher' && 'üî¨'}\n                    {type === 'coder' && 'üíª'}\n                    {type === 'tester' && 'üß™'}\n                    {type === 'reviewer' && 'üëÅÔ∏è'}\n                    {type === 'debugger' && 'üêõ'}\n                  </div>\n                  <div className=\"agent-type-name\">{type}</div>\n                </div>\n                <div className=\"agent-type-count\">{count}</div>\n                <div className=\"agent-type-percentage\">\n                  {((count / agents.length) * 100).toFixed(1)}%\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Status Distribution */}\n        <div className=\"stat-section status-distribution\">\n          <h2>Agent Status</h2>\n          <div className=\"status-bars\">\n            {Object.entries(agentsByStatus).map(([status, count]) => (\n              <div key={status} className=\"status-bar-container\">\n                <div className=\"status-bar-header\">\n                  <span className=\"status-name\">{status}</span>\n                  <span className=\"status-count\">{count}</span>\n                </div>\n                <div className=\"status-bar\">\n                  <div \n                    className={`status-fill ${status}`}\n                    style={{ width: `${(count / agents.length) * 100}%` }}\n                  ></div>\n                </div>\n                <div className=\"status-percentage\">\n                  {((count / agents.length) * 100).toFixed(1)}%\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Performance Metrics */}\n        <div className=\"stat-section performance\">\n          <h2>Performance Metrics</h2>\n          <div className=\"performance-grid\">\n            <div className=\"performance-metric\">\n              <h3>Network Efficiency</h3>\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{stats.networkEfficiency.toFixed(1)}%</div>\n                <div className=\"metric-bar\">\n                  <div \n                    className=\"metric-fill efficiency\"\n                    style={{ width: `${stats.networkEfficiency}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"performance-metric\">\n              <h3>ASI Progress</h3>\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{stats.asiProgress.toFixed(1)}%</div>\n                <div className=\"metric-bar\">\n                  <div \n                    className=\"metric-fill progress\"\n                    style={{ width: `${stats.asiProgress}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"performance-metric\">\n              <h3>Total Tasks</h3>\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{totalTasksCompleted}</div>\n                <div className=\"metric-subtitle\">across all agents</div>\n              </div>\n            </div>\n            \n            <div className=\"performance-metric\">\n              <h3>Global Contributors</h3>\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{stats.globalContributors.toLocaleString()}</div>\n                <div className=\"metric-subtitle\">worldwide</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time Activity */}\n        <div className=\"stat-section activity\">\n          <h2>Real-time Activity</h2>\n          <div className=\"activity-feed\">\n            {agents.filter(agent => agent.status === 'active').slice(0, 8).map(agent => (\n              <div key={agent.id} className=\"activity-item\">\n                <div className={`activity-indicator ${agent.type}`}></div>\n                <div className=\"activity-details\">\n                  <div className=\"activity-agent\">{agent.name}</div>\n                  <div className=\"activity-task\">{agent.currentTask}</div>\n                  <div className=\"activity-repo\">{agent.repository}</div>\n                </div>\n                <div className=\"activity-progress\">\n                  <div className=\"progress-circle\">\n                    <svg viewBox=\"0 0 36 36\" className=\"circular-chart\">\n                      <path className=\"circle-bg\"\n                        d=\"M18 2.0845\n                          a 15.9155 15.9155 0 0 1 0 31.831\n                          a 15.9155 15.9155 0 0 1 0 -31.831\"\n                      />\n                      <path className=\"circle\"\n                        strokeDasharray={`${agent.progress * 100}, 100`}\n                        d=\"M18 2.0845\n                          a 15.9155 15.9155 0 0 1 0 31.831\n                          a 15.9155 15.9155 0 0 1 0 -31.831\"\n                      />\n                      <text x=\"18\" y=\"20.35\" className=\"percentage\">{Math.round(agent.progress * 100)}%</text>\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StatisticsView"],"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","ignoreList":[]}