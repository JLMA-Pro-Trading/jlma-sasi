95a28b41eb2c71cec39708308cf34008
/* istanbul ignore next */
function cov_25qrglvgzl() {
  var path = "/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/RepositoryList.tsx";
  var hash = "ef24ac30d8c6c525f08d479f4b65e6e0994a0a2d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/RepositoryList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 123,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 46
        },
        end: {
          line: 6,
          column: 56
        }
      },
      "2": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 49
        }
      },
      "3": {
        start: {
          line: 8,
          column: 40
        },
        end: {
          line: 8,
          column: 52
        }
      },
      "4": {
        start: {
          line: 9,
          column: 44
        },
        end: {
          line: 9,
          column: 59
        }
      },
      "5": {
        start: {
          line: 10,
          column: 38
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "6": {
        start: {
          line: 11,
          column: 44
        },
        end: {
          line: 11,
          column: 59
        }
      },
      "7": {
        start: {
          line: 12,
          column: 35
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "8": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 15,
          column: 73
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "10": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 52
        }
      },
      "11": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "12": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 97
        }
      },
      "13": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 95
        }
      },
      "14": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "15": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "16": {
        start: {
          line: 32,
          column: 34
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "18": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "20": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "21": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "22": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "23": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "24": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "25": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 37
        }
      },
      "26": {
        start: {
          line: 44,
          column: 30
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "27": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "28": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 61
        }
      },
      "29": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "30": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 49,
          column: 75
        }
      },
      "31": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 75
        }
      },
      "32": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 51,
          column: 69
        }
      },
      "33": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 69
        }
      },
      "34": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 53,
          column: 74
        }
      },
      "35": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 74
        }
      },
      "36": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 72
        }
      },
      "37": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "38": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 30
        }
      },
      "39": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "40": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "41": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "42": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "43": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 63,
          column: 38
        }
      },
      "44": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 38
        }
      },
      "45": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "46": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "47": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 53
        }
      },
      "48": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "49": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 27
        }
      },
      "50": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "51": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "52": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "53": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "54": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 75,
          column: 76
        }
      },
      "55": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "56": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 68
        }
      },
      "57": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 23
        }
      },
      "58": {
        start: {
          line: 80,
          column: 36
        },
        end: {
          line: 80,
          column: 41
        }
      },
      "59": {
        start: {
          line: 81,
          column: 30
        },
        end: {
          line: 81,
          column: 56
        }
      },
      "60": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "61": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 35
        }
      },
      "62": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 29
        }
      },
      "63": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 35
        }
      },
      "64": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "65": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 61
        }
      },
      "66": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 65
        }
      },
      "67": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 35
        }
      },
      "68": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 122,
          column: 1463
        }
      },
      "69": {
        start: {
          line: 112,
          column: 436
        },
        end: {
          line: 112,
          column: 457
        }
      },
      "70": {
        start: {
          line: 112,
          column: 704
        },
        end: {
          line: 112,
          column: 733
        }
      },
      "71": {
        start: {
          line: 112,
          column: 912
        },
        end: {
          line: 112,
          column: 937
        }
      },
      "72": {
        start: {
          line: 113,
          column: 37
        },
        end: {
          line: 113,
          column: 64
        }
      },
      "73": {
        start: {
          line: 114,
          column: 42
        },
        end: {
          line: 114,
          column: 68
        }
      },
      "74": {
        start: {
          line: 115,
          column: 43
        },
        end: {
          line: 115,
          column: 79
        }
      },
      "75": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 119,
          column: 407
        }
      },
      "76": {
        start: {
          line: 116,
          column: 1023
        },
        end: {
          line: 116,
          column: 1046
        }
      },
      "77": {
        start: {
          line: 116,
          column: 1398
        },
        end: {
          line: 116,
          column: 1459
        }
      },
      "78": {
        start: {
          line: 122,
          column: 162
        },
        end: {
          line: 122,
          column: 184
        }
      },
      "79": {
        start: {
          line: 122,
          column: 255
        },
        end: {
          line: 122,
          column: 274
        }
      },
      "80": {
        start: {
          line: 122,
          column: 444
        },
        end: {
          line: 122,
          column: 466
        }
      },
      "81": {
        start: {
          line: 122,
          column: 791
        },
        end: {
          line: 122,
          column: 819
        }
      },
      "82": {
        start: {
          line: 122,
          column: 1212
        },
        end: {
          line: 122,
          column: 1234
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 23
          },
          end: {
            line: 5,
            column: 24
          }
        },
        loc: {
          start: {
            line: 5,
            column: 45
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 17
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 15,
            column: 73
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 16,
            column: 15
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 34
          },
          end: {
            line: 32,
            column: 35
          }
        },
        loc: {
          start: {
            line: 32,
            column: 44
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 30
          }
        },
        loc: {
          start: {
            line: 35,
            column: 45
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 44,
            column: 30
          },
          end: {
            line: 44,
            column: 31
          }
        },
        loc: {
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 44
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 27
          }
        },
        loc: {
          start: {
            line: 56,
            column: 36
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 56
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 68,
            column: 30
          }
        },
        loc: {
          start: {
            line: 68,
            column: 42
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 68
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 112,
            column: 430
          },
          end: {
            line: 112,
            column: 431
          }
        },
        loc: {
          start: {
            line: 112,
            column: 436
          },
          end: {
            line: 112,
            column: 457
          }
        },
        line: 112
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 697
          },
          end: {
            line: 112,
            column: 698
          }
        },
        loc: {
          start: {
            line: 112,
            column: 704
          },
          end: {
            line: 112,
            column: 733
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 112,
            column: 905
          },
          end: {
            line: 112,
            column: 906
          }
        },
        loc: {
          start: {
            line: 112,
            column: 912
          },
          end: {
            line: 112,
            column: 937
          }
        },
        line: 112
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 112,
            column: 1377
          },
          end: {
            line: 112,
            column: 1378
          }
        },
        loc: {
          start: {
            line: 112,
            column: 1385
          },
          end: {
            line: 120,
            column: 17
          }
        },
        line: 112
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 116,
            column: 1017
          },
          end: {
            line: 116,
            column: 1018
          }
        },
        loc: {
          start: {
            line: 116,
            column: 1023
          },
          end: {
            line: 116,
            column: 1046
          }
        },
        line: 116
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 116,
            column: 1389
          },
          end: {
            line: 116,
            column: 1390
          }
        },
        loc: {
          start: {
            line: 116,
            column: 1398
          },
          end: {
            line: 116,
            column: 1459
          }
        },
        line: 116
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 122,
            column: 156
          },
          end: {
            line: 122,
            column: 157
          }
        },
        loc: {
          start: {
            line: 122,
            column: 162
          },
          end: {
            line: 122,
            column: 184
          }
        },
        line: 122
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 122,
            column: 248
          },
          end: {
            line: 122,
            column: 249
          }
        },
        loc: {
          start: {
            line: 122,
            column: 255
          },
          end: {
            line: 122,
            column: 274
          }
        },
        line: 122
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 122,
            column: 438
          },
          end: {
            line: 122,
            column: 439
          }
        },
        loc: {
          start: {
            line: 122,
            column: 444
          },
          end: {
            line: 122,
            column: 466
          }
        },
        line: 122
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 122,
            column: 784
          },
          end: {
            line: 122,
            column: 785
          }
        },
        loc: {
          start: {
            line: 122,
            column: 791
          },
          end: {
            line: 122,
            column: 819
          }
        },
        line: 122
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 122,
            column: 1206
          },
          end: {
            line: 122,
            column: 1207
          }
        },
        loc: {
          start: {
            line: 122,
            column: 1212
          },
          end: {
            line: 122,
            column: 1234
          }
        },
        line: 122
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 15,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 82
          }
        }, {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 14,
            column: 67
          }
        }, {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 73
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 19,
            column: 52
          }
        }, {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 21,
            column: 55
          }
        }, {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 23,
            column: 97
          }
        }, {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 25,
            column: 95
          }
        }, {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 27,
            column: 41
          }
        }, {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 29,
            column: 25
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 37,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 37,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 63,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 63,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "10": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 65,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 65,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 975
          },
          end: {
            line: 116,
            column: 1004
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 992
          },
          end: {
            line: 116,
            column: 999
          }
        }, {
          start: {
            line: 116,
            column: 1002
          },
          end: {
            line: 116,
            column: 1004
          }
        }],
        line: 116
      },
      "14": {
        loc: {
          start: {
            line: 116,
            column: 1055
          },
          end: {
            line: 116,
            column: 1116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 1072
          },
          end: {
            line: 116,
            column: 1090
          }
        }, {
          start: {
            line: 116,
            column: 1093
          },
          end: {
            line: 116,
            column: 1116
          }
        }],
        line: 116
      },
      "15": {
        loc: {
          start: {
            line: 116,
            column: 1129
          },
          end: {
            line: 116,
            column: 1157
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 1146
          },
          end: {
            line: 116,
            column: 1150
          }
        }, {
          start: {
            line: 116,
            column: 1153
          },
          end: {
            line: 116,
            column: 1157
          }
        }],
        line: 116
      },
      "16": {
        loc: {
          start: {
            line: 116,
            column: 1159
          },
          end: {
            line: 116,
            column: 1194
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 1176
          },
          end: {
            line: 116,
            column: 1184
          }
        }, {
          start: {
            line: 116,
            column: 1187
          },
          end: {
            line: 116,
            column: 1194
          }
        }],
        line: 116
      },
      "17": {
        loc: {
          start: {
            line: 120,
            column: 23
          },
          end: {
            line: 122,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 23
          },
          end: {
            line: 120,
            column: 58
          }
        }, {
          start: {
            line: 120,
            column: 63
          },
          end: {
            line: 122,
            column: 85
          }
        }],
        line: 120
      },
      "18": {
        loc: {
          start: {
            line: 120,
            column: 184
          },
          end: {
            line: 122,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 30
          },
          end: {
            line: 121,
            column: 95
          }
        }, {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 78
          }
        }],
        line: 120
      },
      "19": {
        loc: {
          start: {
            line: 122,
            column: 88
          },
          end: {
            line: 122,
            column: 1457
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 88
          },
          end: {
            line: 122,
            column: 100
          }
        }, {
          start: {
            line: 122,
            column: 105
          },
          end: {
            line: 122,
            column: 1456
          }
        }],
        line: 122
      },
      "20": {
        loc: {
          start: {
            line: 122,
            column: 1351
          },
          end: {
            line: 122,
            column: 1384
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 1351
          },
          end: {
            line: 122,
            column: 1363
          }
        }, {
          start: {
            line: 122,
            column: 1367
          },
          end: {
            line: 122,
            column: 1384
          }
        }],
        line: 122
      },
      "21": {
        loc: {
          start: {
            line: 122,
            column: 1396
          },
          end: {
            line: 122,
            column: 1438
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 1411
          },
          end: {
            line: 122,
            column: 1422
          }
        }, {
          start: {
            line: 122,
            column: 1425
          },
          end: {
            line: 122,
            column: 1438
          }
        }],
        line: 122
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0, 0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/RepositoryList.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/RepositoryList.tsx"],
      sourcesContent: ["import React, { useState } from 'react'\nimport { Repository, useSwarm } from '../contexts/SwarmContext'\nimport '../styles/ProjectList.css'\n\ninterface RepositoryListProps {\n  repositories: Repository[]\n}\n\nconst RepositoryList: React.FC<RepositoryListProps> = ({ repositories }) => {\n  const { voteForProject, addRepository } = useSwarm()\n  const [sortBy, setSortBy] = useState<'name' | 'agents' | 'progress' | 'activity' | 'votes'>('votes')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [showAddModal, setShowAddModal] = useState(false)\n  const [githubUrl, setGithubUrl] = useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const filteredAndSortedRepos = repositories\n    .filter(repo => \n      repo.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      repo.owner.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      repo.description.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.name.localeCompare(b.name)\n        case 'agents':\n          return b.activeAgents - a.activeAgents\n        case 'progress':\n          return (b.completedIssues / b.totalIssues) - (a.completedIssues / a.totalIssues)\n        case 'activity':\n          return new Date(b.lastActivity).getTime() - new Date(a.lastActivity).getTime()\n        case 'votes':\n          return b.votes - a.votes\n        default:\n          return 0\n      }\n    })\n\n  const getProgressPercentage = (repo: Repository): number => {\n    return (repo.completedIssues / repo.totalIssues) * 100\n  }\n\n  const getProgressColor = (percentage: number): string => {\n    if (percentage >= 80) return 'var(--success-text)'\n    if (percentage >= 60) return 'var(--accent-text)'\n    if (percentage >= 40) return 'var(--secondary-text)'\n    return 'var(--warning-text)'\n  }\n\n  const getActivityStatus = (lastActivity: Date): { status: string; color: string } => {\n    const now = new Date()\n    const diffMs = now.getTime() - lastActivity.getTime()\n    const diffMins = Math.floor(diffMs / (1000 * 60))\n    \n    if (diffMins < 5) return { status: 'Very Active', color: 'var(--success-text)' }\n    if (diffMins < 30) return { status: 'Active', color: 'var(--accent-text)' }\n    if (diffMins < 120) return { status: 'Moderate', color: 'var(--secondary-text)' }\n    return { status: 'Low Activity', color: 'var(--warning-text)' }\n  }\n\n  const formatTimeAgo = (date: Date): string => {\n    const now = new Date()\n    const diffMs = now.getTime() - date.getTime()\n    const diffMins = Math.floor(diffMs / (1000 * 60))\n    \n    if (diffMins < 1) return 'Just now'\n    if (diffMins < 60) return `${diffMins}m ago`\n    if (diffMins < 1440) return `${Math.floor(diffMins / 60)}h ago`\n    return `${Math.floor(diffMins / 1440)}d ago`\n  }\n\n  const handleAddProject = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!githubUrl.trim()) return\n    \n    setIsSubmitting(true)\n    \n    try {\n      // Extract repository info from GitHub URL\n      const match = githubUrl.match(/github\\.com\\/([^\\/]+)\\/([^\\/]+)/)\n      if (!match) {\n        alert('Please enter a valid GitHub repository URL')\n        return\n      }\n      \n      const [, owner, name] = match\n      const cleanName = name.replace(/\\.git$/, '')\n      \n      // TODO: In a real implementation, you would fetch from GitHub API\n      // For now, we'll create a mock repository\n      const newRepo: Repository = {\n        id: `repo_${Date.now()}`,\n        name: cleanName,\n        owner: owner,\n        description: 'Newly added repository from GitHub',\n        activeAgents: 0,\n        totalIssues: 0,\n        completedIssues: 0,\n        openPullRequests: 0,\n        lastActivity: new Date(),\n        techStack: ['JavaScript'], // Default tech stack\n        votes: 0,\n        userVoted: false\n      }\n      \n      // Add repository to context\n      addRepository(newRepo)\n      \n      setGithubUrl('')\n      setShowAddModal(false)\n      alert('Project added successfully!')\n      \n    } catch (error) {\n      console.error('Error adding repository:', error)\n      alert('Failed to add repository. Please try again.')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"repository-list\">\n      <div className=\"list-header\">\n        <div className=\"header-left\">\n          <h2 className=\"list-title\">Active Projects</h2>\n          <div className=\"repo-count\">\n            {filteredAndSortedRepos.length} of {repositories.length} projects\n          </div>\n        </div>\n        <button \n          className=\"add-project-btn\"\n          onClick={() => setShowAddModal(true)}\n        >\n          \u2795 Add Project\n        </button>\n      </div>\n\n      <div className=\"list-controls\">\n        <div className=\"search-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Search projects...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n\n        <div className=\"filter-group\">\n          <label>Sort by:</label>\n          <select \n            value={sortBy} \n            onChange={(e) => setSortBy(e.target.value as any)}\n            className=\"filter-select\"\n          >\n            <option value=\"votes\">Vote Count</option>\n            <option value=\"agents\">Active Agents</option>\n            <option value=\"progress\">Progress</option>\n            <option value=\"activity\">Recent Activity</option>\n            <option value=\"name\">Name</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"repository-grid\">\n        {filteredAndSortedRepos.map(repo => {\n          const progress = getProgressPercentage(repo)\n          const progressColor = getProgressColor(progress)\n          const activityStatus = getActivityStatus(repo.lastActivity)\n          \n          return (\n            <div key={repo.id} className=\"repository-card\">\n              <div className=\"repo-header\">\n                <div className=\"repo-info\">\n                  <h3 className=\"repo-name\">{repo.name}</h3>\n                  <p className=\"repo-owner\">by {repo.owner}</p>\n                </div>\n                <div className=\"repo-status\">\n                  <span \n                    className=\"activity-indicator\"\n                    style={{ color: activityStatus.color }}\n                  >\n                    {activityStatus.status}\n                  </span>\n                  <span className=\"last-activity\">\n                    {formatTimeAgo(repo.lastActivity)}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"repo-description\">\n                <p>{repo.description}</p>\n              </div>\n\n              <div className=\"voting-section\">\n                <div className=\"vote-info\">\n                  <span className=\"vote-count\">{repo.votes}</span>\n                  <span className=\"vote-label\">votes</span>\n                </div>\n                <button \n                  className={`vote-btn ${repo.userVoted ? 'voted' : ''}`}\n                  onClick={() => voteForProject(repo.id)}\n                  title={repo.userVoted ? 'Remove your vote' : 'Vote for this project'}\n                >\n                  {repo.userVoted ? '\uD83D\uDC4D' : '\uD83D\uDC4D'}\n                  {repo.userVoted ? ' Voted' : ' Vote'}\n                </button>\n              </div>\n\n              <div className=\"tech-stack\">\n                <div className=\"tech-label\">Tech Stack:</div>\n                <div className=\"tech-tags\">\n                  {repo.techStack.map(tech => (\n                    <span key={tech} className=\"tech-tag\">{tech}</span>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"repo-metrics\">\n                <div className=\"metric-grid\">\n                  <div className=\"metric-item\">\n                    <span className=\"metric-icon\">\uD83E\uDD16</span>\n                    <div className=\"metric-content\">\n                      <span className=\"metric-value\">{repo.activeAgents}</span>\n                      <span className=\"metric-label\">Active Agents</span>\n                    </div>\n                  </div>\n\n                  <div className=\"metric-item\">\n                    <span className=\"metric-icon\">\uD83D\uDCCB</span>\n                    <div className=\"metric-content\">\n                      <span className=\"metric-value\">{repo.totalIssues}</span>\n                      <span className=\"metric-label\">Total Issues</span>\n                    </div>\n                  </div>\n\n                  <div className=\"metric-item\">\n                    <span className=\"metric-icon\">\u2705</span>\n                    <div className=\"metric-content\">\n                      <span className=\"metric-value\">{repo.completedIssues}</span>\n                      <span className=\"metric-label\">Completed</span>\n                    </div>\n                  </div>\n\n                  <div className=\"metric-item\">\n                    <span className=\"metric-icon\">\uD83D\uDD04</span>\n                    <div className=\"metric-content\">\n                      <span className=\"metric-value\">{repo.openPullRequests}</span>\n                      <span className=\"metric-label\">Open PRs</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"progress-section\">\n                <div className=\"progress-header\">\n                  <span className=\"progress-label\">Completion Progress</span>\n                  <span \n                    className=\"progress-percentage\"\n                    style={{ color: progressColor }}\n                  >\n                    {progress.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"progress-bar\">\n                  <div \n                    className=\"progress-fill\"\n                    style={{ \n                      width: `${progress}%`,\n                      backgroundColor: progressColor\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"repo-actions\">\n                <button className=\"action-btn primary\">\n                  \uD83D\uDC41\uFE0F View Details\n                </button>\n                <button className=\"action-btn secondary\">\n                  \uD83D\uDCCA Analytics\n                </button>\n                <button className=\"action-btn secondary\">\n                  \uD83D\uDD27 Configure\n                </button>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n\n      {filteredAndSortedRepos.length === 0 && (\n        <div className=\"empty-state\">\n          <h3>No projects found</h3>\n          <p>\n            {searchTerm \n              ? `No projects match \"${searchTerm}\". Try a different search term.`\n              : 'No projects are currently active in the swarm.'\n            }\n          </p>\n        </div>\n      )}\n\n      {showAddModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowAddModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>Add GitHub Project</h3>\n              <button \n                className=\"close-btn\"\n                onClick={() => setShowAddModal(false)}\n              >\n                \u2715\n              </button>\n            </div>\n            \n            <form onSubmit={handleAddProject} className=\"add-project-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"github-url\">GitHub Repository URL</label>\n                <input\n                  id=\"github-url\"\n                  type=\"url\"\n                  value={githubUrl}\n                  onChange={(e) => setGithubUrl(e.target.value)}\n                  placeholder=\"https://github.com/username/repository\"\n                  required\n                  disabled={isSubmitting}\n                  className=\"github-input\"\n                />\n                <small className=\"form-hint\">\n                  Enter a valid GitHub repository URL (e.g., https://github.com/microsoft/vscode)\n                </small>\n              </div>\n              \n              <div className=\"form-actions\">\n                <button\n                  type=\"button\"\n                  className=\"cancel-btn\"\n                  onClick={() => setShowAddModal(false)}\n                  disabled={isSubmitting}\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"submit-btn\"\n                  disabled={isSubmitting || !githubUrl.trim()}\n                >\n                  {isSubmitting ? 'Adding...' : 'Add Project'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default RepositoryList"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ef24ac30d8c6c525f08d479f4b65e6e0994a0a2d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25qrglvgzl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25qrglvgzl();
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React, { useState } from 'react';
import { useSwarm } from '../contexts/SwarmContext';
import '../styles/ProjectList.css';
/* istanbul ignore next */
cov_25qrglvgzl().s[0]++;
const RepositoryList = ({
  repositories
}) => {
  /* istanbul ignore next */
  cov_25qrglvgzl().f[0]++;
  const {
    voteForProject,
    addRepository
  } =
  /* istanbul ignore next */
  (cov_25qrglvgzl().s[1]++, useSwarm());
  const [sortBy, setSortBy] =
  /* istanbul ignore next */
  (cov_25qrglvgzl().s[2]++, useState('votes'));
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_25qrglvgzl().s[3]++, useState(''));
  const [showAddModal, setShowAddModal] =
  /* istanbul ignore next */
  (cov_25qrglvgzl().s[4]++, useState(false));
  const [githubUrl, setGithubUrl] =
  /* istanbul ignore next */
  (cov_25qrglvgzl().s[5]++, useState(''));
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_25qrglvgzl().s[6]++, useState(false));
  const filteredAndSortedRepos =
  /* istanbul ignore next */
  (cov_25qrglvgzl().s[7]++, repositories.filter(repo => {
    /* istanbul ignore next */
    cov_25qrglvgzl().f[1]++;
    cov_25qrglvgzl().s[8]++;
    return /* istanbul ignore next */(cov_25qrglvgzl().b[0][0]++, repo.name.toLowerCase().includes(searchTerm.toLowerCase())) ||
    /* istanbul ignore next */
    (cov_25qrglvgzl().b[0][1]++, repo.owner.toLowerCase().includes(searchTerm.toLowerCase())) ||
    /* istanbul ignore next */
    (cov_25qrglvgzl().b[0][2]++, repo.description.toLowerCase().includes(searchTerm.toLowerCase()));
  }).sort((a, b) => {
    /* istanbul ignore next */
    cov_25qrglvgzl().f[2]++;
    cov_25qrglvgzl().s[9]++;
    switch (sortBy) {
      case 'name':
        /* istanbul ignore next */
        cov_25qrglvgzl().b[1][0]++;
        cov_25qrglvgzl().s[10]++;
        return a.name.localeCompare(b.name);
      case 'agents':
        /* istanbul ignore next */
        cov_25qrglvgzl().b[1][1]++;
        cov_25qrglvgzl().s[11]++;
        return b.activeAgents - a.activeAgents;
      case 'progress':
        /* istanbul ignore next */
        cov_25qrglvgzl().b[1][2]++;
        cov_25qrglvgzl().s[12]++;
        return b.completedIssues / b.totalIssues - a.completedIssues / a.totalIssues;
      case 'activity':
        /* istanbul ignore next */
        cov_25qrglvgzl().b[1][3]++;
        cov_25qrglvgzl().s[13]++;
        return new Date(b.lastActivity).getTime() - new Date(a.lastActivity).getTime();
      case 'votes':
        /* istanbul ignore next */
        cov_25qrglvgzl().b[1][4]++;
        cov_25qrglvgzl().s[14]++;
        return b.votes - a.votes;
      default:
        /* istanbul ignore next */
        cov_25qrglvgzl().b[1][5]++;
        cov_25qrglvgzl().s[15]++;
        return 0;
    }
  }));
  /* istanbul ignore next */
  cov_25qrglvgzl().s[16]++;
  const getProgressPercentage = repo => {
    /* istanbul ignore next */
    cov_25qrglvgzl().f[3]++;
    cov_25qrglvgzl().s[17]++;
    return repo.completedIssues / repo.totalIssues * 100;
  };
  /* istanbul ignore next */
  cov_25qrglvgzl().s[18]++;
  const getProgressColor = percentage => {
    /* istanbul ignore next */
    cov_25qrglvgzl().f[4]++;
    cov_25qrglvgzl().s[19]++;
    if (percentage >= 80) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[2][0]++;
      cov_25qrglvgzl().s[20]++;
      return 'var(--success-text)';
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[2][1]++;
    }
    cov_25qrglvgzl().s[21]++;
    if (percentage >= 60) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[3][0]++;
      cov_25qrglvgzl().s[22]++;
      return 'var(--accent-text)';
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[3][1]++;
    }
    cov_25qrglvgzl().s[23]++;
    if (percentage >= 40) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[4][0]++;
      cov_25qrglvgzl().s[24]++;
      return 'var(--secondary-text)';
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[4][1]++;
    }
    cov_25qrglvgzl().s[25]++;
    return 'var(--warning-text)';
  };
  /* istanbul ignore next */
  cov_25qrglvgzl().s[26]++;
  const getActivityStatus = lastActivity => {
    /* istanbul ignore next */
    cov_25qrglvgzl().f[5]++;
    const now =
    /* istanbul ignore next */
    (cov_25qrglvgzl().s[27]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_25qrglvgzl().s[28]++, now.getTime() - lastActivity.getTime());
    const diffMins =
    /* istanbul ignore next */
    (cov_25qrglvgzl().s[29]++, Math.floor(diffMs / (1000 * 60)));
    /* istanbul ignore next */
    cov_25qrglvgzl().s[30]++;
    if (diffMins < 5) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[5][0]++;
      cov_25qrglvgzl().s[31]++;
      return {
        status: 'Very Active',
        color: 'var(--success-text)'
      };
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[5][1]++;
    }
    cov_25qrglvgzl().s[32]++;
    if (diffMins < 30) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[6][0]++;
      cov_25qrglvgzl().s[33]++;
      return {
        status: 'Active',
        color: 'var(--accent-text)'
      };
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[6][1]++;
    }
    cov_25qrglvgzl().s[34]++;
    if (diffMins < 120) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[7][0]++;
      cov_25qrglvgzl().s[35]++;
      return {
        status: 'Moderate',
        color: 'var(--secondary-text)'
      };
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[7][1]++;
    }
    cov_25qrglvgzl().s[36]++;
    return {
      status: 'Low Activity',
      color: 'var(--warning-text)'
    };
  };
  /* istanbul ignore next */
  cov_25qrglvgzl().s[37]++;
  const formatTimeAgo = date => {
    /* istanbul ignore next */
    cov_25qrglvgzl().f[6]++;
    const now =
    /* istanbul ignore next */
    (cov_25qrglvgzl().s[38]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_25qrglvgzl().s[39]++, now.getTime() - date.getTime());
    const diffMins =
    /* istanbul ignore next */
    (cov_25qrglvgzl().s[40]++, Math.floor(diffMs / (1000 * 60)));
    /* istanbul ignore next */
    cov_25qrglvgzl().s[41]++;
    if (diffMins < 1) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[8][0]++;
      cov_25qrglvgzl().s[42]++;
      return 'Just now';
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[8][1]++;
    }
    cov_25qrglvgzl().s[43]++;
    if (diffMins < 60) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[9][0]++;
      cov_25qrglvgzl().s[44]++;
      return `${diffMins}m ago`;
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[9][1]++;
    }
    cov_25qrglvgzl().s[45]++;
    if (diffMins < 1440) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[10][0]++;
      cov_25qrglvgzl().s[46]++;
      return `${Math.floor(diffMins / 60)}h ago`;
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[10][1]++;
    }
    cov_25qrglvgzl().s[47]++;
    return `${Math.floor(diffMins / 1440)}d ago`;
  };
  /* istanbul ignore next */
  cov_25qrglvgzl().s[48]++;
  const handleAddProject = async e => {
    /* istanbul ignore next */
    cov_25qrglvgzl().f[7]++;
    cov_25qrglvgzl().s[49]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_25qrglvgzl().s[50]++;
    if (!githubUrl.trim()) {
      /* istanbul ignore next */
      cov_25qrglvgzl().b[11][0]++;
      cov_25qrglvgzl().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_25qrglvgzl().b[11][1]++;
    }
    cov_25qrglvgzl().s[52]++;
    setIsSubmitting(true);
    /* istanbul ignore next */
    cov_25qrglvgzl().s[53]++;
    try {
      // Extract repository info from GitHub URL
      const match =
      /* istanbul ignore next */
      (cov_25qrglvgzl().s[54]++, githubUrl.match(/github\.com\/([^\/]+)\/([^\/]+)/));
      /* istanbul ignore next */
      cov_25qrglvgzl().s[55]++;
      if (!match) {
        /* istanbul ignore next */
        cov_25qrglvgzl().b[12][0]++;
        cov_25qrglvgzl().s[56]++;
        alert('Please enter a valid GitHub repository URL');
        /* istanbul ignore next */
        cov_25qrglvgzl().s[57]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_25qrglvgzl().b[12][1]++;
      }
      const [, owner, name] =
      /* istanbul ignore next */
      (cov_25qrglvgzl().s[58]++, match);
      const cleanName =
      /* istanbul ignore next */
      (cov_25qrglvgzl().s[59]++, name.replace(/\.git$/, ''));
      // TODO: In a real implementation, you would fetch from GitHub API
      // For now, we'll create a mock repository
      const newRepo =
      /* istanbul ignore next */
      (cov_25qrglvgzl().s[60]++, {
        id: `repo_${Date.now()}`,
        name: cleanName,
        owner: owner,
        description: 'Newly added repository from GitHub',
        activeAgents: 0,
        totalIssues: 0,
        completedIssues: 0,
        openPullRequests: 0,
        lastActivity: new Date(),
        techStack: ['JavaScript'],
        // Default tech stack
        votes: 0,
        userVoted: false
      });
      // Add repository to context
      /* istanbul ignore next */
      cov_25qrglvgzl().s[61]++;
      addRepository(newRepo);
      /* istanbul ignore next */
      cov_25qrglvgzl().s[62]++;
      setGithubUrl('');
      /* istanbul ignore next */
      cov_25qrglvgzl().s[63]++;
      setShowAddModal(false);
      /* istanbul ignore next */
      cov_25qrglvgzl().s[64]++;
      alert('Project added successfully!');
    } catch (error) {
      /* istanbul ignore next */
      cov_25qrglvgzl().s[65]++;
      console.error('Error adding repository:', error);
      /* istanbul ignore next */
      cov_25qrglvgzl().s[66]++;
      alert('Failed to add repository. Please try again.');
    } finally {
      /* istanbul ignore next */
      cov_25qrglvgzl().s[67]++;
      setIsSubmitting(false);
    }
  };
  /* istanbul ignore next */
  cov_25qrglvgzl().s[68]++;
  return _jsxs("div", {
    className: "repository-list",
    children: [_jsxs("div", {
      className: "list-header",
      children: [_jsxs("div", {
        className: "header-left",
        children: [_jsx("h2", {
          className: "list-title",
          children: "Active Projects"
        }), _jsxs("div", {
          className: "repo-count",
          children: [filteredAndSortedRepos.length, " of ", repositories.length, " projects"]
        })]
      }), _jsx("button", {
        className: "add-project-btn",
        onClick: () => {
          /* istanbul ignore next */
          cov_25qrglvgzl().f[8]++;
          cov_25qrglvgzl().s[69]++;
          return setShowAddModal(true);
        },
        children: "\u2795 Add Project"
      })]
    }), _jsxs("div", {
      className: "list-controls",
      children: [_jsx("div", {
        className: "search-group",
        children: _jsx("input", {
          type: "text",
          placeholder: "Search projects...",
          value: searchTerm,
          onChange: e => {
            /* istanbul ignore next */
            cov_25qrglvgzl().f[9]++;
            cov_25qrglvgzl().s[70]++;
            return setSearchTerm(e.target.value);
          },
          className: "search-input"
        })
      }), _jsxs("div", {
        className: "filter-group",
        children: [_jsx("label", {
          children: "Sort by:"
        }), _jsxs("select", {
          value: sortBy,
          onChange: e => {
            /* istanbul ignore next */
            cov_25qrglvgzl().f[10]++;
            cov_25qrglvgzl().s[71]++;
            return setSortBy(e.target.value);
          },
          className: "filter-select",
          children: [_jsx("option", {
            value: "votes",
            children: "Vote Count"
          }), _jsx("option", {
            value: "agents",
            children: "Active Agents"
          }), _jsx("option", {
            value: "progress",
            children: "Progress"
          }), _jsx("option", {
            value: "activity",
            children: "Recent Activity"
          }), _jsx("option", {
            value: "name",
            children: "Name"
          })]
        })]
      })]
    }), _jsx("div", {
      className: "repository-grid",
      children: filteredAndSortedRepos.map(repo => {
        /* istanbul ignore next */
        cov_25qrglvgzl().f[11]++;
        const progress =
        /* istanbul ignore next */
        (cov_25qrglvgzl().s[72]++, getProgressPercentage(repo));
        const progressColor =
        /* istanbul ignore next */
        (cov_25qrglvgzl().s[73]++, getProgressColor(progress));
        const activityStatus =
        /* istanbul ignore next */
        (cov_25qrglvgzl().s[74]++, getActivityStatus(repo.lastActivity));
        /* istanbul ignore next */
        cov_25qrglvgzl().s[75]++;
        return _jsxs("div", {
          className: "repository-card",
          children: [_jsxs("div", {
            className: "repo-header",
            children: [_jsxs("div", {
              className: "repo-info",
              children: [_jsx("h3", {
                className: "repo-name",
                children: repo.name
              }), _jsxs("p", {
                className: "repo-owner",
                children: ["by ", repo.owner]
              })]
            }), _jsxs("div", {
              className: "repo-status",
              children: [_jsx("span", {
                className: "activity-indicator",
                style: {
                  color: activityStatus.color
                },
                children: activityStatus.status
              }), _jsx("span", {
                className: "last-activity",
                children: formatTimeAgo(repo.lastActivity)
              })]
            })]
          }), _jsx("div", {
            className: "repo-description",
            children: _jsx("p", {
              children: repo.description
            })
          }), _jsxs("div", {
            className: "voting-section",
            children: [_jsxs("div", {
              className: "vote-info",
              children: [_jsx("span", {
                className: "vote-count",
                children: repo.votes
              }), _jsx("span", {
                className: "vote-label",
                children: "votes"
              })]
            }), _jsxs("button", {
              className: `vote-btn ${repo.userVoted ?
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[13][0]++, 'voted') :
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[13][1]++, '')}`,
              onClick: () => {
                /* istanbul ignore next */
                cov_25qrglvgzl().f[12]++;
                cov_25qrglvgzl().s[76]++;
                return voteForProject(repo.id);
              },
              title: repo.userVoted ?
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[14][0]++, 'Remove your vote') :
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[14][1]++, 'Vote for this project'),
              children: [repo.userVoted ?
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[15][0]++, '👍') :
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[15][1]++, '👍'), repo.userVoted ?
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[16][0]++, ' Voted') :
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[16][1]++, ' Vote')]
            })]
          }), _jsxs("div", {
            className: "tech-stack",
            children: [_jsx("div", {
              className: "tech-label",
              children: "Tech Stack:"
            }), _jsx("div", {
              className: "tech-tags",
              children: repo.techStack.map(tech => {
                /* istanbul ignore next */
                cov_25qrglvgzl().f[13]++;
                cov_25qrglvgzl().s[77]++;
                return _jsx("span", {
                  className: "tech-tag",
                  children: tech
                }, tech);
              })
            })]
          }), _jsx("div", {
            className: "repo-metrics",
            children: _jsxs("div", {
              className: "metric-grid",
              children: [_jsxs("div", {
                className: "metric-item",
                children: [_jsx("span", {
                  className: "metric-icon",
                  children: "\uD83E\uDD16"
                }), _jsxs("div", {
                  className: "metric-content",
                  children: [_jsx("span", {
                    className: "metric-value",
                    children: repo.activeAgents
                  }), _jsx("span", {
                    className: "metric-label",
                    children: "Active Agents"
                  })]
                })]
              }), _jsxs("div", {
                className: "metric-item",
                children: [_jsx("span", {
                  className: "metric-icon",
                  children: "\uD83D\uDCCB"
                }), _jsxs("div", {
                  className: "metric-content",
                  children: [_jsx("span", {
                    className: "metric-value",
                    children: repo.totalIssues
                  }), _jsx("span", {
                    className: "metric-label",
                    children: "Total Issues"
                  })]
                })]
              }), _jsxs("div", {
                className: "metric-item",
                children: [_jsx("span", {
                  className: "metric-icon",
                  children: "\u2705"
                }), _jsxs("div", {
                  className: "metric-content",
                  children: [_jsx("span", {
                    className: "metric-value",
                    children: repo.completedIssues
                  }), _jsx("span", {
                    className: "metric-label",
                    children: "Completed"
                  })]
                })]
              }), _jsxs("div", {
                className: "metric-item",
                children: [_jsx("span", {
                  className: "metric-icon",
                  children: "\uD83D\uDD04"
                }), _jsxs("div", {
                  className: "metric-content",
                  children: [_jsx("span", {
                    className: "metric-value",
                    children: repo.openPullRequests
                  }), _jsx("span", {
                    className: "metric-label",
                    children: "Open PRs"
                  })]
                })]
              })]
            })
          }), _jsxs("div", {
            className: "progress-section",
            children: [_jsxs("div", {
              className: "progress-header",
              children: [_jsx("span", {
                className: "progress-label",
                children: "Completion Progress"
              }), _jsxs("span", {
                className: "progress-percentage",
                style: {
                  color: progressColor
                },
                children: [progress.toFixed(1), "%"]
              })]
            }), _jsx("div", {
              className: "progress-bar",
              children: _jsx("div", {
                className: "progress-fill",
                style: {
                  width: `${progress}%`,
                  backgroundColor: progressColor
                }
              })
            })]
          }), _jsxs("div", {
            className: "repo-actions",
            children: [_jsx("button", {
              className: "action-btn primary",
              children: "\uD83D\uDC41\uFE0F View Details"
            }), _jsx("button", {
              className: "action-btn secondary",
              children: "\uD83D\uDCCA Analytics"
            }), _jsx("button", {
              className: "action-btn secondary",
              children: "\uD83D\uDD27 Configure"
            })]
          })]
        }, repo.id);
      })
    }),
    /* istanbul ignore next */
    (cov_25qrglvgzl().b[17][0]++, filteredAndSortedRepos.length === 0) &&
    /* istanbul ignore next */
    (cov_25qrglvgzl().b[17][1]++, _jsxs("div", {
      className: "empty-state",
      children: [_jsx("h3", {
        children: "No projects found"
      }), _jsx("p", {
        children: searchTerm ?
        /* istanbul ignore next */
        (cov_25qrglvgzl().b[18][0]++, `No projects match "${searchTerm}". Try a different search term.`) :
        /* istanbul ignore next */
        (cov_25qrglvgzl().b[18][1]++, 'No projects are currently active in the swarm.')
      })]
    })),
    /* istanbul ignore next */
    (cov_25qrglvgzl().b[19][0]++, showAddModal) &&
    /* istanbul ignore next */
    (cov_25qrglvgzl().b[19][1]++, _jsx("div", {
      className: "modal-overlay",
      onClick: () => {
        /* istanbul ignore next */
        cov_25qrglvgzl().f[14]++;
        cov_25qrglvgzl().s[78]++;
        return setShowAddModal(false);
      },
      children: _jsxs("div", {
        className: "modal-content",
        onClick: e => {
          /* istanbul ignore next */
          cov_25qrglvgzl().f[15]++;
          cov_25qrglvgzl().s[79]++;
          return e.stopPropagation();
        },
        children: [_jsxs("div", {
          className: "modal-header",
          children: [_jsx("h3", {
            children: "Add GitHub Project"
          }), _jsx("button", {
            className: "close-btn",
            onClick: () => {
              /* istanbul ignore next */
              cov_25qrglvgzl().f[16]++;
              cov_25qrglvgzl().s[80]++;
              return setShowAddModal(false);
            },
            children: "\u2715"
          })]
        }), _jsxs("form", {
          onSubmit: handleAddProject,
          className: "add-project-form",
          children: [_jsxs("div", {
            className: "form-group",
            children: [_jsx("label", {
              htmlFor: "github-url",
              children: "GitHub Repository URL"
            }), _jsx("input", {
              id: "github-url",
              type: "url",
              value: githubUrl,
              onChange: e => {
                /* istanbul ignore next */
                cov_25qrglvgzl().f[17]++;
                cov_25qrglvgzl().s[81]++;
                return setGithubUrl(e.target.value);
              },
              placeholder: "https://github.com/username/repository",
              required: true,
              disabled: isSubmitting,
              className: "github-input"
            }), _jsx("small", {
              className: "form-hint",
              children: "Enter a valid GitHub repository URL (e.g., https://github.com/microsoft/vscode)"
            })]
          }), _jsxs("div", {
            className: "form-actions",
            children: [_jsx("button", {
              type: "button",
              className: "cancel-btn",
              onClick: () => {
                /* istanbul ignore next */
                cov_25qrglvgzl().f[18]++;
                cov_25qrglvgzl().s[82]++;
                return setShowAddModal(false);
              },
              disabled: isSubmitting,
              children: "Cancel"
            }), _jsx("button", {
              type: "submit",
              className: "submit-btn",
              disabled:
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[20][0]++, isSubmitting) ||
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[20][1]++, !githubUrl.trim()),
              children: isSubmitting ?
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[21][0]++, 'Adding...') :
              /* istanbul ignore next */
              (cov_25qrglvgzl().b[21][1]++, 'Add Project')
            })]
          })]
        })]
      })
    }))]
  });
};
export default RepositoryList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjVxcmdsdmd6bCIsImFjdHVhbENvdmVyYWdlIiwiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZVN3YXJtIiwicyIsIlJlcG9zaXRvcnlMaXN0IiwicmVwb3NpdG9yaWVzIiwiZiIsInZvdGVGb3JQcm9qZWN0IiwiYWRkUmVwb3NpdG9yeSIsInNvcnRCeSIsInNldFNvcnRCeSIsInNlYXJjaFRlcm0iLCJzZXRTZWFyY2hUZXJtIiwic2hvd0FkZE1vZGFsIiwic2V0U2hvd0FkZE1vZGFsIiwiZ2l0aHViVXJsIiwic2V0R2l0aHViVXJsIiwiaXNTdWJtaXR0aW5nIiwic2V0SXNTdWJtaXR0aW5nIiwiZmlsdGVyZWRBbmRTb3J0ZWRSZXBvcyIsImZpbHRlciIsInJlcG8iLCJiIiwibmFtZSIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJvd25lciIsImRlc2NyaXB0aW9uIiwic29ydCIsImEiLCJsb2NhbGVDb21wYXJlIiwiYWN0aXZlQWdlbnRzIiwiY29tcGxldGVkSXNzdWVzIiwidG90YWxJc3N1ZXMiLCJEYXRlIiwibGFzdEFjdGl2aXR5IiwiZ2V0VGltZSIsInZvdGVzIiwiZ2V0UHJvZ3Jlc3NQZXJjZW50YWdlIiwiZ2V0UHJvZ3Jlc3NDb2xvciIsInBlcmNlbnRhZ2UiLCJnZXRBY3Rpdml0eVN0YXR1cyIsIm5vdyIsImRpZmZNcyIsImRpZmZNaW5zIiwiTWF0aCIsImZsb29yIiwic3RhdHVzIiwiY29sb3IiLCJmb3JtYXRUaW1lQWdvIiwiZGF0ZSIsImhhbmRsZUFkZFByb2plY3QiLCJlIiwicHJldmVudERlZmF1bHQiLCJ0cmltIiwibWF0Y2giLCJhbGVydCIsImNsZWFuTmFtZSIsInJlcGxhY2UiLCJuZXdSZXBvIiwiaWQiLCJvcGVuUHVsbFJlcXVlc3RzIiwidGVjaFN0YWNrIiwidXNlclZvdGVkIiwiZXJyb3IiLCJjb25zb2xlIiwiX2pzeHMiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsIl9qc3giLCJsZW5ndGgiLCJvbkNsaWNrIiwidHlwZSIsInBsYWNlaG9sZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsInRhcmdldCIsIm1hcCIsInByb2dyZXNzIiwicHJvZ3Jlc3NDb2xvciIsImFjdGl2aXR5U3RhdHVzIiwic3R5bGUiLCJ0aXRsZSIsInRlY2giLCJ0b0ZpeGVkIiwid2lkdGgiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzdG9wUHJvcGFnYXRpb24iLCJvblN1Ym1pdCIsImh0bWxGb3IiLCJyZXF1aXJlZCIsImRpc2FibGVkIl0sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvYWdlbnRpc3RzLXF1aWNrc3RhcnQtd29ya3NwYWNlLWJhc2ljL3Nhc2kvc3JjL2NvbXBvbmVudHMvUmVwb3NpdG9yeUxpc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgUmVwb3NpdG9yeSwgdXNlU3dhcm0gfSBmcm9tICcuLi9jb250ZXh0cy9Td2FybUNvbnRleHQnXG5pbXBvcnQgJy4uL3N0eWxlcy9Qcm9qZWN0TGlzdC5jc3MnXG5cbmludGVyZmFjZSBSZXBvc2l0b3J5TGlzdFByb3BzIHtcbiAgcmVwb3NpdG9yaWVzOiBSZXBvc2l0b3J5W11cbn1cblxuY29uc3QgUmVwb3NpdG9yeUxpc3Q6IFJlYWN0LkZDPFJlcG9zaXRvcnlMaXN0UHJvcHM+ID0gKHsgcmVwb3NpdG9yaWVzIH0pID0+IHtcbiAgY29uc3QgeyB2b3RlRm9yUHJvamVjdCwgYWRkUmVwb3NpdG9yeSB9ID0gdXNlU3dhcm0oKVxuICBjb25zdCBbc29ydEJ5LCBzZXRTb3J0QnldID0gdXNlU3RhdGU8J25hbWUnIHwgJ2FnZW50cycgfCAncHJvZ3Jlc3MnIHwgJ2FjdGl2aXR5JyB8ICd2b3Rlcyc+KCd2b3RlcycpXG4gIGNvbnN0IFtzZWFyY2hUZXJtLCBzZXRTZWFyY2hUZXJtXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbc2hvd0FkZE1vZGFsLCBzZXRTaG93QWRkTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtnaXRodWJVcmwsIHNldEdpdGh1YlVybF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2lzU3VibWl0dGluZywgc2V0SXNTdWJtaXR0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIGNvbnN0IGZpbHRlcmVkQW5kU29ydGVkUmVwb3MgPSByZXBvc2l0b3JpZXNcbiAgICAuZmlsdGVyKHJlcG8gPT4gXG4gICAgICByZXBvLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCkpIHx8XG4gICAgICByZXBvLm93bmVyLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoVGVybS50b0xvd2VyQ2FzZSgpKSB8fFxuICAgICAgcmVwby5kZXNjcmlwdGlvbi50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFRlcm0udG9Mb3dlckNhc2UoKSlcbiAgICApXG4gICAgLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgIHN3aXRjaCAoc29ydEJ5KSB7XG4gICAgICAgIGNhc2UgJ25hbWUnOlxuICAgICAgICAgIHJldHVybiBhLm5hbWUubG9jYWxlQ29tcGFyZShiLm5hbWUpXG4gICAgICAgIGNhc2UgJ2FnZW50cyc6XG4gICAgICAgICAgcmV0dXJuIGIuYWN0aXZlQWdlbnRzIC0gYS5hY3RpdmVBZ2VudHNcbiAgICAgICAgY2FzZSAncHJvZ3Jlc3MnOlxuICAgICAgICAgIHJldHVybiAoYi5jb21wbGV0ZWRJc3N1ZXMgLyBiLnRvdGFsSXNzdWVzKSAtIChhLmNvbXBsZXRlZElzc3VlcyAvIGEudG90YWxJc3N1ZXMpXG4gICAgICAgIGNhc2UgJ2FjdGl2aXR5JzpcbiAgICAgICAgICByZXR1cm4gbmV3IERhdGUoYi5sYXN0QWN0aXZpdHkpLmdldFRpbWUoKSAtIG5ldyBEYXRlKGEubGFzdEFjdGl2aXR5KS5nZXRUaW1lKClcbiAgICAgICAgY2FzZSAndm90ZXMnOlxuICAgICAgICAgIHJldHVybiBiLnZvdGVzIC0gYS52b3Rlc1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiAwXG4gICAgICB9XG4gICAgfSlcblxuICBjb25zdCBnZXRQcm9ncmVzc1BlcmNlbnRhZ2UgPSAocmVwbzogUmVwb3NpdG9yeSk6IG51bWJlciA9PiB7XG4gICAgcmV0dXJuIChyZXBvLmNvbXBsZXRlZElzc3VlcyAvIHJlcG8udG90YWxJc3N1ZXMpICogMTAwXG4gIH1cblxuICBjb25zdCBnZXRQcm9ncmVzc0NvbG9yID0gKHBlcmNlbnRhZ2U6IG51bWJlcik6IHN0cmluZyA9PiB7XG4gICAgaWYgKHBlcmNlbnRhZ2UgPj0gODApIHJldHVybiAndmFyKC0tc3VjY2Vzcy10ZXh0KSdcbiAgICBpZiAocGVyY2VudGFnZSA+PSA2MCkgcmV0dXJuICd2YXIoLS1hY2NlbnQtdGV4dCknXG4gICAgaWYgKHBlcmNlbnRhZ2UgPj0gNDApIHJldHVybiAndmFyKC0tc2Vjb25kYXJ5LXRleHQpJ1xuICAgIHJldHVybiAndmFyKC0td2FybmluZy10ZXh0KSdcbiAgfVxuXG4gIGNvbnN0IGdldEFjdGl2aXR5U3RhdHVzID0gKGxhc3RBY3Rpdml0eTogRGF0ZSk6IHsgc3RhdHVzOiBzdHJpbmc7IGNvbG9yOiBzdHJpbmcgfSA9PiB7XG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKVxuICAgIGNvbnN0IGRpZmZNcyA9IG5vdy5nZXRUaW1lKCkgLSBsYXN0QWN0aXZpdHkuZ2V0VGltZSgpXG4gICAgY29uc3QgZGlmZk1pbnMgPSBNYXRoLmZsb29yKGRpZmZNcyAvICgxMDAwICogNjApKVxuICAgIFxuICAgIGlmIChkaWZmTWlucyA8IDUpIHJldHVybiB7IHN0YXR1czogJ1ZlcnkgQWN0aXZlJywgY29sb3I6ICd2YXIoLS1zdWNjZXNzLXRleHQpJyB9XG4gICAgaWYgKGRpZmZNaW5zIDwgMzApIHJldHVybiB7IHN0YXR1czogJ0FjdGl2ZScsIGNvbG9yOiAndmFyKC0tYWNjZW50LXRleHQpJyB9XG4gICAgaWYgKGRpZmZNaW5zIDwgMTIwKSByZXR1cm4geyBzdGF0dXM6ICdNb2RlcmF0ZScsIGNvbG9yOiAndmFyKC0tc2Vjb25kYXJ5LXRleHQpJyB9XG4gICAgcmV0dXJuIHsgc3RhdHVzOiAnTG93IEFjdGl2aXR5JywgY29sb3I6ICd2YXIoLS13YXJuaW5nLXRleHQpJyB9XG4gIH1cblxuICBjb25zdCBmb3JtYXRUaW1lQWdvID0gKGRhdGU6IERhdGUpOiBzdHJpbmcgPT4ge1xuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKClcbiAgICBjb25zdCBkaWZmTXMgPSBub3cuZ2V0VGltZSgpIC0gZGF0ZS5nZXRUaW1lKClcbiAgICBjb25zdCBkaWZmTWlucyA9IE1hdGguZmxvb3IoZGlmZk1zIC8gKDEwMDAgKiA2MCkpXG4gICAgXG4gICAgaWYgKGRpZmZNaW5zIDwgMSkgcmV0dXJuICdKdXN0IG5vdydcbiAgICBpZiAoZGlmZk1pbnMgPCA2MCkgcmV0dXJuIGAke2RpZmZNaW5zfW0gYWdvYFxuICAgIGlmIChkaWZmTWlucyA8IDE0NDApIHJldHVybiBgJHtNYXRoLmZsb29yKGRpZmZNaW5zIC8gNjApfWggYWdvYFxuICAgIHJldHVybiBgJHtNYXRoLmZsb29yKGRpZmZNaW5zIC8gMTQ0MCl9ZCBhZ29gXG4gIH1cblxuICBjb25zdCBoYW5kbGVBZGRQcm9qZWN0ID0gYXN5bmMgKGU6IFJlYWN0LkZvcm1FdmVudCkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIGlmICghZ2l0aHViVXJsLnRyaW0oKSkgcmV0dXJuXG4gICAgXG4gICAgc2V0SXNTdWJtaXR0aW5nKHRydWUpXG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIC8vIEV4dHJhY3QgcmVwb3NpdG9yeSBpbmZvIGZyb20gR2l0SHViIFVSTFxuICAgICAgY29uc3QgbWF0Y2ggPSBnaXRodWJVcmwubWF0Y2goL2dpdGh1YlxcLmNvbVxcLyhbXlxcL10rKVxcLyhbXlxcL10rKS8pXG4gICAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgIGFsZXJ0KCdQbGVhc2UgZW50ZXIgYSB2YWxpZCBHaXRIdWIgcmVwb3NpdG9yeSBVUkwnKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgWywgb3duZXIsIG5hbWVdID0gbWF0Y2hcbiAgICAgIGNvbnN0IGNsZWFuTmFtZSA9IG5hbWUucmVwbGFjZSgvXFwuZ2l0JC8sICcnKVxuICAgICAgXG4gICAgICAvLyBUT0RPOiBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHlvdSB3b3VsZCBmZXRjaCBmcm9tIEdpdEh1YiBBUElcbiAgICAgIC8vIEZvciBub3csIHdlJ2xsIGNyZWF0ZSBhIG1vY2sgcmVwb3NpdG9yeVxuICAgICAgY29uc3QgbmV3UmVwbzogUmVwb3NpdG9yeSA9IHtcbiAgICAgICAgaWQ6IGByZXBvXyR7RGF0ZS5ub3coKX1gLFxuICAgICAgICBuYW1lOiBjbGVhbk5hbWUsXG4gICAgICAgIG93bmVyOiBvd25lcixcbiAgICAgICAgZGVzY3JpcHRpb246ICdOZXdseSBhZGRlZCByZXBvc2l0b3J5IGZyb20gR2l0SHViJyxcbiAgICAgICAgYWN0aXZlQWdlbnRzOiAwLFxuICAgICAgICB0b3RhbElzc3VlczogMCxcbiAgICAgICAgY29tcGxldGVkSXNzdWVzOiAwLFxuICAgICAgICBvcGVuUHVsbFJlcXVlc3RzOiAwLFxuICAgICAgICBsYXN0QWN0aXZpdHk6IG5ldyBEYXRlKCksXG4gICAgICAgIHRlY2hTdGFjazogWydKYXZhU2NyaXB0J10sIC8vIERlZmF1bHQgdGVjaCBzdGFja1xuICAgICAgICB2b3RlczogMCxcbiAgICAgICAgdXNlclZvdGVkOiBmYWxzZVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBBZGQgcmVwb3NpdG9yeSB0byBjb250ZXh0XG4gICAgICBhZGRSZXBvc2l0b3J5KG5ld1JlcG8pXG4gICAgICBcbiAgICAgIHNldEdpdGh1YlVybCgnJylcbiAgICAgIHNldFNob3dBZGRNb2RhbChmYWxzZSlcbiAgICAgIGFsZXJ0KCdQcm9qZWN0IGFkZGVkIHN1Y2Nlc3NmdWxseSEnKVxuICAgICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFkZGluZyByZXBvc2l0b3J5OicsIGVycm9yKVxuICAgICAgYWxlcnQoJ0ZhaWxlZCB0byBhZGQgcmVwb3NpdG9yeS4gUGxlYXNlIHRyeSBhZ2Fpbi4nKVxuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc1N1Ym1pdHRpbmcoZmFsc2UpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInJlcG9zaXRvcnktbGlzdFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0LWhlYWRlclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRlci1sZWZ0XCI+XG4gICAgICAgICAgPGgyIGNsYXNzTmFtZT1cImxpc3QtdGl0bGVcIj5BY3RpdmUgUHJvamVjdHM8L2gyPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVwby1jb3VudFwiPlxuICAgICAgICAgICAge2ZpbHRlcmVkQW5kU29ydGVkUmVwb3MubGVuZ3RofSBvZiB7cmVwb3NpdG9yaWVzLmxlbmd0aH0gcHJvamVjdHNcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxidXR0b24gXG4gICAgICAgICAgY2xhc3NOYW1lPVwiYWRkLXByb2plY3QtYnRuXCJcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRTaG93QWRkTW9kYWwodHJ1ZSl9XG4gICAgICAgID5cbiAgICAgICAgICDinpUgQWRkIFByb2plY3RcbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0LWNvbnRyb2xzXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2VhcmNoLWdyb3VwXCI+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlNlYXJjaCBwcm9qZWN0cy4uLlwiXG4gICAgICAgICAgICB2YWx1ZT17c2VhcmNoVGVybX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoVGVybShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJzZWFyY2gtaW5wdXRcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlsdGVyLWdyb3VwXCI+XG4gICAgICAgICAgPGxhYmVsPlNvcnQgYnk6PC9sYWJlbD5cbiAgICAgICAgICA8c2VsZWN0IFxuICAgICAgICAgICAgdmFsdWU9e3NvcnRCeX0gXG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNvcnRCeShlLnRhcmdldC52YWx1ZSBhcyBhbnkpfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmlsdGVyLXNlbGVjdFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInZvdGVzXCI+Vm90ZSBDb3VudDwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImFnZW50c1wiPkFjdGl2ZSBBZ2VudHM8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJwcm9ncmVzc1wiPlByb2dyZXNzPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiYWN0aXZpdHlcIj5SZWNlbnQgQWN0aXZpdHk8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJuYW1lXCI+TmFtZTwvb3B0aW9uPlxuICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlcG9zaXRvcnktZ3JpZFwiPlxuICAgICAgICB7ZmlsdGVyZWRBbmRTb3J0ZWRSZXBvcy5tYXAocmVwbyA9PiB7XG4gICAgICAgICAgY29uc3QgcHJvZ3Jlc3MgPSBnZXRQcm9ncmVzc1BlcmNlbnRhZ2UocmVwbylcbiAgICAgICAgICBjb25zdCBwcm9ncmVzc0NvbG9yID0gZ2V0UHJvZ3Jlc3NDb2xvcihwcm9ncmVzcylcbiAgICAgICAgICBjb25zdCBhY3Rpdml0eVN0YXR1cyA9IGdldEFjdGl2aXR5U3RhdHVzKHJlcG8ubGFzdEFjdGl2aXR5KVxuICAgICAgICAgIFxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGtleT17cmVwby5pZH0gY2xhc3NOYW1lPVwicmVwb3NpdG9yeS1jYXJkXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVwby1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlcG8taW5mb1wiPlxuICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInJlcG8tbmFtZVwiPntyZXBvLm5hbWV9PC9oMz5cbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInJlcG8tb3duZXJcIj5ieSB7cmVwby5vd25lcn08L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZXBvLXN0YXR1c1wiPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImFjdGl2aXR5LWluZGljYXRvclwiXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGNvbG9yOiBhY3Rpdml0eVN0YXR1cy5jb2xvciB9fVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7YWN0aXZpdHlTdGF0dXMuc3RhdHVzfVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibGFzdC1hY3Rpdml0eVwiPlxuICAgICAgICAgICAgICAgICAgICB7Zm9ybWF0VGltZUFnbyhyZXBvLmxhc3RBY3Rpdml0eSl9XG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVwby1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgICAgIDxwPntyZXBvLmRlc2NyaXB0aW9ufTwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2b3Rpbmctc2VjdGlvblwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidm90ZS1pbmZvXCI+XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ2b3RlLWNvdW50XCI+e3JlcG8udm90ZXN9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidm90ZS1sYWJlbFwiPnZvdGVzPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2B2b3RlLWJ0biAke3JlcG8udXNlclZvdGVkID8gJ3ZvdGVkJyA6ICcnfWB9XG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2b3RlRm9yUHJvamVjdChyZXBvLmlkKX1cbiAgICAgICAgICAgICAgICAgIHRpdGxlPXtyZXBvLnVzZXJWb3RlZCA/ICdSZW1vdmUgeW91ciB2b3RlJyA6ICdWb3RlIGZvciB0aGlzIHByb2plY3QnfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHtyZXBvLnVzZXJWb3RlZCA/ICfwn5GNJyA6ICfwn5GNJ31cbiAgICAgICAgICAgICAgICAgIHtyZXBvLnVzZXJWb3RlZCA/ICcgVm90ZWQnIDogJyBWb3RlJ31cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZWNoLXN0YWNrXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZWNoLWxhYmVsXCI+VGVjaCBTdGFjazo8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRlY2gtdGFnc1wiPlxuICAgICAgICAgICAgICAgICAge3JlcG8udGVjaFN0YWNrLm1hcCh0ZWNoID0+IChcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4ga2V5PXt0ZWNofSBjbGFzc05hbWU9XCJ0ZWNoLXRhZ1wiPnt0ZWNofTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlcG8tbWV0cmljc1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWV0cmljLWdyaWRcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWV0cmljLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWV0cmljLWljb25cIj7wn6SWPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1ldHJpYy1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWV0cmljLXZhbHVlXCI+e3JlcG8uYWN0aXZlQWdlbnRzfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtZXRyaWMtbGFiZWxcIj5BY3RpdmUgQWdlbnRzPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1ldHJpYy1pdGVtXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1ldHJpYy1pY29uXCI+8J+Tizwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZXRyaWMtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1ldHJpYy12YWx1ZVwiPntyZXBvLnRvdGFsSXNzdWVzfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtZXRyaWMtbGFiZWxcIj5Ub3RhbCBJc3N1ZXM8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWV0cmljLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWV0cmljLWljb25cIj7inIU8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWV0cmljLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtZXRyaWMtdmFsdWVcIj57cmVwby5jb21wbGV0ZWRJc3N1ZXN9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1ldHJpYy1sYWJlbFwiPkNvbXBsZXRlZDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZXRyaWMtaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtZXRyaWMtaWNvblwiPvCflIQ8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWV0cmljLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtZXRyaWMtdmFsdWVcIj57cmVwby5vcGVuUHVsbFJlcXVlc3RzfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtZXRyaWMtbGFiZWxcIj5PcGVuIFBSczwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy1zZWN0aW9uXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInByb2dyZXNzLWxhYmVsXCI+Q29tcGxldGlvbiBQcm9ncmVzczwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJwcm9ncmVzcy1wZXJjZW50YWdlXCJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgY29sb3I6IHByb2dyZXNzQ29sb3IgfX1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3Byb2dyZXNzLnRvRml4ZWQoMSl9JVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvZ3Jlc3MtYmFyXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJwcm9ncmVzcy1maWxsXCJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgXG4gICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGAke3Byb2dyZXNzfSVgLFxuICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogcHJvZ3Jlc3NDb2xvclxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZXBvLWFjdGlvbnNcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImFjdGlvbi1idG4gcHJpbWFyeVwiPlxuICAgICAgICAgICAgICAgICAg8J+Rge+4jyBWaWV3IERldGFpbHNcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImFjdGlvbi1idG4gc2Vjb25kYXJ5XCI+XG4gICAgICAgICAgICAgICAgICDwn5OKIEFuYWx5dGljc1xuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYWN0aW9uLWJ0biBzZWNvbmRhcnlcIj5cbiAgICAgICAgICAgICAgICAgIPCflKcgQ29uZmlndXJlXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKVxuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7ZmlsdGVyZWRBbmRTb3J0ZWRSZXBvcy5sZW5ndGggPT09IDAgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVtcHR5LXN0YXRlXCI+XG4gICAgICAgICAgPGgzPk5vIHByb2plY3RzIGZvdW5kPC9oMz5cbiAgICAgICAgICA8cD5cbiAgICAgICAgICAgIHtzZWFyY2hUZXJtIFxuICAgICAgICAgICAgICA/IGBObyBwcm9qZWN0cyBtYXRjaCBcIiR7c2VhcmNoVGVybX1cIi4gVHJ5IGEgZGlmZmVyZW50IHNlYXJjaCB0ZXJtLmBcbiAgICAgICAgICAgICAgOiAnTm8gcHJvamVjdHMgYXJlIGN1cnJlbnRseSBhY3RpdmUgaW4gdGhlIHN3YXJtLidcbiAgICAgICAgICAgIH1cbiAgICAgICAgICA8L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cblxuICAgICAge3Nob3dBZGRNb2RhbCAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtb3ZlcmxheVwiIG9uQ2xpY2s9eygpID0+IHNldFNob3dBZGRNb2RhbChmYWxzZSl9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiIG9uQ2xpY2s9eyhlKSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpfT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaGVhZGVyXCI+XG4gICAgICAgICAgICAgIDxoMz5BZGQgR2l0SHViIFByb2plY3Q8L2gzPlxuICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNsb3NlLWJ0blwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2hvd0FkZE1vZGFsKGZhbHNlKX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIOKclVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17aGFuZGxlQWRkUHJvamVjdH0gY2xhc3NOYW1lPVwiYWRkLXByb2plY3QtZm9ybVwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImdpdGh1Yi11cmxcIj5HaXRIdWIgUmVwb3NpdG9yeSBVUkw8L2xhYmVsPlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgaWQ9XCJnaXRodWItdXJsXCJcbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJ1cmxcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9e2dpdGh1YlVybH1cbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0R2l0aHViVXJsKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiaHR0cHM6Ly9naXRodWIuY29tL3VzZXJuYW1lL3JlcG9zaXRvcnlcIlxuICAgICAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc1N1Ym1pdHRpbmd9XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJnaXRodWItaW5wdXRcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzTmFtZT1cImZvcm0taGludFwiPlxuICAgICAgICAgICAgICAgICAgRW50ZXIgYSB2YWxpZCBHaXRIdWIgcmVwb3NpdG9yeSBVUkwgKGUuZy4sIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvdnNjb2RlKVxuICAgICAgICAgICAgICAgIDwvc21hbGw+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWFjdGlvbnNcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhbmNlbC1idG5cIlxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2hvd0FkZE1vZGFsKGZhbHNlKX1cbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc1N1Ym1pdHRpbmd9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzdWJtaXQtYnRuXCJcbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc1N1Ym1pdHRpbmcgfHwgIWdpdGh1YlVybC50cmltKCl9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge2lzU3VibWl0dGluZyA/ICdBZGRpbmcuLi4nIDogJ0FkZCBQcm9qZWN0J31cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZXBvc2l0b3J5TGlzdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXNCSztJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBOztBQXRCTCxPQUFPRSxLQUFLLElBQUlDLFFBQVEsUUFBUSxPQUFPO0FBQ3ZDLFNBQXFCQyxRQUFRLFFBQVEsMEJBQTBCO0FBQy9ELE9BQU8sMkJBQTJCO0FB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