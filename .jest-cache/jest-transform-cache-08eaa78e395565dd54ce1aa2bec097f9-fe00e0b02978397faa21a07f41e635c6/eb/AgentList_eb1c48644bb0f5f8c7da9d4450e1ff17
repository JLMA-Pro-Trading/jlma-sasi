430834b68c7dc67d1f38c0334d79e36d
/* istanbul ignore next */
function cov_2r7g0r6agc() {
  var path = "/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/AgentList.tsx";
  var hash = "6c7d0047d9a6ad1b6f2850e61d9e7748cb98a7fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/AgentList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 32
        },
        end: {
          line: 5,
          column: 54
        }
      },
      "2": {
        start: {
          line: 6,
          column: 40
        },
        end: {
          line: 6,
          column: 55
        }
      },
      "3": {
        start: {
          line: 7,
          column: 44
        },
        end: {
          line: 7,
          column: 59
        }
      },
      "4": {
        start: {
          line: 8,
          column: 36
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "5": {
        start: {
          line: 9,
          column: 25
        },
        end: {
          line: 10,
          column: 65
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "7": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "8": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "9": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "10": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "11": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 25
        }
      },
      "12": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "14": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 39
        }
      },
      "15": {
        start: {
          line: 28,
          column: 31
        },
        end: {
          line: 28,
          column: 43
        }
      },
      "16": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "17": {
        start: {
          line: 30,
          column: 30
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "18": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "19": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "20": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "21": {
        start: {
          line: 36,
          column: 31
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "22": {
        start: {
          line: 37,
          column: 26
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "23": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 39
        }
      },
      "24": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "25": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 40,
          column: 41
        }
      },
      "26": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "27": {
        start: {
          line: 44,
          column: 31
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "28": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "29": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "30": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "31": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "32": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 50,
          column: 43
        }
      },
      "33": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 43
        }
      },
      "34": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 37
        }
      },
      "35": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 56,
          column: 973
        }
      },
      "36": {
        start: {
          line: 53,
          column: 518
        },
        end: {
          line: 53,
          column: 547
        }
      },
      "37": {
        start: {
          line: 53,
          column: 1111
        },
        end: {
          line: 53,
          column: 1142
        }
      },
      "38": {
        start: {
          line: 53,
          column: 1631
        },
        end: {
          line: 53,
          column: 1656
        }
      },
      "39": {
        start: {
          line: 53,
          column: 2036
        },
        end: {
          line: 56,
          column: 743
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 18
          },
          end: {
            line: 4,
            column: 19
          }
        },
        loc: {
          start: {
            line: 4,
            column: 34
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 16
          },
          end: {
            line: 9,
            column: 17
          }
        },
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 10,
            column: 65
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 11,
            column: 15
          }
        },
        loc: {
          start: {
            line: 11,
            column: 24
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 27
          }
        },
        loc: {
          start: {
            line: 25,
            column: 38
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 25
          }
        },
        loc: {
          start: {
            line: 34,
            column: 34
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 44,
            column: 32
          }
        },
        loc: {
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 44
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 53,
            column: 511
          },
          end: {
            line: 53,
            column: 512
          }
        },
        loc: {
          start: {
            line: 53,
            column: 518
          },
          end: {
            line: 53,
            column: 547
          }
        },
        line: 53
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 53,
            column: 1104
          },
          end: {
            line: 53,
            column: 1105
          }
        },
        loc: {
          start: {
            line: 53,
            column: 1111
          },
          end: {
            line: 53,
            column: 1142
          }
        },
        line: 53
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 53,
            column: 1624
          },
          end: {
            line: 53,
            column: 1625
          }
        },
        loc: {
          start: {
            line: 53,
            column: 1631
          },
          end: {
            line: 53,
            column: 1656
          }
        },
        line: 53
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 53,
            column: 2026
          },
          end: {
            line: 53,
            column: 2027
          }
        },
        loc: {
          start: {
            line: 53,
            column: 2036
          },
          end: {
            line: 56,
            column: 743
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 10,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 26
          },
          end: {
            line: 9,
            column: 46
          }
        }, {
          start: {
            line: 9,
            column: 50
          },
          end: {
            line: 9,
            column: 75
          }
        }, {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 31
          }
        }, {
          start: {
            line: 10,
            column: 35
          },
          end: {
            line: 10,
            column: 64
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 14,
            column: 52
          }
        }, {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 16,
            column: 56
          }
        }, {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 18,
            column: 51
          }
        }, {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 20,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 22,
            column: 25
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 39
          }
        }, {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 43
          }
        }, {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 36
          }
        }, {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 42
          }
        }, {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 32
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 43
          }
        }, {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 38
          }
        }, {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 39
          }
        }, {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 42
          }
        }, {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 41
          }
        }, {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 33
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 750
          },
          end: {
            line: 56,
            column: 967
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 750
          },
          end: {
            line: 56,
            column: 786
          }
        }, {
          start: {
            line: 56,
            column: 791
          },
          end: {
            line: 56,
            column: 966
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0, 0, 0, 0],
      "2": [0, 0, 0, 0, 0],
      "3": [0, 0, 0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/AgentList.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/AgentList.tsx"],
      sourcesContent: ["import React, { useState } from 'react'\nimport { Agent } from '../contexts/SwarmContext'\nimport '../styles/AgentList.css'\n\ninterface AgentListProps {\n  agents: Agent[]\n}\n\nconst AgentList: React.FC<AgentListProps> = ({ agents }) => {\n  const [sortBy, setSortBy] = useState<'type' | 'status' | 'efficiency' | 'tasks'>('efficiency')\n  const [filterType, setFilterType] = useState<Agent['type'] | 'all'>('all')\n  const [filterStatus, setFilterStatus] = useState<Agent['status'] | 'all'>('all')\n\n  const filteredAndSortedAgents = agents\n    .filter(agent => \n      (filterType === 'all' || agent.type === filterType) &&\n      (filterStatus === 'all' || agent.status === filterStatus)\n    )\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'type':\n          return a.type.localeCompare(b.type)\n        case 'status':\n          return a.status.localeCompare(b.status)\n        case 'efficiency':\n          return b.efficiency - a.efficiency\n        case 'tasks':\n          return b.completedTasks - a.completedTasks\n        default:\n          return 0\n      }\n    })\n\n  const getStatusIcon = (status: Agent['status']): string => {\n    switch (status) {\n      case 'active': return '\uD83D\uDFE2'\n      case 'processing': return '\uD83D\uDFE1'\n      case 'idle': return '\u26AA'\n      case 'completed': return '\uD83D\uDD35'\n      default: return '\u26AB'\n    }\n  }\n\n  const getTypeIcon = (type: Agent['type']): string => {\n    switch (type) {\n      case 'researcher': return '\uD83D\uDD2C'\n      case 'coder': return '\uD83D\uDCBB'\n      case 'tester': return '\uD83E\uDDEA'\n      case 'reviewer': return '\uD83D\uDC41\uFE0F'\n      case 'debugger': return '\uD83D\uDC1B'\n      default: return '\uD83E\uDD16'\n    }\n  }\n\n  const getEfficiencyColor = (efficiency: number): string => {\n    if (efficiency >= 80) return 'var(--success-text)'\n    if (efficiency >= 60) return 'var(--accent-text)'\n    if (efficiency >= 40) return 'var(--secondary-text)'\n    return 'var(--warning-text)'\n  }\n\n  return (\n    <div className=\"agent-list\">\n      <div className=\"list-header\">\n        <h2 className=\"list-title\">Active Agents</h2>\n        <div className=\"agent-count\">\n          {filteredAndSortedAgents.length} of {agents.length} agents\n        </div>\n      </div>\n\n      <div className=\"list-controls\">\n        <div className=\"filter-group\">\n          <label>Filter by Type:</label>\n          <select \n            value={filterType} \n            onChange={(e) => setFilterType(e.target.value as any)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Types</option>\n            <option value=\"researcher\">Researcher</option>\n            <option value=\"coder\">Coder</option>\n            <option value=\"tester\">Tester</option>\n            <option value=\"reviewer\">Reviewer</option>\n            <option value=\"debugger\">Debugger</option>\n          </select>\n        </div>\n\n        <div className=\"filter-group\">\n          <label>Filter by Status:</label>\n          <select \n            value={filterStatus} \n            onChange={(e) => setFilterStatus(e.target.value as any)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Status</option>\n            <option value=\"active\">Active</option>\n            <option value=\"processing\">Processing</option>\n            <option value=\"idle\">Idle</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </div>\n\n        <div className=\"filter-group\">\n          <label>Sort by:</label>\n          <select \n            value={sortBy} \n            onChange={(e) => setSortBy(e.target.value as any)}\n            className=\"filter-select\"\n          >\n            <option value=\"efficiency\">Efficiency</option>\n            <option value=\"tasks\">Completed Tasks</option>\n            <option value=\"type\">Type</option>\n            <option value=\"status\">Status</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"agent-grid\">\n        {filteredAndSortedAgents.map(agent => (\n          <div key={agent.id} className=\"agent-card\">\n            <div className=\"agent-header\">\n              <div className=\"agent-type\">\n                <span className=\"type-icon\">{getTypeIcon(agent.type)}</span>\n                <span className=\"type-name\">{agent.type}</span>\n              </div>\n              <div className=\"agent-status\">\n                <span className=\"status-icon\">{getStatusIcon(agent.status)}</span>\n                <span className=\"status-name\">{agent.status}</span>\n              </div>\n            </div>\n\n            <div className=\"agent-info\">\n              <div className=\"info-item\">\n                <span className=\"info-label\">Owner:</span>\n                <span className=\"info-value\">{agent.owner}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">Repository:</span>\n                <span className=\"info-value\">{agent.repository}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">Branch:</span>\n                <span className=\"info-value\">{agent.branch}</span>\n              </div>\n            </div>\n\n            <div className=\"agent-task\">\n              <span className=\"task-label\">Current Task:</span>\n              <p className=\"task-description\">{agent.currentTask}</p>\n            </div>\n\n            <div className=\"agent-metrics\">\n              <div className=\"metric\">\n                <span className=\"metric-label\">Efficiency</span>\n                <div className=\"metric-bar\">\n                  <div \n                    className=\"metric-fill\"\n                    style={{ \n                      width: `${agent.efficiency}%`,\n                      backgroundColor: getEfficiencyColor(agent.efficiency)\n                    }}\n                  />\n                </div>\n                <span \n                  className=\"metric-value\"\n                  style={{ color: getEfficiencyColor(agent.efficiency) }}\n                >\n                  {agent.efficiency.toFixed(1)}%\n                </span>\n              </div>\n\n              <div className=\"metric\">\n                <span className=\"metric-label\">Completed Tasks</span>\n                <span className=\"metric-number\">{agent.completedTasks}</span>\n              </div>\n            </div>\n\n            <div className=\"agent-actions\">\n              <button className=\"action-btn monitor\">\n                \uD83D\uDCCA Monitor\n              </button>\n              <button className=\"action-btn pause\">\n                \u23F8\uFE0F Pause\n              </button>\n              <button className=\"action-btn details\">\n                \u2139\uFE0F Details\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {filteredAndSortedAgents.length === 0 && (\n        <div className=\"empty-state\">\n          <h3>No agents found</h3>\n          <p>Try adjusting your filters or spawn new agents.</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default AgentList"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6c7d0047d9a6ad1b6f2850e61d9e7748cb98a7fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2r7g0r6agc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2r7g0r6agc();
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React, { useState } from 'react';
import '../styles/AgentList.css';
/* istanbul ignore next */
cov_2r7g0r6agc().s[0]++;
const AgentList = ({
  agents
}) => {
  /* istanbul ignore next */
  cov_2r7g0r6agc().f[0]++;
  const [sortBy, setSortBy] =
  /* istanbul ignore next */
  (cov_2r7g0r6agc().s[1]++, useState('efficiency'));
  const [filterType, setFilterType] =
  /* istanbul ignore next */
  (cov_2r7g0r6agc().s[2]++, useState('all'));
  const [filterStatus, setFilterStatus] =
  /* istanbul ignore next */
  (cov_2r7g0r6agc().s[3]++, useState('all'));
  const filteredAndSortedAgents =
  /* istanbul ignore next */
  (cov_2r7g0r6agc().s[4]++, agents.filter(agent => {
    /* istanbul ignore next */
    cov_2r7g0r6agc().f[1]++;
    cov_2r7g0r6agc().s[5]++;
    return (
    /* istanbul ignore next */
    (cov_2r7g0r6agc().b[0][0]++, filterType === 'all') ||
    /* istanbul ignore next */
    (cov_2r7g0r6agc().b[0][1]++, agent.type === filterType)) && (
    /* istanbul ignore next */
    (cov_2r7g0r6agc().b[0][2]++, filterStatus === 'all') ||
    /* istanbul ignore next */
    (cov_2r7g0r6agc().b[0][3]++, agent.status === filterStatus));
  }).sort((a, b) => {
    /* istanbul ignore next */
    cov_2r7g0r6agc().f[2]++;
    cov_2r7g0r6agc().s[6]++;
    switch (sortBy) {
      case 'type':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[1][0]++;
        cov_2r7g0r6agc().s[7]++;
        return a.type.localeCompare(b.type);
      case 'status':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[1][1]++;
        cov_2r7g0r6agc().s[8]++;
        return a.status.localeCompare(b.status);
      case 'efficiency':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[1][2]++;
        cov_2r7g0r6agc().s[9]++;
        return b.efficiency - a.efficiency;
      case 'tasks':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[1][3]++;
        cov_2r7g0r6agc().s[10]++;
        return b.completedTasks - a.completedTasks;
      default:
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[1][4]++;
        cov_2r7g0r6agc().s[11]++;
        return 0;
    }
  }));
  /* istanbul ignore next */
  cov_2r7g0r6agc().s[12]++;
  const getStatusIcon = status => {
    /* istanbul ignore next */
    cov_2r7g0r6agc().f[3]++;
    cov_2r7g0r6agc().s[13]++;
    switch (status) {
      case 'active':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[2][0]++;
        cov_2r7g0r6agc().s[14]++;
        return '🟢';
      case 'processing':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[2][1]++;
        cov_2r7g0r6agc().s[15]++;
        return '🟡';
      case 'idle':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[2][2]++;
        cov_2r7g0r6agc().s[16]++;
        return '⚪';
      case 'completed':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[2][3]++;
        cov_2r7g0r6agc().s[17]++;
        return '🔵';
      default:
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[2][4]++;
        cov_2r7g0r6agc().s[18]++;
        return '⚫';
    }
  };
  /* istanbul ignore next */
  cov_2r7g0r6agc().s[19]++;
  const getTypeIcon = type => {
    /* istanbul ignore next */
    cov_2r7g0r6agc().f[4]++;
    cov_2r7g0r6agc().s[20]++;
    switch (type) {
      case 'researcher':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[3][0]++;
        cov_2r7g0r6agc().s[21]++;
        return '🔬';
      case 'coder':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[3][1]++;
        cov_2r7g0r6agc().s[22]++;
        return '💻';
      case 'tester':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[3][2]++;
        cov_2r7g0r6agc().s[23]++;
        return '🧪';
      case 'reviewer':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[3][3]++;
        cov_2r7g0r6agc().s[24]++;
        return '👁️';
      case 'debugger':
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[3][4]++;
        cov_2r7g0r6agc().s[25]++;
        return '🐛';
      default:
        /* istanbul ignore next */
        cov_2r7g0r6agc().b[3][5]++;
        cov_2r7g0r6agc().s[26]++;
        return '🤖';
    }
  };
  /* istanbul ignore next */
  cov_2r7g0r6agc().s[27]++;
  const getEfficiencyColor = efficiency => {
    /* istanbul ignore next */
    cov_2r7g0r6agc().f[5]++;
    cov_2r7g0r6agc().s[28]++;
    if (efficiency >= 80) {
      /* istanbul ignore next */
      cov_2r7g0r6agc().b[4][0]++;
      cov_2r7g0r6agc().s[29]++;
      return 'var(--success-text)';
    } else
    /* istanbul ignore next */
    {
      cov_2r7g0r6agc().b[4][1]++;
    }
    cov_2r7g0r6agc().s[30]++;
    if (efficiency >= 60) {
      /* istanbul ignore next */
      cov_2r7g0r6agc().b[5][0]++;
      cov_2r7g0r6agc().s[31]++;
      return 'var(--accent-text)';
    } else
    /* istanbul ignore next */
    {
      cov_2r7g0r6agc().b[5][1]++;
    }
    cov_2r7g0r6agc().s[32]++;
    if (efficiency >= 40) {
      /* istanbul ignore next */
      cov_2r7g0r6agc().b[6][0]++;
      cov_2r7g0r6agc().s[33]++;
      return 'var(--secondary-text)';
    } else
    /* istanbul ignore next */
    {
      cov_2r7g0r6agc().b[6][1]++;
    }
    cov_2r7g0r6agc().s[34]++;
    return 'var(--warning-text)';
  };
  /* istanbul ignore next */
  cov_2r7g0r6agc().s[35]++;
  return _jsxs("div", {
    className: "agent-list",
    children: [_jsxs("div", {
      className: "list-header",
      children: [_jsx("h2", {
        className: "list-title",
        children: "Active Agents"
      }), _jsxs("div", {
        className: "agent-count",
        children: [filteredAndSortedAgents.length, " of ", agents.length, " agents"]
      })]
    }), _jsxs("div", {
      className: "list-controls",
      children: [_jsxs("div", {
        className: "filter-group",
        children: [_jsx("label", {
          children: "Filter by Type:"
        }), _jsxs("select", {
          value: filterType,
          onChange: e => {
            /* istanbul ignore next */
            cov_2r7g0r6agc().f[6]++;
            cov_2r7g0r6agc().s[36]++;
            return setFilterType(e.target.value);
          },
          className: "filter-select",
          children: [_jsx("option", {
            value: "all",
            children: "All Types"
          }), _jsx("option", {
            value: "researcher",
            children: "Researcher"
          }), _jsx("option", {
            value: "coder",
            children: "Coder"
          }), _jsx("option", {
            value: "tester",
            children: "Tester"
          }), _jsx("option", {
            value: "reviewer",
            children: "Reviewer"
          }), _jsx("option", {
            value: "debugger",
            children: "Debugger"
          })]
        })]
      }), _jsxs("div", {
        className: "filter-group",
        children: [_jsx("label", {
          children: "Filter by Status:"
        }), _jsxs("select", {
          value: filterStatus,
          onChange: e => {
            /* istanbul ignore next */
            cov_2r7g0r6agc().f[7]++;
            cov_2r7g0r6agc().s[37]++;
            return setFilterStatus(e.target.value);
          },
          className: "filter-select",
          children: [_jsx("option", {
            value: "all",
            children: "All Status"
          }), _jsx("option", {
            value: "active",
            children: "Active"
          }), _jsx("option", {
            value: "processing",
            children: "Processing"
          }), _jsx("option", {
            value: "idle",
            children: "Idle"
          }), _jsx("option", {
            value: "completed",
            children: "Completed"
          })]
        })]
      }), _jsxs("div", {
        className: "filter-group",
        children: [_jsx("label", {
          children: "Sort by:"
        }), _jsxs("select", {
          value: sortBy,
          onChange: e => {
            /* istanbul ignore next */
            cov_2r7g0r6agc().f[8]++;
            cov_2r7g0r6agc().s[38]++;
            return setSortBy(e.target.value);
          },
          className: "filter-select",
          children: [_jsx("option", {
            value: "efficiency",
            children: "Efficiency"
          }), _jsx("option", {
            value: "tasks",
            children: "Completed Tasks"
          }), _jsx("option", {
            value: "type",
            children: "Type"
          }), _jsx("option", {
            value: "status",
            children: "Status"
          })]
        })]
      })]
    }), _jsx("div", {
      className: "agent-grid",
      children: filteredAndSortedAgents.map(agent => {
        /* istanbul ignore next */
        cov_2r7g0r6agc().f[9]++;
        cov_2r7g0r6agc().s[39]++;
        return _jsxs("div", {
          className: "agent-card",
          children: [_jsxs("div", {
            className: "agent-header",
            children: [_jsxs("div", {
              className: "agent-type",
              children: [_jsx("span", {
                className: "type-icon",
                children: getTypeIcon(agent.type)
              }), _jsx("span", {
                className: "type-name",
                children: agent.type
              })]
            }), _jsxs("div", {
              className: "agent-status",
              children: [_jsx("span", {
                className: "status-icon",
                children: getStatusIcon(agent.status)
              }), _jsx("span", {
                className: "status-name",
                children: agent.status
              })]
            })]
          }), _jsxs("div", {
            className: "agent-info",
            children: [_jsxs("div", {
              className: "info-item",
              children: [_jsx("span", {
                className: "info-label",
                children: "Owner:"
              }), _jsx("span", {
                className: "info-value",
                children: agent.owner
              })]
            }), _jsxs("div", {
              className: "info-item",
              children: [_jsx("span", {
                className: "info-label",
                children: "Repository:"
              }), _jsx("span", {
                className: "info-value",
                children: agent.repository
              })]
            }), _jsxs("div", {
              className: "info-item",
              children: [_jsx("span", {
                className: "info-label",
                children: "Branch:"
              }), _jsx("span", {
                className: "info-value",
                children: agent.branch
              })]
            })]
          }), _jsxs("div", {
            className: "agent-task",
            children: [_jsx("span", {
              className: "task-label",
              children: "Current Task:"
            }), _jsx("p", {
              className: "task-description",
              children: agent.currentTask
            })]
          }), _jsxs("div", {
            className: "agent-metrics",
            children: [_jsxs("div", {
              className: "metric",
              children: [_jsx("span", {
                className: "metric-label",
                children: "Efficiency"
              }), _jsx("div", {
                className: "metric-bar",
                children: _jsx("div", {
                  className: "metric-fill",
                  style: {
                    width: `${agent.efficiency}%`,
                    backgroundColor: getEfficiencyColor(agent.efficiency)
                  }
                })
              }), _jsxs("span", {
                className: "metric-value",
                style: {
                  color: getEfficiencyColor(agent.efficiency)
                },
                children: [agent.efficiency.toFixed(1), "%"]
              })]
            }), _jsxs("div", {
              className: "metric",
              children: [_jsx("span", {
                className: "metric-label",
                children: "Completed Tasks"
              }), _jsx("span", {
                className: "metric-number",
                children: agent.completedTasks
              })]
            })]
          }), _jsxs("div", {
            className: "agent-actions",
            children: [_jsx("button", {
              className: "action-btn monitor",
              children: "\uD83D\uDCCA Monitor"
            }), _jsx("button", {
              className: "action-btn pause",
              children: "\u23F8\uFE0F Pause"
            }), _jsx("button", {
              className: "action-btn details",
              children: "\u2139\uFE0F Details"
            })]
          })]
        }, agent.id);
      })
    }),
    /* istanbul ignore next */
    (cov_2r7g0r6agc().b[7][0]++, filteredAndSortedAgents.length === 0) &&
    /* istanbul ignore next */
    (cov_2r7g0r6agc().b[7][1]++, _jsxs("div", {
      className: "empty-state",
      children: [_jsx("h3", {
        children: "No agents found"
      }), _jsx("p", {
        children: "Try adjusting your filters or spawn new agents."
      })]
    }))]
  });
};
export default AgentList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,