3333cc65229ebedcc4d69620a03f5be1
"use strict";

/**
 * Neural Agent Type Definitions for SASI Integration
 * Comprehensive TypeScript interfaces for neural agent system
 */
/* istanbul ignore next */
function cov_1fq7x8l2hi() {
  var path = "/workspaces/agentists-quickstart-workspace-basic/sasi/src/types/neural.ts";
  var hash = "8796c3d136ea2c2fd1cffb8a86c783c84fec6ec3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/agentists-quickstart-workspace-basic/sasi/src/types/neural.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 102
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 16,
          column: 57
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "5": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "6": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "7": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "8": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 26,
          column: 11
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 39
        }
      },
      "14": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "15": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 23
        }
      },
      "16": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "18": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 32
        }
      },
      "19": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "20": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 23
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "22": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "23": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "24": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 39
        }
      },
      "25": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 86,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 1
          },
          end: {
            line: 9,
            column: 2
          }
        },
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 49
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 45
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 51
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 63
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 3
          },
          end: {
            line: 16,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 3
          },
          end: {
            line: 16,
            column: 13
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 54
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/agentists-quickstart-workspace-basic/sasi/src/types/neural.ts",
      mappings: ";AAAA;;;GAGG;;;AAEH,IAAY,UAOX;AAPD,WAAY,UAAU;IACpB,2CAA6B,CAAA;IAC7B,+BAAiB,CAAA;IACjB,mCAAqB,CAAA;IACrB,2BAAa,CAAA;IACb,yCAA2B,CAAA;IAC3B,6BAAe,CAAA;AACjB,CAAC,EAPW,UAAU,0BAAV,UAAU,QAOrB;AA6RD,cAAc;AAEd,MAAa,gBAAiB,SAAQ,KAAK;IACzC,YACE,OAAe,EACR,IAAY,EACZ,OAAgB,EAChB,OAAa;QAEpB,KAAK,CAAC,OAAO,CAAC,CAAC;QAJf;;;;mBAAO,IAAI;WAAQ;QACnB;;;;mBAAO,OAAO;WAAS;QACvB;;;;mBAAO,OAAO;WAAM;QAGpB,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;IACjC,CAAC;CACF;AAVD,4CAUC;AAED,MAAa,SAAU,SAAQ,KAAK;IAClC,YACE,OAAe,EACR,SAAiB,EACjB,OAAa;QAEpB,KAAK,CAAC,OAAO,CAAC,CAAC;QAHf;;;;mBAAO,SAAS;WAAQ;QACxB;;;;mBAAO,OAAO;WAAM;QAGpB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;IAC1B,CAAC;CACF;AATD,8BASC;AAED,MAAa,gBAAiB,SAAQ,KAAK;IACzC,YACE,OAAe,EACR,MAAc,EACd,KAAa,EACb,SAAiB;QAExB,KAAK,CAAC,OAAO,CAAC,CAAC;QAJf;;;;mBAAO,MAAM;WAAQ;QACrB;;;;mBAAO,KAAK;WAAQ;QACpB;;;;mBAAO,SAAS;WAAQ;QAGxB,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;IACjC,CAAC;CACF;AAVD,4CAUC",
      names: [],
      sources: ["/workspaces/agentists-quickstart-workspace-basic/sasi/src/types/neural.ts"],
      sourcesContent: ["/**\n * Neural Agent Type Definitions for SASI Integration\n * Comprehensive TypeScript interfaces for neural agent system\n */\n\nexport enum AgentState {\n  INITIALIZING = 'initializing',\n  ACTIVE = 'active',\n  LEARNING = 'learning',\n  IDLE = 'idle',\n  TERMINATING = 'terminating',\n  ERROR = 'error'\n}\n\nexport interface NeuralConfiguration {\n  type: 'mlp' | 'lstm' | 'cnn' | 'transformer' | 'custom';\n  architecture: number[]; // Layer sizes [input, hidden1, hidden2, ..., output]\n  activationFunction?: 'relu' | 'sigmoid' | 'tanh' | 'leaky_relu' | 'gelu';\n  learningRate?: number;\n  momentum?: number;\n  regularization?: {\n    type: 'l1' | 'l2' | 'dropout';\n    value: number;\n  };\n  simdOptimized?: boolean;\n  customConfig?: Record<string, any>;\n}\n\nexport interface NeuralAgent {\n  id: string;\n  config: NeuralConfiguration;\n  network: any; // WASM network instance\n  state: AgentState;\n  createdAt: number;\n  lastActive: number;\n  memoryUsage: number; // bytes\n  totalInferences: number;\n  averageInferenceTime: number; // ms\n  learningProgress: number; // 0-1\n  connectionStrength: number; // 0-1\n  metadata?: Record<string, any>;\n}\n\nexport interface PerformanceMetrics {\n  totalAgentsSpawned: number;\n  averageSpawnTime: number; // ms\n  averageInferenceTime: number; // ms\n  memoryUsage: number; // bytes\n  activeLearningTasks: number;\n  systemHealthScore: number; // 0-100\n}\n\nexport interface LearningSession {\n  sessionId: string;\n  agentId: string;\n  startTime: number;\n  duration: number;\n  epochs: number;\n  finalAccuracy: number;\n  dataPoints: number;\n  convergenceEpoch: number;\n}\n\nexport interface NetworkTopology {\n  nodes: Array<{\n    id: string;\n    type: string;\n    state: AgentState;\n    performance: number;\n    memoryUsage: number;\n  }>;\n  connections: Array<[string, string, number]>; // [from, to, strength]\n  totalNodes: number;\n  activeConnections: number;\n  networkHealth: number; // 0-100\n}\n\nexport interface AgentMetrics {\n  id: string;\n  name: string;\n  type: string;\n  status: 'active' | 'idle' | 'learning' | 'error';\n  performance: number;\n  memoryUsage: number;\n  lastActivity: number;\n  totalTasks: number;\n  successRate: number;\n  learningProgress: number;\n  connections: string[];\n}\n\nexport interface SwarmStatistics {\n  totalAgents: number;\n  activeAgents: number;\n  averagePerformance: number;\n  totalMemoryUsage: number;\n  totalTasks: number;\n  systemHealth: number;\n  networkTopology: NetworkTopology;\n  learningMetrics: {\n    activeSessions: number;\n    completedSessions: number;\n    averageAccuracy: number;\n    knowledgeTransfers: number;\n  };\n}\n\n// SASI Integration Types\n\nexport interface SASIAgent {\n  id: string;\n  name: string;\n  type: string;\n  status: 'active' | 'idle' | 'learning' | 'error';\n  performance: number;\n  memoryUsage: number;\n  lastActivity: number;\n  totalTasks: number;\n  successRate: number;\n  learningProgress: number;\n  connections: string[];\n  neuralAgent?: NeuralAgent; // Optional neural backing\n}\n\nexport interface SASISwarmData {\n  agents: SASIAgent[];\n  statistics: SwarmStatistics;\n  topology: NetworkTopology;\n  isNeuralEnabled: boolean;\n  performanceMetrics: PerformanceMetrics;\n}\n\n// Performance Integration Types\n\nexport interface PerformanceTarget {\n  agentSpawnTime: number; // ms\n  inferenceTime: number; // ms  \n  memoryPerAgent: number; // bytes\n  wasmOperationTime: number; // ms\n}\n\nexport interface PerformanceAlert {\n  type: 'spawn_time' | 'inference_time' | 'memory_usage' | 'system_health';\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  message: string;\n  value: number;\n  threshold: number;\n  timestamp: number;\n  agentId?: string;\n}\n\nexport interface PerformanceReport {\n  timestamp: number;\n  targets: PerformanceTarget;\n  current: {\n    averageSpawnTime: number;\n    averageInferenceTime: number;\n    memoryUsage: number;\n    wasmOperationTime: number;\n  };\n  alerts: PerformanceAlert[];\n  healthScore: number;\n  recommendations: string[];\n}\n\n// WASM Integration Types\n\nexport interface WASMModule {\n  createNeuralNetwork(config: NeuralConfiguration): Promise<any>;\n  runInference(network: any, inputs: number[]): Promise<number[]>;\n  trainNetwork(network: any, data: TrainingData[], epochs: number): Promise<TrainingResult>;\n  serializeWeights(network: any): Promise<ArrayBuffer>;\n  deserializeWeights(network: any, weights: ArrayBuffer, influence?: number): Promise<void>;\n  getMemoryUsage(): number;\n  enableSIMD: boolean;\n  destroyNetwork?(network: any): void;\n}\n\nexport interface TrainingData {\n  inputs: number[];\n  outputs: number[];\n}\n\nexport interface TrainingResult {\n  accuracy: number;\n  loss: number;\n  convergenceEpoch?: number;\n  trainingTime: number;\n}\n\n// Database Types\n\nexport interface AgentStateRecord {\n  agentId: string;\n  state: AgentState;\n  config: NeuralConfiguration;\n  createdAt: number;\n  lastActive: number;\n  metadata: string; // JSON\n}\n\nexport interface WeightsRecord {\n  agentId: string;\n  weights: ArrayBuffer;\n  savedAt: number;\n  checksum: string;\n}\n\nexport interface LearningRecord {\n  sessionId: string;\n  agentId: string;\n  startTime: number;\n  duration: number;\n  accuracy: number;\n  metadata: string; // JSON\n}\n\n// Event Types\n\nexport interface AgentEventData {\n  agentId: string;\n  timestamp: number;\n  [key: string]: any;\n}\n\nexport interface AgentSpawnedEvent extends AgentEventData {\n  spawnTime: number;\n  config: NeuralConfiguration;\n  memoryUsage: number;\n}\n\nexport interface InferenceCompleteEvent extends AgentEventData {\n  inferenceTime: number;\n  inputSize: number;\n  outputSize: number;\n}\n\nexport interface LearningCompleteEvent extends AgentEventData {\n  sessionId: string;\n  duration: number;\n  finalAccuracy: number;\n  epochs: number;\n}\n\nexport interface AgentTerminatedEvent extends AgentEventData {\n  reason?: string;\n}\n\nexport interface KnowledgeSharedEvent extends AgentEventData {\n  sourceAgentId: string;\n  targetAgentIds: string[];\n}\n\n// Configuration Types\n\nexport interface NeuralSystemConfig {\n  manager: {\n    maxAgents: number;\n    memoryLimitPerAgent: number;\n    inferenceTimeout: number;\n    simdEnabled: boolean;\n    crossLearningEnabled: boolean;\n    persistenceEnabled: boolean;\n    performanceMonitoring: boolean;\n  };\n  performance: {\n    targets: PerformanceTarget;\n    alertThresholds: Record<string, number>;\n    monitoringInterval: number;\n  };\n  wasm: {\n    modulePath: string;\n    simdVariant: boolean;\n    memorySize: number;\n  };\n  database: {\n    enabled: boolean;\n    path: string;\n    backupInterval: number;\n  };\n}\n\n// Utility Types\n\nexport type AgentID = string;\nexport type NetworkID = string;\nexport type SessionID = string;\n\nexport interface PartialNeuralAgent extends Partial<NeuralAgent> {\n  id: string;\n}\n\nexport interface PartialSASIAgent extends Partial<SASIAgent> {\n  id: string;\n  name: string;\n}\n\n// Error Types\n\nexport class NeuralAgentError extends Error {\n  constructor(\n    message: string,\n    public code: string,\n    public agentId?: string,\n    public details?: any\n  ) {\n    super(message);\n    this.name = 'NeuralAgentError';\n  }\n}\n\nexport class WASMError extends Error {\n  constructor(\n    message: string,\n    public operation: string,\n    public details?: any\n  ) {\n    super(message);\n    this.name = 'WASMError';\n  }\n}\n\nexport class PerformanceError extends Error {\n  constructor(\n    message: string,\n    public metric: string,\n    public value: number,\n    public threshold: number\n  ) {\n    super(message);\n    this.name = 'PerformanceError';\n  }\n}\n\n// Export all types\nexport type {\n  NeuralConfiguration,\n  NeuralAgent,\n  PerformanceMetrics,\n  LearningSession,\n  NetworkTopology,\n  AgentMetrics,\n  SwarmStatistics,\n  SASIAgent,\n  SASISwarmData,\n  PerformanceTarget,\n  PerformanceAlert,\n  PerformanceReport,\n  WASMModule,\n  TrainingData,\n  TrainingResult,\n  AgentStateRecord,\n  WeightsRecord,\n  LearningRecord,\n  AgentEventData,\n  AgentSpawnedEvent,\n  InferenceCompleteEvent,\n  LearningCompleteEvent,\n  AgentTerminatedEvent,\n  KnowledgeSharedEvent,\n  NeuralSystemConfig\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8796c3d136ea2c2fd1cffb8a86c783c84fec6ec3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fq7x8l2hi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fq7x8l2hi();
cov_1fq7x8l2hi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fq7x8l2hi().s[1]++;
exports.PerformanceError = exports.WASMError = exports.NeuralAgentError = exports.AgentState = void 0;
var AgentState;
/* istanbul ignore next */
cov_1fq7x8l2hi().s[2]++;
(function (AgentState) {
  /* istanbul ignore next */
  cov_1fq7x8l2hi().f[0]++;
  cov_1fq7x8l2hi().s[3]++;
  AgentState["INITIALIZING"] = "initializing";
  /* istanbul ignore next */
  cov_1fq7x8l2hi().s[4]++;
  AgentState["ACTIVE"] = "active";
  /* istanbul ignore next */
  cov_1fq7x8l2hi().s[5]++;
  AgentState["LEARNING"] = "learning";
  /* istanbul ignore next */
  cov_1fq7x8l2hi().s[6]++;
  AgentState["IDLE"] = "idle";
  /* istanbul ignore next */
  cov_1fq7x8l2hi().s[7]++;
  AgentState["TERMINATING"] = "terminating";
  /* istanbul ignore next */
  cov_1fq7x8l2hi().s[8]++;
  AgentState["ERROR"] = "error";
})(
/* istanbul ignore next */
(cov_1fq7x8l2hi().b[0][0]++, AgentState) ||
/* istanbul ignore next */
(cov_1fq7x8l2hi().b[0][1]++, exports.AgentState = AgentState = {}));
// Error Types
class NeuralAgentError extends Error {
  constructor(message, code, agentId, details) {
    /* istanbul ignore next */
    cov_1fq7x8l2hi().f[1]++;
    cov_1fq7x8l2hi().s[9]++;
    super(message);
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[10]++;
    Object.defineProperty(this, "code", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: code
    });
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[11]++;
    Object.defineProperty(this, "agentId", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: agentId
    });
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[12]++;
    Object.defineProperty(this, "details", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: details
    });
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[13]++;
    this.name = 'NeuralAgentError';
  }
}
/* istanbul ignore next */
cov_1fq7x8l2hi().s[14]++;
exports.NeuralAgentError = NeuralAgentError;
class WASMError extends Error {
  constructor(message, operation, details) {
    /* istanbul ignore next */
    cov_1fq7x8l2hi().f[2]++;
    cov_1fq7x8l2hi().s[15]++;
    super(message);
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[16]++;
    Object.defineProperty(this, "operation", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: operation
    });
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[17]++;
    Object.defineProperty(this, "details", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: details
    });
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[18]++;
    this.name = 'WASMError';
  }
}
/* istanbul ignore next */
cov_1fq7x8l2hi().s[19]++;
exports.WASMError = WASMError;
class PerformanceError extends Error {
  constructor(message, metric, value, threshold) {
    /* istanbul ignore next */
    cov_1fq7x8l2hi().f[3]++;
    cov_1fq7x8l2hi().s[20]++;
    super(message);
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[21]++;
    Object.defineProperty(this, "metric", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: metric
    });
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[22]++;
    Object.defineProperty(this, "value", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: value
    });
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[23]++;
    Object.defineProperty(this, "threshold", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: threshold
    });
    /* istanbul ignore next */
    cov_1fq7x8l2hi().s[24]++;
    this.name = 'PerformanceError';
  }
}
/* istanbul ignore next */
cov_1fq7x8l2hi().s[25]++;
exports.PerformanceError = PerformanceError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,