{"file":"/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/AgentList.tsx","mappings":"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","names":[],"sources":["/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/AgentList.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Agent } from '../contexts/SwarmContext'\nimport '../styles/AgentList.css'\n\ninterface AgentListProps {\n  agents: Agent[]\n}\n\nconst AgentList: React.FC<AgentListProps> = ({ agents }) => {\n  const [sortBy, setSortBy] = useState<'type' | 'status' | 'efficiency' | 'tasks'>('efficiency')\n  const [filterType, setFilterType] = useState<Agent['type'] | 'all'>('all')\n  const [filterStatus, setFilterStatus] = useState<Agent['status'] | 'all'>('all')\n\n  const filteredAndSortedAgents = agents\n    .filter(agent => \n      (filterType === 'all' || agent.type === filterType) &&\n      (filterStatus === 'all' || agent.status === filterStatus)\n    )\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'type':\n          return a.type.localeCompare(b.type)\n        case 'status':\n          return a.status.localeCompare(b.status)\n        case 'efficiency':\n          return b.efficiency - a.efficiency\n        case 'tasks':\n          return b.completedTasks - a.completedTasks\n        default:\n          return 0\n      }\n    })\n\n  const getStatusIcon = (status: Agent['status']): string => {\n    switch (status) {\n      case 'active': return '🟢'\n      case 'processing': return '🟡'\n      case 'idle': return '⚪'\n      case 'completed': return '🔵'\n      default: return '⚫'\n    }\n  }\n\n  const getTypeIcon = (type: Agent['type']): string => {\n    switch (type) {\n      case 'researcher': return '🔬'\n      case 'coder': return '💻'\n      case 'tester': return '🧪'\n      case 'reviewer': return '👁️'\n      case 'debugger': return '🐛'\n      default: return '🤖'\n    }\n  }\n\n  const getEfficiencyColor = (efficiency: number): string => {\n    if (efficiency >= 80) return 'var(--success-text)'\n    if (efficiency >= 60) return 'var(--accent-text)'\n    if (efficiency >= 40) return 'var(--secondary-text)'\n    return 'var(--warning-text)'\n  }\n\n  return (\n    <div className=\"agent-list\">\n      <div className=\"list-header\">\n        <h2 className=\"list-title\">Active Agents</h2>\n        <div className=\"agent-count\">\n          {filteredAndSortedAgents.length} of {agents.length} agents\n        </div>\n      </div>\n\n      <div className=\"list-controls\">\n        <div className=\"filter-group\">\n          <label>Filter by Type:</label>\n          <select \n            value={filterType} \n            onChange={(e) => setFilterType(e.target.value as any)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Types</option>\n            <option value=\"researcher\">Researcher</option>\n            <option value=\"coder\">Coder</option>\n            <option value=\"tester\">Tester</option>\n            <option value=\"reviewer\">Reviewer</option>\n            <option value=\"debugger\">Debugger</option>\n          </select>\n        </div>\n\n        <div className=\"filter-group\">\n          <label>Filter by Status:</label>\n          <select \n            value={filterStatus} \n            onChange={(e) => setFilterStatus(e.target.value as any)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Status</option>\n            <option value=\"active\">Active</option>\n            <option value=\"processing\">Processing</option>\n            <option value=\"idle\">Idle</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </div>\n\n        <div className=\"filter-group\">\n          <label>Sort by:</label>\n          <select \n            value={sortBy} \n            onChange={(e) => setSortBy(e.target.value as any)}\n            className=\"filter-select\"\n          >\n            <option value=\"efficiency\">Efficiency</option>\n            <option value=\"tasks\">Completed Tasks</option>\n            <option value=\"type\">Type</option>\n            <option value=\"status\">Status</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"agent-grid\">\n        {filteredAndSortedAgents.map(agent => (\n          <div key={agent.id} className=\"agent-card\">\n            <div className=\"agent-header\">\n              <div className=\"agent-type\">\n                <span className=\"type-icon\">{getTypeIcon(agent.type)}</span>\n                <span className=\"type-name\">{agent.type}</span>\n              </div>\n              <div className=\"agent-status\">\n                <span className=\"status-icon\">{getStatusIcon(agent.status)}</span>\n                <span className=\"status-name\">{agent.status}</span>\n              </div>\n            </div>\n\n            <div className=\"agent-info\">\n              <div className=\"info-item\">\n                <span className=\"info-label\">Owner:</span>\n                <span className=\"info-value\">{agent.owner}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">Repository:</span>\n                <span className=\"info-value\">{agent.repository}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">Branch:</span>\n                <span className=\"info-value\">{agent.branch}</span>\n              </div>\n            </div>\n\n            <div className=\"agent-task\">\n              <span className=\"task-label\">Current Task:</span>\n              <p className=\"task-description\">{agent.currentTask}</p>\n            </div>\n\n            <div className=\"agent-metrics\">\n              <div className=\"metric\">\n                <span className=\"metric-label\">Efficiency</span>\n                <div className=\"metric-bar\">\n                  <div \n                    className=\"metric-fill\"\n                    style={{ \n                      width: `${agent.efficiency}%`,\n                      backgroundColor: getEfficiencyColor(agent.efficiency)\n                    }}\n                  />\n                </div>\n                <span \n                  className=\"metric-value\"\n                  style={{ color: getEfficiencyColor(agent.efficiency) }}\n                >\n                  {agent.efficiency.toFixed(1)}%\n                </span>\n              </div>\n\n              <div className=\"metric\">\n                <span className=\"metric-label\">Completed Tasks</span>\n                <span className=\"metric-number\">{agent.completedTasks}</span>\n              </div>\n            </div>\n\n            <div className=\"agent-actions\">\n              <button className=\"action-btn monitor\">\n                📊 Monitor\n              </button>\n              <button className=\"action-btn pause\">\n                ⏸️ Pause\n              </button>\n              <button className=\"action-btn details\">\n                ℹ️ Details\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {filteredAndSortedAgents.length === 0 && (\n        <div className=\"empty-state\">\n          <h3>No agents found</h3>\n          <p>Try adjusting your filters or spawn new agents.</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default AgentList"],"version":3}