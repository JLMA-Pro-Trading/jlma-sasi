{"version":3,"names":["_getJestObj","mock","WebGLRenderer","jest","fn","mockImplementation","setSize","render","dispose","Scene","add","remove","PerspectiveCamera","Vector3","Mesh","BoxGeometry","MeshBasicMaterial","Canvas","children","useFrame","useThree","camera","scene","gl","require","path","setTimeout","global","expect","colors","reset","green","red","yellow","blue","magenta","cyan","originalLog","console","log","args","startsWith","slice","WebGLRenderingContext","MockWebGLRenderingContext","WebGL2RenderingContext","MockWebGL2RenderingContext","WebSocket","MockWebSocket","constructor","url","readyState","onopen","onmessage","onclose","onerror","send","data","close","hooks","preTask","postEdit","notification","postTask","memory","store","retrieve","list","swarm","init","spawn","orchestrate","status","e","SwarmManager","destroy","Agent","execute","coordinate","learn","NeuralMesh","process","train","predict","Object","defineProperty","value","getRandomValues","arr","i","length","Math","floor","random","subtle","digest","Promise","resolve","ArrayBuffer","performance","now","Date","mark","measure","getEntriesByName","getEntriesByType","fetch","ok","json","success","text","localStorage","getItem","setItem","removeItem","clear","sessionStorage","testUtils","waitFor","condition","timeout","start","Error","mockAgent","type","id","toString","substr","mockSwarm","agentCount","agents","Array","from","_","topology","createMockWebGLContext","canvas","document","createElement","drawingBufferWidth","drawingBufferHeight","getParameter","getExtension","createShader","createProgram","useProgram","drawArrays","extend","toBeValidAgent","received","pass","message","toBeValidSwarm","isArray","on","reason","promise","error","afterEach","clearAllMocks"],"sources":["setup.js"],"sourcesContent":["// Global test setup for SASI/Synaptic-mesh integration\nconst path = require('path');\n\n// Set global timeout for all tests\njest.setTimeout(60000);\n\n// Global test configuration\nglobal.expect = expect;\n\n// Console colors for better test output\nconst colors = {\n  reset: '\\x1b[0m',\n  green: '\\x1b[32m',\n  red: '\\x1b[31m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  magenta: '\\x1b[35m',\n  cyan: '\\x1b[36m'\n};\n\n// Enhanced console.log for tests\nconst originalLog = console.log;\nconsole.log = (...args) => {\n  if (args[0] && typeof args[0] === 'string' && args[0].startsWith('✅')) {\n    originalLog(colors.green + args[0] + colors.reset, ...args.slice(1));\n  } else if (args[0] && typeof args[0] === 'string' && args[0].startsWith('❌')) {\n    originalLog(colors.red + args[0] + colors.reset, ...args.slice(1));\n  } else if (args[0] && typeof args[0] === 'string' && args[0].startsWith('🚀')) {\n    originalLog(colors.cyan + args[0] + colors.reset, ...args.slice(1));\n  } else {\n    originalLog(...args);\n  }\n};\n\n// Mock WebGL context for browser-based tests\nglobal.WebGLRenderingContext = class MockWebGLRenderingContext {};\nglobal.WebGL2RenderingContext = class MockWebGL2RenderingContext {};\n\n// Mock Three.js for unit tests\njest.mock('three', () => ({\n  WebGLRenderer: jest.fn().mockImplementation(() => ({\n    setSize: jest.fn(),\n    render: jest.fn(),\n    dispose: jest.fn()\n  })),\n  Scene: jest.fn().mockImplementation(() => ({\n    add: jest.fn(),\n    remove: jest.fn()\n  })),\n  PerspectiveCamera: jest.fn(),\n  Vector3: jest.fn(),\n  Mesh: jest.fn(),\n  BoxGeometry: jest.fn(),\n  MeshBasicMaterial: jest.fn()\n}));\n\n// Mock React Three Fiber for SASI tests\njest.mock('@react-three/fiber', () => ({\n  Canvas: ({ children }) => children,\n  useFrame: jest.fn(),\n  useThree: jest.fn(() => ({\n    camera: {},\n    scene: {},\n    gl: {}\n  }))\n}));\n\n// Mock WebSocket for real-time tests\nglobal.WebSocket = class MockWebSocket {\n  constructor(url) {\n    this.url = url;\n    this.readyState = 1; // OPEN\n    this.onopen = null;\n    this.onmessage = null;\n    this.onclose = null;\n    this.onerror = null;\n  }\n  \n  send(data) {\n    // Mock send implementation\n  }\n  \n  close() {\n    this.readyState = 3; // CLOSED\n    if (this.onclose) this.onclose();\n  }\n};\n\n// Mock claude-flow hooks (conditional mock)\ntry {\n  jest.mock('claude-flow', () => ({\n    hooks: {\n      preTask: jest.fn(),\n      postEdit: jest.fn(),\n      notification: jest.fn(),\n      postTask: jest.fn()\n    },\n    memory: {\n      store: jest.fn(),\n      retrieve: jest.fn(),\n      list: jest.fn()\n    },\n    swarm: {\n      init: jest.fn(),\n      spawn: jest.fn(),\n      orchestrate: jest.fn(),\n      status: jest.fn()\n    }\n  }));\n} catch (e) {\n  // claude-flow not available in this environment\n}\n\n// Mock ruv-swarm for integration tests (conditional mock)\ntry {\n  jest.mock('ruv-swarm', () => ({\n    SwarmManager: jest.fn().mockImplementation(() => ({\n      init: jest.fn(),\n      spawn: jest.fn(),\n      orchestrate: jest.fn(),\n      status: jest.fn(),\n      destroy: jest.fn()\n    })),\n    Agent: jest.fn().mockImplementation(() => ({\n      execute: jest.fn(),\n      coordinate: jest.fn(),\n      learn: jest.fn()\n    }))\n  }));\n} catch (e) {\n  // ruv-swarm not available in this environment\n}\n\n// Mock WASM modules (conditional mock)\ntry {\n  jest.mock('../../synaptic-mesh/src/rs/neural-mesh/pkg', () => ({\n    init: jest.fn(),\n    NeuralMesh: jest.fn().mockImplementation(() => ({\n      process: jest.fn(),\n      train: jest.fn(),\n      predict: jest.fn()\n    }))\n  }));\n} catch (e) {\n  // WASM module not available in this environment\n}\n\n// Mock crypto for DAA tests\nObject.defineProperty(global, 'crypto', {\n  value: {\n    getRandomValues: jest.fn((arr) => {\n      for (let i = 0; i < arr.length; i++) {\n        arr[i] = Math.floor(Math.random() * 256);\n      }\n      return arr;\n    }),\n    subtle: {\n      digest: jest.fn(() => Promise.resolve(new ArrayBuffer(32)))\n    }\n  }\n});\n\n// Mock performance API\nglobal.performance = {\n  now: jest.fn(() => Date.now()),\n  mark: jest.fn(),\n  measure: jest.fn(),\n  getEntriesByName: jest.fn(() => []),\n  getEntriesByType: jest.fn(() => [])\n};\n\n// Mock fetch for API tests\nglobal.fetch = jest.fn(() =>\n  Promise.resolve({\n    ok: true,\n    json: () => Promise.resolve({ success: true }),\n    text: () => Promise.resolve('mock response')\n  })\n);\n\n// Mock localStorage\nglobal.localStorage = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn()\n};\n\n// Mock sessionStorage\nglobal.sessionStorage = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn()\n};\n\n// Test utilities\nglobal.testUtils = {\n  waitFor: async (condition, timeout = 5000) => {\n    const start = Date.now();\n    while (Date.now() - start < timeout) {\n      if (await condition()) return;\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    throw new Error(`Condition not met within ${timeout}ms`);\n  },\n  \n  mockAgent: (type = 'default') => ({\n    id: `mock-agent-${Math.random().toString(36).substr(2, 9)}`,\n    type,\n    status: 'active',\n    execute: jest.fn(),\n    coordinate: jest.fn(),\n    learn: jest.fn()\n  }),\n  \n  mockSwarm: (agentCount = 3) => ({\n    id: `mock-swarm-${Math.random().toString(36).substr(2, 9)}`,\n    agents: Array.from({ length: agentCount }, (_, i) => \n      global.testUtils.mockAgent(`agent-${i}`)\n    ),\n    status: 'active',\n    topology: 'mesh'\n  }),\n  \n  createMockWebGLContext: () => ({\n    canvas: document.createElement('canvas'),\n    drawingBufferWidth: 800,\n    drawingBufferHeight: 600,\n    getParameter: jest.fn(),\n    getExtension: jest.fn(),\n    createShader: jest.fn(),\n    createProgram: jest.fn(),\n    useProgram: jest.fn(),\n    clear: jest.fn(),\n    drawArrays: jest.fn()\n  })\n};\n\n// Custom matchers\nexpect.extend({\n  toBeValidAgent(received) {\n    const pass = received && \n      typeof received.id === 'string' &&\n      typeof received.type === 'string' &&\n      typeof received.execute === 'function';\n    \n    return {\n      pass,\n      message: () => pass \n        ? `Expected ${received} not to be a valid agent`\n        : `Expected ${received} to be a valid agent with id, type, and execute method`\n    };\n  },\n  \n  toBeValidSwarm(received) {\n    const pass = received &&\n      typeof received.id === 'string' &&\n      Array.isArray(received.agents) &&\n      typeof received.status === 'string';\n    \n    return {\n      pass,\n      message: () => pass\n        ? `Expected ${received} not to be a valid swarm`\n        : `Expected ${received} to be a valid swarm with id, agents array, and status`\n    };\n  }\n});\n\n// Error handling\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\n});\n\n// Cleanup function\nafterEach(() => {\n  jest.clearAllMocks();\n});\n\nconsole.log('🧪 Test setup complete - SASI/Synaptic-mesh integration testing environment ready');\n"],"mappings":"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","ignoreList":[]}