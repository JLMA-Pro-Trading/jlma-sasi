{"version":3,"names":["cov_2pb8m9v4ho","actualCoverage","React","useRef","useEffect","useState","THREE","s","SwarmVisualization","agents","isActive","f","mountRef","sceneRef","rendererRef","cameraRef","animationIdRef","spectrumRef","webglError","setWebglError","createSpectrumVisualization","scene","freqBins","timeBins","maxHeight","bars","spectrumGroup","Group","t","baseNoise","Math","random","freq","time","signal","sin","PI","b","intensity","max","height","barGeometry","BoxGeometry","getSpectrumColor","normalized","min","r","g","barMaterial","MeshBasicMaterial","color","Color","transparent","opacity","bar","Mesh","x","z","position","set","push","add","axesGroup","freqAxisGeometry","BufferGeometry","setFromPoints","Vector3","freqAxis","Line","LineBasicMaterial","timeAxisGeometry","timeAxis","createStarfield","starGeometry","starMaterial","PointsMaterial","size","starVertices","i","y","setAttribute","Float32BufferAttribute","stars","Points","current","mount","Scene","background","camera","PerspectiveCamera","clientWidth","clientHeight","renderer","WebGLRenderer","antialias","alpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","console","log","gl","getContext","Error","warn","setSize","setClearColor","shadowMap","enabled","type","PCFSoftShadowMap","appendChild","domElement","ambientLight","AmbientLight","directionalLight","DirectionalLight","castShadow","spectrum","lookAt","handleResize","aspect","updateProjectionMatrix","window","addEventListener","mouseDown","mouseX","mouseY","handleMouseDown","event","clientX","clientY","handleMouseMove","deltaX","deltaY","spherical","Spherical","setFromVector3","theta","phi","setFromSpherical","handleMouseUp","handleWheel","preventDefault","zoomSpeed","direction","getWorldDirection","multiplyScalar","distance","length","normalize","animate","requestAnimationFrame","Date","now","barIndex","timeOffset","strongSignalChance","scale","material","setRGB","render","removeEventListener","cancelAnimationFrame","removeChild","dispose","error","message","handleAgentClick","_jsxs","className","children","_jsx","ref","onClick","Array","from","_","style","backgroundColor","floor","toFixed"],"sources":["/workspaces/agentists-quickstart-workspace-basic/sasi/src/components/SwarmVisualization.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport * as THREE from 'three'\nimport { Agent } from '../contexts/SwarmContext'\nimport '../styles/SwarmVisualization.css'\n\ninterface SwarmVisualizationProps {\n  agents: Agent[]\n  repositories: any[]\n  isActive: boolean\n}\n\nconst SwarmVisualization: React.FC<SwarmVisualizationProps> = ({ \n  agents, \n  isActive \n}) => {\n  const mountRef = useRef<HTMLDivElement>(null)\n  const sceneRef = useRef<THREE.Scene>()\n  const rendererRef = useRef<THREE.WebGLRenderer>()\n  const cameraRef = useRef<THREE.PerspectiveCamera>()\n  const animationIdRef = useRef<number>()\n  const spectrumRef = useRef<{ spectrumGroup: THREE.Group; bars: THREE.Mesh[]; freqBins: number; timeBins: number } | null>(null)\n  const [webglError, setWebglError] = useState<string | null>(null)\n\n  // Create classic SETI@home style 3D frequency spectrum waterfall\n  const createSpectrumVisualization = (scene: THREE.Scene) => {\n    const freqBins = 80    // Frequency bins\n    const timeBins = 60    // Time samples\n    const maxHeight = 25   // Maximum bar height\n    \n    const bars: THREE.Mesh[] = []\n    const spectrumGroup = new THREE.Group()\n    \n    // Create spectrum bars (classic SETI@home waterfall style)\n    for (let t = 0; t < timeBins; t++) {\n      for (let f = 0; f < freqBins; f++) {\n        // Create simulated signal data with realistic patterns\n        const baseNoise = Math.random() * 0.1\n        const freq = f / freqBins\n        const time = t / timeBins\n        \n        // Add some realistic signal patterns\n        let signal = baseNoise\n        signal += Math.sin(freq * Math.PI * 8 + time * 4) * 0.15  // Carrier signals\n        signal += Math.sin(freq * Math.PI * 20 + time * 8) * 0.1  // Higher frequency components\n        signal += Math.random() < 0.005 ? Math.random() * 0.8 : 0  // Occasional strong signals\n        \n        const intensity = Math.max(0, signal)\n        const height = intensity * maxHeight\n        \n        // Create individual spectrum bar\n        const barGeometry = new THREE.BoxGeometry(1.5, height, 1.5)\n        \n        // Classic SETI@home rainbow color mapping\n        const getSpectrumColor = (intensity: number): [number, number, number] => {\n          const normalized = Math.min(1, intensity * 3) // Boost contrast\n          \n          if (normalized < 0.16) {\n            // Deep blue to blue\n            return [0, 0, 0.3 + normalized * 4.25]\n          } else if (normalized < 0.33) {\n            // Blue to cyan\n            return [0, (normalized - 0.16) * 6, 1]\n          } else if (normalized < 0.5) {\n            // Cyan to green\n            return [0, 1, 1 - (normalized - 0.33) * 6]\n          } else if (normalized < 0.66) {\n            // Green to yellow\n            return [(normalized - 0.5) * 6, 1, 0]\n          } else if (normalized < 0.83) {\n            // Yellow to orange/red\n            return [1, 1 - (normalized - 0.66) * 3, 0]\n          } else {\n            // Orange to bright red\n            return [1, 0.2 - (normalized - 0.83) * 1.2, 0]\n          }\n        }\n        \n        const [r, g, b] = getSpectrumColor(intensity)\n        const barMaterial = new THREE.MeshBasicMaterial({ \n          color: new THREE.Color(r, g, b),\n          transparent: true,\n          opacity: 0.8\n        })\n        \n        const bar = new THREE.Mesh(barGeometry, barMaterial)\n        \n        // Position the bar\n        const x = (f - freqBins/2) * 2\n        const z = (t - timeBins/2) * 2\n        bar.position.set(x, height/2, z)\n        \n        bars.push(bar)\n        spectrumGroup.add(bar)\n      }\n    }\n    \n    scene.add(spectrumGroup)\n    \n    // Add axes and labels\n    const axesGroup = new THREE.Group()\n    \n    // Frequency axis (X)\n    const freqAxisGeometry = new THREE.BufferGeometry().setFromPoints([\n      new THREE.Vector3(-freqBins, 0, timeBins),\n      new THREE.Vector3(freqBins, 0, timeBins)\n    ])\n    const freqAxis = new THREE.Line(freqAxisGeometry, new THREE.LineBasicMaterial({ color: 0x444444 }))\n    axesGroup.add(freqAxis)\n    \n    // Time axis (Z)\n    const timeAxisGeometry = new THREE.BufferGeometry().setFromPoints([\n      new THREE.Vector3(-freqBins, 0, -timeBins),\n      new THREE.Vector3(-freqBins, 0, timeBins)\n    ])\n    const timeAxis = new THREE.Line(timeAxisGeometry, new THREE.LineBasicMaterial({ color: 0x444444 }))\n    axesGroup.add(timeAxis)\n    \n    scene.add(axesGroup)\n    \n    return { spectrumGroup, bars, freqBins, timeBins }\n  }\n\n  // Create subtle starfield background (classic SETI@home style)\n  const createStarfield = (scene: THREE.Scene) => {\n    const starGeometry = new THREE.BufferGeometry()\n    const starMaterial = new THREE.PointsMaterial({\n      color: 0x4488cc,\n      size: 0.8,\n      transparent: true,\n      opacity: 0.4\n    })\n\n    const starVertices = []\n    for (let i = 0; i < 800; i++) {\n      const x = (Math.random() - 0.5) * 2000\n      const y = (Math.random() - 0.5) * 1000\n      const z = (Math.random() - 0.5) * 2000\n      starVertices.push(x, y, z)\n    }\n\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3))\n    const stars = new THREE.Points(starGeometry, starMaterial)\n    scene.add(stars)\n  }\n\n  // Initialize Three.js scene\n  useEffect(() => {\n    if (!mountRef.current) return\n\n    try {\n      const mount = mountRef.current\n      \n      // Clear any existing error\n      setWebglError(null)\n      \n      // Create Three.js scene\n      const scene = new THREE.Scene()\n      scene.background = new THREE.Color(0x000510)\n      \n      // Create camera\n      const camera = new THREE.PerspectiveCamera(75, mount.clientWidth / mount.clientHeight, 0.1, 1000)\n      \n      // Create Three.js renderer (try WebGL, fallback gracefully)\n      let renderer: THREE.WebGLRenderer | null = null\n      \n      try {\n        renderer = new THREE.WebGLRenderer({ \n          antialias: false,\n          alpha: true,\n          preserveDrawingBuffer: false,\n          powerPreference: 'default',\n          failIfMajorPerformanceCaveat: false\n        })\n        \n        console.log('✅ WebGL renderer created successfully')\n        \n        // Test if WebGL context is actually working\n        const gl = renderer.getContext()\n        if (!gl) {\n          throw new Error('WebGL context not available')\n        }\n        \n        console.log('✅ WebGL context verified working')\n      } catch (webglError) {\n        console.warn('WebGL renderer creation failed:', webglError)\n        \n        // Instead of throwing, let's continue with fallback\n        renderer = null\n        setWebglError(`WebGL initialization failed: ${webglError}`)\n      }\n      \n      // If WebGL failed, show fallback and return early\n      if (!renderer) {\n        console.log('ℹ️ Using fallback visualization interface')\n        return\n      }\n\n      // Configure renderer\n      renderer.setSize(mount.clientWidth, mount.clientHeight)\n      renderer.setClearColor(0x000818, 1)\n      renderer.shadowMap.enabled = true\n      renderer.shadowMap.type = THREE.PCFSoftShadowMap\n      mount.appendChild(renderer.domElement)\n\n      // Store references\n      sceneRef.current = scene\n      rendererRef.current = renderer\n      cameraRef.current = camera\n\n      // Add basic lighting\n      const ambientLight = new THREE.AmbientLight(0x404040, 0.4)\n      scene.add(ambientLight)\n      \n      const directionalLight = new THREE.DirectionalLight(0x00ff88, 0.8)\n      directionalLight.position.set(50, 50, 50)\n      directionalLight.castShadow = true\n      scene.add(directionalLight)\n\n      // Create starfield background\n      createStarfield(scene)\n\n      // Create classic SETI@home spectrum visualization\n      const spectrum = createSpectrumVisualization(scene)\n      spectrumRef.current = spectrum\n\n      // Set initial camera position (classic SETI@home perspective)\n      camera.position.set(120, 80, 120)\n      camera.lookAt(0, 10, 0)\n\n      // Handle window resize\n      const handleResize = () => {\n        if (!mount || !camera || !renderer) return\n        camera.aspect = mount.clientWidth / mount.clientHeight\n        camera.updateProjectionMatrix()\n        renderer.setSize(mount.clientWidth, mount.clientHeight)\n      }\n\n      window.addEventListener('resize', handleResize)\n\n      // Mouse controls\n      let mouseDown = false\n      let mouseX = 0\n      let mouseY = 0\n\n      const handleMouseDown = (event: MouseEvent) => {\n        mouseDown = true\n        mouseX = event.clientX\n        mouseY = event.clientY\n      }\n\n      const handleMouseMove = (event: MouseEvent) => {\n        if (!mouseDown || !camera) return\n        \n        const deltaX = event.clientX - mouseX\n        const deltaY = event.clientY - mouseY\n        \n        const spherical = new THREE.Spherical()\n        spherical.setFromVector3(camera.position)\n        spherical.theta -= deltaX * 0.005  // Slower rotation\n        spherical.phi += deltaY * 0.005    // Slower rotation\n        spherical.phi = Math.max(0.1, Math.min(Math.PI - 0.1, spherical.phi))\n        camera.position.setFromSpherical(spherical)\n        camera.lookAt(0, 10, 0)  // Look at center of spectrum\n        \n        mouseX = event.clientX\n        mouseY = event.clientY\n      }\n\n      const handleMouseUp = () => {\n        mouseDown = false\n      }\n\n      const handleWheel = (event: WheelEvent) => {\n        if (!camera) return\n        event.preventDefault()\n        \n        // Simple zoom approach - move camera closer/farther along its current direction\n        const zoomSpeed = 5\n        const direction = new THREE.Vector3()\n        camera.getWorldDirection(direction)\n        \n        // Move camera forward/backward\n        if (event.deltaY > 0) {\n          camera.position.add(direction.multiplyScalar(zoomSpeed))\n        } else {\n          camera.position.add(direction.multiplyScalar(-zoomSpeed))\n        }\n        \n        // Keep camera within reasonable bounds\n        const distance = camera.position.length()\n        if (distance > 400) {\n          camera.position.normalize().multiplyScalar(400)\n        } else if (distance < 30) {\n          camera.position.normalize().multiplyScalar(30)\n        }\n      }\n\n      mount.addEventListener('mousedown', handleMouseDown)\n      mount.addEventListener('mousemove', handleMouseMove)\n      mount.addEventListener('mouseup', handleMouseUp)\n      mount.addEventListener('wheel', handleWheel)\n\n      // Start animation loop\n      const animate = () => {\n        animationIdRef.current = requestAnimationFrame(animate)\n        \n        // Animate spectrum visualization (classic SETI@home style waterfall)\n        if (spectrumRef.current) {\n          const { bars, freqBins, timeBins } = spectrumRef.current\n          const time = Date.now() * 0.001\n          \n          // Update each spectrum bar\n          let barIndex = 0\n          for (let t = 0; t < timeBins; t++) {\n            for (let f = 0; f < freqBins; f++) {\n              const bar = bars[barIndex]\n              if (!bar) continue\n              \n              // Create animated signal data \n              const freq = f / freqBins\n              const timeOffset = t / timeBins\n              \n              const baseNoise = Math.random() * 0.05\n              let signal = baseNoise\n              \n              // Add multiple signal components for realistic spectrum\n              signal += Math.sin(freq * Math.PI * 6 + time * 3 + timeOffset) * 0.12\n              signal += Math.sin(freq * Math.PI * 15 + time * 5 + timeOffset * 2) * 0.08\n              signal += Math.sin(freq * Math.PI * 40 + time * 7 + timeOffset * 3) * 0.05\n              \n              // Add occasional strong signals (like detecting AI activity)\n              const strongSignalChance = Math.sin(time * 0.5 + f * 0.1 + t * 0.05)\n              if (strongSignalChance > 0.95) {\n                signal += (strongSignalChance - 0.95) * 15 // Strong detection\n              }\n              \n              const intensity = Math.max(0, signal)\n              const maxHeight = 25\n              const height = intensity * maxHeight\n              \n              // Update bar height and color\n              bar.scale.y = height / 5 + 0.1 // Prevent zero height\n              bar.position.y = (height / 5 + 0.1) * 2.5 // Adjust position for scaling\n              \n              // Classic SETI@home rainbow color mapping\n              const getSpectrumColor = (intensity: number): [number, number, number] => {\n                const normalized = Math.min(1, intensity * 4) // Boost contrast for animation\n                \n                if (normalized < 0.16) {\n                  return [0, 0, 0.3 + normalized * 4.25] // Deep blue to blue\n                } else if (normalized < 0.33) {\n                  return [0, (normalized - 0.16) * 6, 1] // Blue to cyan\n                } else if (normalized < 0.5) {\n                  return [0, 1, 1 - (normalized - 0.33) * 6] // Cyan to green\n                } else if (normalized < 0.66) {\n                  return [(normalized - 0.5) * 6, 1, 0] // Green to yellow\n                } else if (normalized < 0.83) {\n                  return [1, 1 - (normalized - 0.66) * 3, 0] // Yellow to orange\n                } else {\n                  return [1, 0.3 - (normalized - 0.83) * 1.5, 0] // Orange to red\n                }\n              }\n              \n              const [r, g, b] = getSpectrumColor(intensity)\n              ;(bar.material as THREE.MeshBasicMaterial).color.setRGB(r, g, b)\n              \n              barIndex++\n            }\n          }\n        }\n        \n        // Only render the spectrum - no agent meshes\n        renderer.render(scene, camera)\n      }\n      animate()\n\n      // Cleanup\n      return () => {\n        window.removeEventListener('resize', handleResize)\n        mount.removeEventListener('mousedown', handleMouseDown)\n        mount.removeEventListener('mousemove', handleMouseMove)\n        mount.removeEventListener('mouseup', handleMouseUp)\n        mount.removeEventListener('wheel', handleWheel)\n        \n        if (animationIdRef.current) {\n          cancelAnimationFrame(animationIdRef.current)\n        }\n        \n        if (mount && renderer) {\n          mount.removeChild(renderer.domElement)\n        }\n        \n        renderer.dispose()\n      }\n    } catch (error) {\n      console.error('WebGL initialization failed:', error)\n      setWebglError(error instanceof Error ? error.message : 'WebGL not supported')\n    }\n  }, [])\n\n  // SASI@home focuses purely on spectrum analysis - no 3D agent objects\n\n  // Handle agent selection\n  const handleAgentClick = () => {\n    // Implement raycasting to select agents\n    // This would involve converting mouse coordinates to 3D space\n    // and finding intersections with agent meshes\n  }\n\n  return (\n    <div className=\"swarm-visualization\">\n      <div \n        ref={mountRef} \n        className=\"visualization-canvas\"\n        onClick={handleAgentClick}\n      >\n        {webglError && (\n          <div className=\"webgl-fallback\">\n            <div className=\"fallback-content\">\n              <div className=\"seti-header\">\n                <h3>SASI@home</h3>\n                <p>Search for Artificial Super Intelligence</p>\n              </div>\n              \n              <div className=\"analysis-panels\">\n                <div className=\"data-panel\">\n                  <h4>Data Analysis</h4>\n                  <div className=\"spectrum-bars\">\n                    {Array.from({length: 20}, (_, i) => (\n                      <div key={i} className=\"spectrum-bar\" style={{\n                        height: `${Math.random() * 80 + 20}%`,\n                        backgroundColor: `hsl(${240 - Math.random() * 120}, 70%, 60%)`\n                      }}></div>\n                    ))}\n                  </div>\n                  <p>Computing agent neural patterns...</p>\n                </div>\n                \n                <div className=\"info-panel-fallback\">\n                  <h4>Agent Activity</h4>\n                  <p>Active Agents: {agents.length}</p>\n                  <p>Processing Units: {Math.floor(Math.random() * 1000) + 500}</p>\n                  <p>Network Status: {isActive ? 'ACTIVE' : 'STANDBY'}</p>\n                  <p>ASI Progress: {(Math.random() * 100).toFixed(2)}%</p>\n                </div>\n              </div>\n              \n              <div className=\"fallback-note\">\n                <p>⚠️ 3D visualization requires WebGL support</p>\n                <p>Displaying fallback analysis interface</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      \n\n      <div className=\"visualization-info\">\n        {/* Classic SETI@home style floating panels */}\n        <div className=\"seti-panel data-analysis\">\n          <h3>Data Analysis</h3>\n          <div className=\"seti-data-line\">\n            <span>Doppler drift rate:</span>\n            <span className=\"data-value\">20.6443 Hz/sec</span>\n          </div>\n          <div className=\"seti-data-line\">\n            <span>Resolution:</span>\n            <span className=\"data-value\">0.238 Hz</span>\n          </div>\n          <div className=\"seti-data-line\">\n            <span>Best Gaussian power:</span>\n            <span className=\"data-value\">128.11</span>\n          </div>\n          <div className=\"seti-data-line\">\n            <span>Overall:</span>\n            <span className=\"data-value highlight\">73.955% done</span>\n          </div>\n        </div>\n        \n        <div className=\"seti-panel agent-info\">\n          <h3>Agent Activity</h3>\n          <div className=\"seti-data-line\">\n            <span>Active Agents:</span>\n            <span className=\"data-value\">{agents.length}</span>\n          </div>\n          <div className=\"seti-data-line\">\n            <span>Processing Units:</span>\n            <span className=\"data-value\">{Math.floor(Math.random() * 500) + 1200}</span>\n          </div>\n          <div className=\"seti-data-line\">\n            <span>Network Status:</span>\n            <span className=\"data-value success\">{isActive ? 'ACTIVE' : 'STANDBY'}</span>\n          </div>\n          <div className=\"seti-data-line\">\n            <span>ASI Progress:</span>\n            <span className=\"data-value highlight\">{(Math.random() * 25 + 70).toFixed(2)}%</span>\n          </div>\n        </div>\n        \n        <div className=\"seti-panel legend\">\n          <h3>Signal Legend</h3>\n          <div className=\"spectrum-legend\">\n            <div className=\"legend-item\">\n              <div className=\"legend-color spectrum-red\"></div>\n              <span>Strong Signal</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color spectrum-yellow\"></div>\n              <span>Medium Signal</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color spectrum-green\"></div>\n              <span>Weak Signal</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color spectrum-blue\"></div>\n              <span>Background</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SwarmVisualization"],"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","ignoreList":[]}