{"version":3,"names":["cov_1765ro6jw9","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","NeuralMeshService","constructor","config","Object","defineProperty","Map","serverUrl","transport","enableWasm","enableRealtime","debugMode","initialize","console","log","initializeMCPClient","loadWasmModule","meshResponse","callMCPTool","topology","nodes","connectivity","activation","success","connection","id","Date","now","status","meshId","data","nodeCount","synapseCount","lastActivity","startRealtimeMonitoring","emit","Error","error","mcpClient","WebSocket","onopen","onmessage","event","JSON","parse","handleMCPMessage","onerror","Promise","resolve","reject","setTimeout","send","response","fetch","method","headers","body","stringify","json","wasmModule","initialized","simdSupported","performanceMultiplier","memoryPool","ArrayBuffer","calculateNeuralActivation","inputs","result","Float32Array","length","i","Math","tanh","optimizeConnections","connections","map","w","min","max","random","warn","toolName","args","request","jsonrpc","params","arguments","waitForResponse","message","timestamp","toISOString","requestId","timeout","handler","clearTimeout","once","realtimeInterval","clearInterval","setInterval","statusResponse","metrics","createNeuralAgent","neuronResponse","mapAgentTypeToNeuronType","layer","floor","threshold","neuralAgent","charAt","toUpperCase","slice","neuronId","currentTask","repository","branch","completedTasks","efficiency","progress","position","x","y","z","owner","neuralId","meshConnection","connected","nodeType","synapses","lastSpike","realtime","cpuUsage","memoryUsage","networkLatency","wasmPerformance","neuralProperties","spikeHistory","wasmMetrics","executionTime","simdAcceleration","performanceScore","agentType","mapping","updateNeuralAgent","agent","thought","encoding","target_layer","outputs","performance","getMeshStatus","trainMesh","patterns","epochs","learning_rate","algorithm","on","callback","eventListeners","has","set","get","push","wrapper","off","listeners","index","indexOf","splice","forEach","disconnect","close","clear","getConnectionStatus","isWasmEnabled","exports"],"sources":["/workspaces/agentists-quickstart-workspace-basic/sasi/src/services/NeuralMeshService.ts"],"sourcesContent":["/**\n * Neural Mesh Service - Bridge between SASI and Synaptic-mesh MCP Server\n * \n * This service connects the SASI frontend to the Synaptic Neural Mesh MCP server,\n * enabling real-time neural agent management and WASM-accelerated processing.\n */\n\nimport { Agent } from '../types/agent'\n\nexport interface NeuralMeshConfig {\n  serverUrl: string\n  transport: 'stdio' | 'websocket' | 'http'\n  enableWasm: boolean\n  enableRealtime: boolean\n  debugMode: boolean\n}\n\nexport interface NeuralMeshConnection {\n  id: string\n  status: 'connecting' | 'connected' | 'disconnected' | 'error'\n  meshId?: string\n  nodeCount: number\n  synapseCount: number\n  lastActivity: Date\n}\n\nexport interface NeuralAgent extends Agent {\n  neuralProperties: {\n    neuronId: string\n    meshId: string\n    nodeType: 'sensory' | 'motor' | 'inter' | 'pyramidal' | 'purkinje'\n    layer: number\n    threshold: number\n    activation: number\n    connections: string[]\n    spikeHistory: number[]\n    lastSpike?: Date\n  }\n  wasmMetrics: {\n    executionTime: number\n    memoryUsage: number\n    simdAcceleration: boolean\n    performanceScore: number\n  }\n}\n\nexport interface SynapticResponse {\n  success: boolean\n  data?: any\n  error?: string\n  timestamp: string\n}\n\nexport class NeuralMeshService {\n  private config: NeuralMeshConfig\n  private connection: NeuralMeshConnection | null = null\n  private eventListeners: Map<string, Function[]> = new Map()\n  private mcpClient: any = null\n  private wasmModule: any = null\n  private realtimeInterval: NodeJS.Timer | null = null\n\n  constructor(config: NeuralMeshConfig) {\n    this.config = {\n      ...config,\n      serverUrl: config.serverUrl || 'ws://localhost:3000',\n      transport: config.transport || 'websocket',\n      enableWasm: config.enableWasm !== false,\n      enableRealtime: config.enableRealtime !== false,\n      debugMode: config.debugMode || false\n    }\n  }\n\n  /**\n   * Initialize connection to Synaptic-mesh MCP server\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      if (this.config.debugMode) {\n        console.log('üß† Initializing Neural Mesh Service...')\n      }\n\n      // Initialize MCP client connection\n      await this.initializeMCPClient()\n\n      // Load WASM module if enabled\n      if (this.config.enableWasm) {\n        await this.loadWasmModule()\n      }\n\n      // Initialize neural mesh\n      const meshResponse = await this.callMCPTool('mesh_initialize', {\n        topology: 'synaptic',\n        nodes: 50,\n        connectivity: 0.4,\n        activation: 'relu'\n      })\n\n      if (meshResponse.success) {\n        this.connection = {\n          id: `conn_${Date.now()}`,\n          status: 'connected',\n          meshId: meshResponse.data.meshId,\n          nodeCount: meshResponse.data.nodes,\n          synapseCount: 0,\n          lastActivity: new Date()\n        }\n\n        // Start real-time monitoring if enabled\n        if (this.config.enableRealtime) {\n          this.startRealtimeMonitoring()\n        }\n\n        this.emit('connected', this.connection)\n        return true\n      } else {\n        throw new Error(meshResponse.error || 'Failed to initialize mesh')\n      }\n    } catch (error) {\n      console.error('‚ùå Neural Mesh Service initialization failed:', error)\n      this.connection = {\n        id: `conn_${Date.now()}`,\n        status: 'error',\n        nodeCount: 0,\n        synapseCount: 0,\n        lastActivity: new Date()\n      }\n      this.emit('error', error)\n      return false\n    }\n  }\n\n  /**\n   * Initialize MCP client for communication with Synaptic-mesh server\n   */\n  private async initializeMCPClient(): Promise<void> {\n    if (this.config.transport === 'websocket') {\n      // WebSocket connection for real-time communication\n      this.mcpClient = new WebSocket(this.config.serverUrl)\n      \n      this.mcpClient.onopen = () => {\n        if (this.config.debugMode) {\n          console.log('üîå WebSocket connection established')\n        }\n      }\n\n      this.mcpClient.onmessage = (event: any) => {\n        const data = JSON.parse(event.data)\n        this.handleMCPMessage(data)\n      }\n\n      this.mcpClient.onerror = (error: any) => {\n        console.error('WebSocket error:', error)\n        this.emit('error', error)\n      }\n\n      // Wait for connection to establish\n      await new Promise((resolve, reject) => {\n        this.mcpClient.onopen = resolve\n        this.mcpClient.onerror = reject\n        setTimeout(reject, 5000) // 5 second timeout\n      })\n    } else {\n      // HTTP-based MCP client fallback\n      this.mcpClient = {\n        send: async (data: any) => {\n          const response = await fetch(this.config.serverUrl, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n          })\n          return response.json()\n        }\n      }\n    }\n  }\n\n  /**\n   * Load WASM module for performance-critical operations\n   */\n  private async loadWasmModule(): Promise<void> {\n    try {\n      // This would load the actual WASM module from the synaptic-mesh project\n      // For now, we'll simulate it with a placeholder\n      this.wasmModule = {\n        initialized: true,\n        simdSupported: true,\n        performanceMultiplier: 2.8,\n        memoryPool: new ArrayBuffer(1024 * 1024), // 1MB pool\n        \n        // Simulated WASM functions\n        calculateNeuralActivation: (inputs: Float32Array) => {\n          // Simulate SIMD-accelerated neural computation\n          const result = new Float32Array(inputs.length)\n          for (let i = 0; i < inputs.length; i++) {\n            result[i] = Math.tanh(inputs[i] * 0.5)\n          }\n          return result\n        },\n        \n        optimizeConnections: (connections: number[]) => {\n          // Simulate connection optimization\n          return connections.map(w => Math.min(1, Math.max(0, w + (Math.random() - 0.5) * 0.1)))\n        }\n      }\n\n      if (this.config.debugMode) {\n        console.log('üöÄ WASM module loaded with SIMD support')\n      }\n    } catch (error) {\n      console.warn('‚ö†Ô∏è WASM module loading failed, falling back to JS:', error)\n      this.wasmModule = null\n    }\n  }\n\n  /**\n   * Call MCP tool on the Synaptic-mesh server\n   */\n  private async callMCPTool(toolName: string, args: any): Promise<SynapticResponse> {\n    try {\n      const request = {\n        jsonrpc: '2.0',\n        id: Date.now(),\n        method: 'tools/call',\n        params: {\n          name: toolName,\n          arguments: args\n        }\n      }\n\n      let response: any\n      if (this.config.transport === 'websocket' && this.mcpClient) {\n        this.mcpClient.send(JSON.stringify(request))\n        response = await this.waitForResponse(request.id)\n      } else {\n        response = await this.mcpClient.send(request)\n      }\n\n      return {\n        success: !response.error,\n        data: response.result,\n        error: response.error?.message,\n        timestamp: new Date().toISOString()\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message,\n        timestamp: new Date().toISOString()\n      }\n    }\n  }\n\n  /**\n   * Handle incoming MCP messages\n   */\n  private handleMCPMessage(data: any): void {\n    if (data.method === 'notification') {\n      this.emit('notification', data.params)\n    } else if (data.id) {\n      this.emit(`response_${data.id}`, data)\n    }\n  }\n\n  /**\n   * Wait for specific response\n   */\n  private async waitForResponse(requestId: number): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new Error('Request timeout'))\n      }, 10000)\n\n      const handler = (response: any) => {\n        clearTimeout(timeout)\n        resolve(response)\n      }\n\n      this.once(`response_${requestId}`, handler)\n    })\n  }\n\n  /**\n   * Start real-time monitoring of neural mesh\n   */\n  private startRealtimeMonitoring(): void {\n    if (this.realtimeInterval) {\n      clearInterval(this.realtimeInterval)\n    }\n\n    this.realtimeInterval = setInterval(async () => {\n      try {\n        const statusResponse = await this.callMCPTool('mesh_status', {\n          meshId: this.connection?.meshId,\n          metrics: ['activity', 'connectivity', 'efficiency']\n        })\n\n        if (statusResponse.success && this.connection) {\n          this.connection.lastActivity = new Date()\n          this.emit('status_update', statusResponse.data)\n        }\n      } catch (error) {\n        console.error('Real-time monitoring error:', error)\n      }\n    }, 1000) // Update every second\n  }\n\n  /**\n   * Create a new neural agent\n   */\n  async createNeuralAgent(type: Agent['type'], config?: any): Promise<NeuralAgent | null> {\n    try {\n      // Spawn neuron in the mesh\n      const neuronResponse = await this.callMCPTool('neuron_spawn', {\n        type: this.mapAgentTypeToNeuronType(type),\n        layer: config?.layer || Math.floor(Math.random() * 6) + 1,\n        threshold: config?.threshold || 0.5\n      })\n\n      if (!neuronResponse.success) {\n        throw new Error(neuronResponse.error || 'Failed to spawn neuron')\n      }\n\n      // Create neural agent with real neural properties\n      const neuralAgent: NeuralAgent = {\n        id: `agent_${Date.now()}`,\n        name: `${type.charAt(0).toUpperCase() + type.slice(1)}-${neuronResponse.data.neuronId.slice(-4)}`,\n        type,\n        status: 'neural_sync',\n        currentTask: 'Initializing neural connection...',\n        repository: 'neural-mesh',\n        branch: 'main',\n        completedTasks: 0,\n        efficiency: 75,\n        progress: 0.1,\n        position: {\n          x: (Math.random() - 0.5) * 100,\n          y: (Math.random() - 0.5) * 100,\n          z: (Math.random() - 0.5) * 100\n        },\n        owner: 'Neural Mesh',\n        neuralId: neuronResponse.data.neuronId,\n        meshConnection: {\n          connected: true,\n          meshId: this.connection?.meshId || '',\n          nodeType: neuronResponse.data.type,\n          layer: neuronResponse.data.layer,\n          synapses: neuronResponse.data.connections,\n          activation: 0,\n          lastSpike: new Date()\n        },\n        realtime: {\n          cpuUsage: Math.random() * 20 + 10,\n          memoryUsage: Math.random() * 50 + 25,\n          networkLatency: Math.random() * 5 + 1,\n          wasmPerformance: this.wasmModule ? 2.8 : 1.0\n        },\n        neuralProperties: {\n          neuronId: neuronResponse.data.neuronId,\n          meshId: this.connection?.meshId || '',\n          nodeType: neuronResponse.data.type,\n          layer: neuronResponse.data.layer,\n          threshold: neuronResponse.data.threshold || 0.5,\n          activation: 0,\n          connections: [],\n          spikeHistory: [],\n          lastSpike: new Date()\n        },\n        wasmMetrics: {\n          executionTime: 0,\n          memoryUsage: 0,\n          simdAcceleration: !!this.wasmModule?.simdSupported,\n          performanceScore: this.wasmModule ? 95 : 70\n        }\n      }\n\n      this.emit('agent_created', neuralAgent)\n      return neuralAgent\n    } catch (error) {\n      console.error('Failed to create neural agent:', error)\n      return null\n    }\n  }\n\n  /**\n   * Map agent type to neuron type\n   */\n  private mapAgentTypeToNeuronType(agentType: Agent['type']): string {\n    const mapping = {\n      'researcher': 'sensory',\n      'coder': 'motor',\n      'tester': 'inter',\n      'reviewer': 'pyramidal',\n      'debugger': 'purkinje',\n      'neural': 'inter',\n      'synaptic': 'pyramidal'\n    }\n    return mapping[agentType] || 'inter'\n  }\n\n  /**\n   * Update agent with neural activity\n   */\n  async updateNeuralAgent(agent: NeuralAgent): Promise<NeuralAgent> {\n    try {\n      // Inject thought/task into neural mesh\n      if (agent.currentTask) {\n        await this.callMCPTool('thought_inject', {\n          thought: agent.currentTask,\n          encoding: 'embedding',\n          target_layer: agent.neuralProperties.layer\n        })\n      }\n\n      // Perform WASM-accelerated computation if available\n      if (this.wasmModule && agent.neuralProperties.spikeHistory.length > 0) {\n        const inputs = new Float32Array(agent.neuralProperties.spikeHistory.slice(-10))\n        const outputs = this.wasmModule.calculateNeuralActivation(inputs)\n        agent.neuralProperties.activation = outputs[outputs.length - 1]\n        agent.wasmMetrics.executionTime = performance.now()\n      }\n\n      // Update real-time metrics\n      agent.realtime = {\n        cpuUsage: Math.random() * 30 + 20,\n        memoryUsage: Math.random() * 60 + 30,\n        networkLatency: Math.random() * 10 + 2,\n        wasmPerformance: this.wasmModule ? 2.8 : 1.0\n      }\n\n      // Update efficiency based on neural activity\n      agent.efficiency = Math.min(100, Math.max(0, \n        agent.efficiency + (agent.neuralProperties.activation - 0.5) * 10\n      ))\n\n      // Update status based on neural activity\n      if (agent.neuralProperties.activation > 0.8) {\n        agent.status = 'processing'\n      } else if (agent.neuralProperties.activation > 0.3) {\n        agent.status = 'active'\n      } else {\n        agent.status = 'idle'\n      }\n\n      this.emit('agent_updated', agent)\n      return agent\n    } catch (error) {\n      console.error('Failed to update neural agent:', error)\n      return agent\n    }\n  }\n\n  /**\n   * Get mesh status\n   */\n  async getMeshStatus(): Promise<any> {\n    if (!this.connection) {\n      return null\n    }\n\n    const response = await this.callMCPTool('mesh_status', {\n      meshId: this.connection.meshId,\n      metrics: ['activity', 'connectivity', 'efficiency']\n    })\n\n    return response.success ? response.data : null\n  }\n\n  /**\n   * Train the neural mesh with patterns\n   */\n  async trainMesh(patterns: any[]): Promise<boolean> {\n    try {\n      const response = await this.callMCPTool('mesh_train', {\n        patterns,\n        epochs: 50,\n        learning_rate: 0.01,\n        algorithm: 'backprop'\n      })\n\n      if (response.success) {\n        this.emit('mesh_trained', response.data)\n        return true\n      }\n      return false\n    } catch (error) {\n      console.error('Mesh training failed:', error)\n      return false\n    }\n  }\n\n  /**\n   * Event system\n   */\n  on(event: string, callback: Function): void {\n    if (!this.eventListeners.has(event)) {\n      this.eventListeners.set(event, [])\n    }\n    this.eventListeners.get(event)!.push(callback)\n  }\n\n  once(event: string, callback: Function): void {\n    const wrapper = (...args: any[]) => {\n      this.off(event, wrapper)\n      callback(...args)\n    }\n    this.on(event, wrapper)\n  }\n\n  off(event: string, callback: Function): void {\n    const listeners = this.eventListeners.get(event)\n    if (listeners) {\n      const index = listeners.indexOf(callback)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }\n\n  private emit(event: string, data?: any): void {\n    const listeners = this.eventListeners.get(event)\n    if (listeners) {\n      listeners.forEach(callback => callback(data))\n    }\n  }\n\n  /**\n   * Cleanup and disconnect\n   */\n  async disconnect(): Promise<void> {\n    if (this.realtimeInterval) {\n      clearInterval(this.realtimeInterval)\n      this.realtimeInterval = null\n    }\n\n    if (this.mcpClient && this.config.transport === 'websocket') {\n      this.mcpClient.close()\n    }\n\n    if (this.connection) {\n      this.connection.status = 'disconnected'\n      this.emit('disconnected', this.connection)\n    }\n\n    this.eventListeners.clear()\n  }\n\n  /**\n   * Get current connection status\n   */\n  getConnectionStatus(): NeuralMeshConnection | null {\n    return this.connection\n  }\n\n  /**\n   * Check if WASM is available\n   */\n  isWasmEnabled(): boolean {\n    return !!this.wasmModule\n  }\n}"],"mappings":"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","ignoreList":[]}