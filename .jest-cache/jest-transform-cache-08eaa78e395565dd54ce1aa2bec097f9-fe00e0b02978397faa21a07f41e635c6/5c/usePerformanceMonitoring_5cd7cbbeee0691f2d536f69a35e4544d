2937143cf248d28db35b5e5e7614c3db
/* istanbul ignore next */
function cov_7sb6539dl() {
  var path = "/workspaces/agentists-quickstart-workspace-basic/sasi/src/hooks/usePerformanceMonitoring.ts";
  var hash = "c7b4d457c831f7fe47d887fb9dbc248d7f84e2e1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/agentists-quickstart-workspace-basic/sasi/src/hooks/usePerformanceMonitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 34
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "1": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "2": {
        start: {
          line: 30,
          column: 32
        },
        end: {
          line: 30,
          column: 44
        }
      },
      "3": {
        start: {
          line: 31,
          column: 44
        },
        end: {
          line: 31,
          column: 59
        }
      },
      "4": {
        start: {
          line: 32,
          column: 44
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "5": {
        start: {
          line: 33,
          column: 38
        },
        end: {
          line: 33,
          column: 52
        }
      },
      "6": {
        start: {
          line: 34,
          column: 34
        },
        end: {
          line: 34,
          column: 42
        }
      },
      "7": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 35
        }
      },
      "8": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 36,
          column: 38
        }
      },
      "9": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 56,
          column: 11
        }
      },
      "10": {
        start: {
          line: 39,
          column: 30
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "11": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "12": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "13": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 39
        }
      },
      "14": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 34
        }
      },
      "15": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 84
        }
      },
      "16": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 80
        }
      },
      "17": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "18": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "19": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "20": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "21": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "23": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 32
        }
      },
      "24": {
        start: {
          line: 62,
          column: 33
        },
        end: {
          line: 62,
          column: 65
        }
      },
      "25": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "26": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 43
        }
      },
      "27": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 77,
          column: 10
        }
      },
      "28": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "29": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 44
        }
      },
      "30": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 76,
          column: 42
        }
      },
      "31": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 110,
          column: 57
        }
      },
      "32": {
        start: {
          line: 80,
          column: 33
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "33": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 41
        }
      },
      "34": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "35": {
        start: {
          line: 83,
          column: 34
        },
        end: {
          line: 83,
          column: 64
        }
      },
      "36": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 53
        }
      },
      "37": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "38": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 49
        }
      },
      "39": {
        start: {
          line: 90,
          column: 37
        },
        end: {
          line: 90,
          column: 124
        }
      },
      "40": {
        start: {
          line: 90,
          column: 80
        },
        end: {
          line: 90,
          column: 90
        }
      },
      "41": {
        start: {
          line: 91,
          column: 28
        },
        end: {
          line: 91,
          column: 47
        }
      },
      "42": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 96,
          column: 20
        }
      },
      "43": {
        start: {
          line: 92,
          column: 36
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "44": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 100,
          column: 17
        }
      },
      "45": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 101
        }
      },
      "46": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 43
        }
      },
      "47": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "48": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 56
        }
      },
      "49": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "50": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 31
        }
      },
      "51": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 160,
          column: 97
        }
      },
      "52": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "53": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "54": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "55": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "56": {
        start: {
          line: 118,
          column: 35
        },
        end: {
          line: 118,
          column: 53
        }
      },
      "57": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 129,
          column: 17
        }
      },
      "58": {
        start: {
          line: 120,
          column: 40
        },
        end: {
          line: 120,
          column: 65
        }
      },
      "59": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 124,
          column: 24
        }
      },
      "60": {
        start: {
          line: 121,
          column: 40
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "61": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 128,
          column: 21
        }
      },
      "62": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 127,
          column: 110
        }
      },
      "63": {
        start: {
          line: 131,
          column: 31
        },
        end: {
          line: 131,
          column: 63
        }
      },
      "64": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 137,
          column: 17
        }
      },
      "65": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 136,
          column: 24
        }
      },
      "66": {
        start: {
          line: 133,
          column: 40
        },
        end: {
          line: 136,
          column: 21
        }
      },
      "67": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 141,
          column: 17
        }
      },
      "68": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 71
        }
      },
      "69": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "70": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 143,
          column: 70
        }
      },
      "71": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "72": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 63
        }
      },
      "73": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 78
        }
      },
      "74": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 75
        }
      },
      "75": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 95
        }
      },
      "76": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 159,
          column: 10
        }
      },
      "77": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "78": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 61
        }
      },
      "79": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 171,
          column: 29
        }
      },
      "80": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "81": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 71
        }
      },
      "82": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 19
        }
      },
      "83": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 30
        }
      },
      "84": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 47
        }
      },
      "85": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 59
        }
      },
      "86": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 57
        }
      },
      "87": {
        start: {
          line: 173,
          column: 27
        },
        end: {
          line: 180,
          column: 18
        }
      },
      "88": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 31
        }
      },
      "89": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "90": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 57
        }
      },
      "91": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 59
        }
      },
      "92": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 57
        }
      },
      "93": {
        start: {
          line: 182,
          column: 28
        },
        end: {
          line: 201,
          column: 29
        }
      },
      "94": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "95": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 71
        }
      },
      "96": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "97": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 30
        }
      },
      "98": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 64
        }
      },
      "99": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "100": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 41
        }
      },
      "101": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 67
        }
      },
      "102": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 65
        }
      },
      "103": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 69
        }
      },
      "104": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 65
        }
      },
      "105": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 35
        }
      },
      "106": {
        start: {
          line: 203,
          column: 26
        },
        end: {
          line: 219,
          column: 29
        }
      },
      "107": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "108": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 71
        }
      },
      "109": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 24
        }
      },
      "110": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "111": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 66
        }
      },
      "112": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 210,
          column: 59
        }
      },
      "113": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 65
        }
      },
      "114": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 27
        }
      },
      "115": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 55
        }
      },
      "116": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 63
        }
      },
      "117": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "118": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 227,
          column: 18
        }
      },
      "119": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 225,
          column: 12
        }
      },
      "120": {
        start: {
          line: 222,
          column: 27
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "121": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 62
        }
      },
      "122": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "123": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 22
        }
      },
      "124": {
        start: {
          line: 233,
          column: 33
        },
        end: {
          line: 237,
          column: 19
        }
      },
      "125": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 235,
          column: 24
        }
      },
      "126": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 24
        }
      },
      "127": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 48
        }
      },
      "128": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 252,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "usePerformanceMonitoring",
        decl: {
          start: {
            line: 6,
            column: 16
          },
          end: {
            line: 6,
            column: 40
          }
        },
        loc: {
          start: {
            line: 6,
            column: 61
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 14
          },
          end: {
            line: 38,
            column: 15
          }
        },
        loc: {
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 39,
            column: 31
          }
        },
        loc: {
          start: {
            line: 39,
            column: 42
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 15
          },
          end: {
            line: 51,
            column: 16
          }
        },
        loc: {
          start: {
            line: 51,
            column: 21
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 14
          },
          end: {
            line: 58,
            column: 15
          }
        },
        loc: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 43
          },
          end: {
            line: 63,
            column: 44
          }
        },
        loc: {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 65,
            column: 13
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 34
          }
        },
        loc: {
          start: {
            line: 69,
            column: 52
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 69
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 18
          },
          end: {
            line: 76,
            column: 19
          }
        },
        loc: {
          start: {
            line: 76,
            column: 26
          },
          end: {
            line: 76,
            column: 42
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 79,
            column: 14
          },
          end: {
            line: 79,
            column: 15
          }
        },
        loc: {
          start: {
            line: 79,
            column: 20
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 79
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 80,
            column: 33
          },
          end: {
            line: 80,
            column: 34
          }
        },
        loc: {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 80
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 90,
            column: 65
          },
          end: {
            line: 90,
            column: 66
          }
        },
        loc: {
          start: {
            line: 90,
            column: 80
          },
          end: {
            line: 90,
            column: 90
          }
        },
        line: 90
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 92,
            column: 27
          },
          end: {
            line: 92,
            column: 28
          }
        },
        loc: {
          start: {
            line: 92,
            column: 36
          },
          end: {
            line: 96,
            column: 17
          }
        },
        line: 92
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 14
          },
          end: {
            line: 112,
            column: 15
          }
        },
        loc: {
          start: {
            line: 112,
            column: 20
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 115,
            column: 31
          },
          end: {
            line: 115,
            column: 32
          }
        },
        loc: {
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 153,
            column: 9
          }
        },
        line: 115
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 121,
            column: 31
          },
          end: {
            line: 121,
            column: 32
          }
        },
        loc: {
          start: {
            line: 121,
            column: 40
          },
          end: {
            line: 124,
            column: 21
          }
        },
        line: 121
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 133,
            column: 31
          },
          end: {
            line: 133,
            column: 32
          }
        },
        loc: {
          start: {
            line: 133,
            column: 40
          },
          end: {
            line: 136,
            column: 21
          }
        },
        line: 133
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 155,
            column: 15
          },
          end: {
            line: 155,
            column: 16
          }
        },
        loc: {
          start: {
            line: 155,
            column: 21
          },
          end: {
            line: 159,
            column: 9
          }
        },
        line: 155
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 162,
            column: 40
          },
          end: {
            line: 162,
            column: 41
          }
        },
        loc: {
          start: {
            line: 162,
            column: 46
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 162
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 173,
            column: 39
          },
          end: {
            line: 173,
            column: 40
          }
        },
        loc: {
          start: {
            line: 173,
            column: 45
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 173
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 182,
            column: 40
          },
          end: {
            line: 182,
            column: 41
          }
        },
        loc: {
          start: {
            line: 182,
            column: 52
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 182
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 203,
            column: 38
          },
          end: {
            line: 203,
            column: 39
          }
        },
        loc: {
          start: {
            line: 203,
            column: 50
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 203
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 221,
            column: 37
          },
          end: {
            line: 221,
            column: 38
          }
        },
        loc: {
          start: {
            line: 221,
            column: 52
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 221
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 222,
            column: 18
          },
          end: {
            line: 222,
            column: 19
          }
        },
        loc: {
          start: {
            line: 222,
            column: 27
          },
          end: {
            line: 225,
            column: 9
          }
        },
        line: 222
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 229,
            column: 36
          },
          end: {
            line: 229,
            column: 37
          }
        },
        loc: {
          start: {
            line: 229,
            column: 42
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 229
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 233,
            column: 45
          },
          end: {
            line: 233,
            column: 46
          }
        },
        loc: {
          start: {
            line: 233,
            column: 51
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 233
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 41
          },
          end: {
            line: 6,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 6,
            column: 57
          },
          end: {
            line: 6,
            column: 59
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 88,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 88,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "6": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "7": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 114,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 114,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 25
          }
        }, {
          start: {
            line: 113,
            column: 29
          },
          end: {
            line: 113,
            column: 39
          }
        }],
        line: 113
      },
      "10": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 129,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 129,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "11": {
        loc: {
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 128,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 128,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "12": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "13": {
        loc: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "14": {
        loc: {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "15": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "16": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "17": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "18": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "19": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "20": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "21": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 235,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 235,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/agentists-quickstart-workspace-basic/sasi/src/hooks/usePerformanceMonitoring.ts",
      mappings: "AAAA;;GAEG;AAEH,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,OAAO,CAAA;AAChE,OAAO,oBAAoB,MAAM,qCAAqC,CAAA;AAiDtE,MAAM,UAAU,wBAAwB,CACtC,gBAA4C,EAAE;IAE9C,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAqB;QACzD,YAAY,EAAE,CAAC;QACf,iBAAiB,EAAE,CAAC;QACpB,WAAW,EAAE,CAAC;QACd,mBAAmB,EAAE,CAAC;QACtB,cAAc,EAAE,CAAC;QACjB,UAAU,EAAE,CAAC;QACb,cAAc,EAAE,CAAC;QACjB,aAAa,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC;QACN,SAAS,EAAE,CAAC;KACb,CAAC,CAAA;IAEF,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAoB;QACtD,UAAU,EAAE,IAAI;QAChB,iBAAiB,EAAE,IAAI;QACvB,mBAAmB,EAAE,IAAI;QACzB,qBAAqB,EAAE,IAAI;QAC3B,iBAAiB,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE,OAAO;QAC5C,eAAe,EAAE,KAAK,EAAE,QAAQ;QAChC,SAAS,EAAE,EAAE;QACb,kBAAkB,EAAE,IAAI,EAAE,WAAW;QACrC,GAAG,aAAa;KACjB,CAAC,CAAA;IAEF,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAqB,EAAE,CAAC,CAAA;IAC5D,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;IACvD,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;IACvD,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAA8B,IAAI,CAAC,CAAA;IAE7E,MAAM,qBAAqB,GAAG,MAAM,EAAkB,CAAA;IACtD,MAAM,YAAY,GAAG,MAAM,CAAW,EAAE,CAAC,CAAA;IACzC,MAAM,gBAAgB,GAAG,MAAM,CAAS,CAAC,CAAC,CAAA;IAE1C,uBAAuB;IACvB,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,aAAa,GAAG,KAAK,IAAI,EAAE;YAC/B,IAAI,CAAC;gBACH,MAAM,GAAG,GAAG,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAA;gBAC5C,MAAM,GAAG,CAAC,UAAU,EAAE,CAAA;gBACtB,YAAY,CAAC,GAAG,CAAC,CAAA;YACnB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,KAAK,CAAC,CAAA;gBACnE,QAAQ,CAAC,OAAO,EAAE,4CAA4C,CAAC,CAAA;YACjE,CAAC;QACH,CAAC,CAAA;QAED,aAAa,EAAE,CAAA;QAEf,OAAO,GAAG,EAAE;YACV,IAAI,SAAS,EAAE,CAAC;gBACd,SAAS,CAAC,OAAO,EAAE,CAAA;YACrB,CAAC;QACH,CAAC,CAAA;IACH,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,8CAA8C;IAC9C,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,SAAS,EAAE,CAAC;YACd,yCAAyC;YACzC,SAAS,CAAC,OAAO,EAAE,CAAA;YACnB,MAAM,YAAY,GAAG,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAA;YACrD,YAAY,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBAClC,YAAY,CAAC,YAAY,CAAC,CAAA;YAC5B,CAAC,CAAC,CAAA;QACJ,CAAC;IACH,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;IAEZ,mBAAmB;IACnB,MAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,IAAkC,EAAE,OAAe,EAAE,EAAE;QACnF,MAAM,KAAK,GAAqB;YAC9B,IAAI;YACJ,OAAO;YACP,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;YACrB,QAAQ,EAAE,KAAK;SAChB,CAAA;QACD,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC,CAAA;IACrC,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,qBAAqB;IACrB,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,gBAAgB,GAAG,GAAG,EAAE;YAC5B,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;YAC7B,IAAI,gBAAgB,CAAC,OAAO,EAAE,CAAC;gBAC7B,MAAM,SAAS,GAAG,GAAG,GAAG,gBAAgB,CAAC,OAAO,CAAA;gBAChD,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;gBAEpC,2BAA2B;gBAC3B,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;oBACrC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;gBAC9B,CAAC;gBAED,uCAAuC;gBACvC,MAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAA;gBAC5G,MAAM,GAAG,GAAG,IAAI,GAAG,YAAY,CAAA;gBAE/B,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAClB,GAAG,IAAI;oBACP,SAAS,EAAE,YAAY;oBACvB,GAAG;iBACJ,CAAC,CAAC,CAAA;gBAEH,+BAA+B;gBAC/B,IAAI,YAAY,GAAG,MAAM,CAAC,eAAe,GAAG,GAAG,EAAE,CAAC;oBAChD,QAAQ,CAAC,SAAS,EAAE,gCAAgC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;gBAClF,CAAC;YACH,CAAC;YACD,gBAAgB,CAAC,OAAO,GAAG,GAAG,CAAA;YAE9B,IAAI,YAAY,EAAE,CAAC;gBACjB,qBAAqB,CAAC,gBAAgB,CAAC,CAAA;YACzC,CAAC;QACH,CAAC,CAAA;QAED,IAAI,YAAY,EAAE,CAAC;YACjB,gBAAgB,EAAE,CAAA;QACpB,CAAC;IACH,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAA;IAEpD,8BAA8B;IAC9B,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,YAAY,IAAI,CAAC,SAAS;YAAE,OAAM;QAEvC,MAAM,cAAc,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC;gBACH,mBAAmB;gBACnB,MAAM,UAAU,GAAI,WAAmB,CAAC,MAAM,CAAA;gBAC9C,IAAI,UAAU,EAAE,CAAC;oBACf,MAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAA;oBAC7C,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBAClB,GAAG,IAAI;wBACP,WAAW;qBACZ,CAAC,CAAC,CAAA;oBAEH,qBAAqB;oBACrB,IAAI,WAAW,GAAG,MAAM,CAAC,iBAAiB,GAAG,CAAC,EAAE,CAAC;wBAC/C,QAAQ,CAAC,SAAS,EAAE,sBAAsB,CAAC,WAAW,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;oBACvF,CAAC;gBACH,CAAC;gBAED,wCAAwC;gBACxC,MAAM,MAAM,GAAG,SAAS,CAAC,oBAAoB,EAAE,CAAA;gBAC/C,IAAI,MAAM,EAAE,OAAO,EAAE,CAAC;oBACpB,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBAClB,GAAG,IAAI;wBACP,GAAG,MAAM,CAAC,OAAO;qBAClB,CAAC,CAAC,CAAA;gBACL,CAAC;gBAED,uCAAuC;gBACvC,IAAI,MAAM,EAAE,OAAO,EAAE,YAAY,GAAG,IAAI,EAAE,CAAC;oBACzC,QAAQ,CAAC,SAAS,EAAE,6BAA6B,CAAC,CAAA;gBACpD,CAAC;gBAED,IAAI,MAAM,EAAE,OAAO,EAAE,mBAAmB,GAAG,GAAG,EAAE,CAAC;oBAC/C,QAAQ,CAAC,SAAS,EAAE,4BAA4B,CAAC,CAAA;gBACnD,CAAC;gBAED,IAAI,MAAM,EAAE,OAAO,EAAE,cAAc,GAAG,IAAI,EAAE,CAAC;oBAC3C,QAAQ,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAA;gBAC5C,CAAC;YAEH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAA;gBAC7D,QAAQ,CAAC,OAAO,EAAE,uCAAuC,CAAC,CAAA;YAC5D,CAAC;QACH,CAAC,CAAA;QAED,qBAAqB,CAAC,OAAO,GAAG,WAAW,CAAC,cAAc,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAA;QAEtF,OAAO,GAAG,EAAE;YACV,IAAI,qBAAqB,CAAC,OAAO,EAAE,CAAC;gBAClC,aAAa,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAA;YAC9C,CAAC;QACH,CAAC,CAAA;IACH,CAAC,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAA;IAE5F,mBAAmB;IACnB,MAAM,eAAe,GAAG,WAAW,CAAC,GAAG,EAAE;QACvC,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,QAAQ,CAAC,OAAO,EAAE,uCAAuC,CAAC,CAAA;YAC1D,OAAM;QACR,CAAC;QAED,eAAe,CAAC,IAAI,CAAC,CAAA;QACrB,SAAS,CAAC,0BAA0B,EAAE,CAAA;QACtC,QAAQ,CAAC,MAAM,EAAE,gCAAgC,CAAC,CAAA;QAClD,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAA;IAClD,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAA;IAEzB,kBAAkB;IAClB,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE;QACtC,eAAe,CAAC,KAAK,CAAC,CAAA;QACtB,IAAI,qBAAqB,CAAC,OAAO,EAAE,CAAC;YAClC,aAAa,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAA;QAC9C,CAAC;QACD,QAAQ,CAAC,MAAM,EAAE,gCAAgC,CAAC,CAAA;QAClD,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAA;IAClD,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;IAEd,mBAAmB;IACnB,MAAM,eAAe,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QAC7C,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,QAAQ,CAAC,OAAO,EAAE,uCAAuC,CAAC,CAAA;YAC1D,OAAM;QACR,CAAC;QAED,eAAe,CAAC,IAAI,CAAC,CAAA;QACrB,QAAQ,CAAC,MAAM,EAAE,qCAAqC,CAAC,CAAA;QAEvD,IAAI,CAAC;YACH,MAAM,SAAS,CAAC,UAAU,EAAE,CAAA;YAC5B,QAAQ,CAAC,MAAM,EAAE,oCAAoC,CAAC,CAAA;YACtD,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAA;QACtD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAA;YACxD,QAAQ,CAAC,OAAO,EAAE,iCAAiC,CAAC,CAAA;QACtD,CAAC;gBAAS,CAAC;YACT,eAAe,CAAC,KAAK,CAAC,CAAA;QACxB,CAAC;IACH,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAA;IAEzB,iBAAiB;IACjB,MAAM,aAAa,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QAC3C,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,QAAQ,CAAC,OAAO,EAAE,uCAAuC,CAAC,CAAA;YAC1D,OAAO,IAAI,CAAA;QACb,CAAC;QAED,IAAI,CAAC;YACH,QAAQ,CAAC,MAAM,EAAE,mCAAmC,CAAC,CAAA;YACrD,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,aAAa,EAAE,CAAA;YAC/C,QAAQ,CAAC,MAAM,EAAE,kCAAkC,CAAC,CAAA;YACpD,OAAO,OAAO,CAAA;QAChB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAA;YAC1C,QAAQ,CAAC,OAAO,EAAE,+BAA+B,CAAC,CAAA;YAClD,OAAO,IAAI,CAAA;QACb,CAAC;IACH,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAA;IAEzB,gBAAgB;IAChB,MAAM,YAAY,GAAG,WAAW,CAAC,CAAC,SAAqC,EAAE,EAAE;QACzE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACjB,GAAG,IAAI;YACP,GAAG,SAAS;SACb,CAAC,CAAC,CAAA;QACH,QAAQ,CAAC,MAAM,EAAE,mCAAmC,CAAC,CAAA;IACvD,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;IAEd,eAAe;IACf,MAAM,WAAW,GAAG,WAAW,CAAC,GAAG,EAAE;QACnC,SAAS,CAAC,EAAE,CAAC,CAAA;IACf,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,yBAAyB;IACzB,MAAM,oBAAoB,GAAG,WAAW,CAAC,GAAG,EAAE;QAC5C,IAAI,CAAC,SAAS;YAAE,OAAO,IAAI,CAAA;QAC3B,OAAO,SAAS,CAAC,oBAAoB,EAAE,CAAA;IACzC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;IAEf,OAAO;QACL,OAAO;QACP,MAAM;QACN,MAAM;QACN,YAAY;QACZ,YAAY;QACZ,SAAS;QACT,eAAe;QACf,cAAc;QACd,eAAe;QACf,aAAa;QACb,YAAY;QACZ,WAAW;QACX,oBAAoB;KACrB,CAAA;AACH,CAAC;AAED,eAAe,wBAAwB,CAAA",
      names: [],
      sources: ["/workspaces/agentists-quickstart-workspace-basic/sasi/src/hooks/usePerformanceMonitoring.ts"],
      sourcesContent: ["/**\n * React hook for performance monitoring and optimization\n */\n\nimport { useState, useEffect, useRef, useCallback } from 'react'\nimport PerformanceOptimizer from '../performance/performanceOptimizer'\n\ninterface PerformanceMetrics {\n  wasmLoadTime: number\n  simdOperationTime: number\n  memoryUsage: number\n  neuralInferenceTime: number\n  agentSpawnTime: number\n  renderTime: number\n  networkLatency: number\n  consensusTime: number\n  fps: number\n  frameTime: number\n}\n\ninterface PerformanceConfig {\n  enableSIMD: boolean\n  enableWASMCaching: boolean\n  enableMemoryPooling: boolean\n  enableGPUAcceleration: boolean\n  maxMemoryPerAgent: number\n  targetFrameTime: number\n  batchSize: number\n  monitoringInterval: number\n}\n\ninterface PerformanceAlert {\n  type: 'warning' | 'error' | 'info'\n  message: string\n  timestamp: number\n  resolved: boolean\n}\n\ninterface UsePerformanceMonitoringReturn {\n  metrics: PerformanceMetrics\n  config: PerformanceConfig\n  alerts: PerformanceAlert[]\n  isOptimizing: boolean\n  isMonitoring: boolean\n  optimizer: PerformanceOptimizer | null\n  startMonitoring: () => void\n  stopMonitoring: () => void\n  runOptimization: () => Promise<void>\n  runBenchmarks: () => Promise<any>\n  updateConfig: (newConfig: Partial<PerformanceConfig>) => void\n  clearAlerts: () => void\n  getPerformanceReport: () => any\n}\n\nexport function usePerformanceMonitoring(\n  initialConfig: Partial<PerformanceConfig> = {}\n): UsePerformanceMonitoringReturn {\n  const [metrics, setMetrics] = useState<PerformanceMetrics>({\n    wasmLoadTime: 0,\n    simdOperationTime: 0,\n    memoryUsage: 0,\n    neuralInferenceTime: 0,\n    agentSpawnTime: 0,\n    renderTime: 0,\n    networkLatency: 0,\n    consensusTime: 0,\n    fps: 0,\n    frameTime: 0\n  })\n\n  const [config, setConfig] = useState<PerformanceConfig>({\n    enableSIMD: true,\n    enableWASMCaching: true,\n    enableMemoryPooling: true,\n    enableGPUAcceleration: true,\n    maxMemoryPerAgent: 50 * 1024 * 1024, // 50MB\n    targetFrameTime: 16.67, // 60fps\n    batchSize: 32,\n    monitoringInterval: 1000, // 1 second\n    ...initialConfig\n  })\n\n  const [alerts, setAlerts] = useState<PerformanceAlert[]>([])\n  const [isOptimizing, setIsOptimizing] = useState(false)\n  const [isMonitoring, setIsMonitoring] = useState(false)\n  const [optimizer, setOptimizer] = useState<PerformanceOptimizer | null>(null)\n\n  const monitoringIntervalRef = useRef<NodeJS.Timeout>()\n  const frameTimeRef = useRef<number[]>([])\n  const lastFrameTimeRef = useRef<number>(0)\n\n  // Initialize optimizer\n  useEffect(() => {\n    const initOptimizer = async () => {\n      try {\n        const opt = new PerformanceOptimizer(config)\n        await opt.initialize()\n        setOptimizer(opt)\n      } catch (error) {\n        console.error('Failed to initialize performance optimizer:', error)\n        addAlert('error', 'Failed to initialize performance optimizer')\n      }\n    }\n\n    initOptimizer()\n\n    return () => {\n      if (optimizer) {\n        optimizer.cleanup()\n      }\n    }\n  }, [])\n\n  // Update optimizer config when config changes\n  useEffect(() => {\n    if (optimizer) {\n      // Reinitialize optimizer with new config\n      optimizer.cleanup()\n      const newOptimizer = new PerformanceOptimizer(config)\n      newOptimizer.initialize().then(() => {\n        setOptimizer(newOptimizer)\n      })\n    }\n  }, [config])\n\n  // Add alert helper\n  const addAlert = useCallback((type: 'warning' | 'error' | 'info', message: string) => {\n    const alert: PerformanceAlert = {\n      type,\n      message,\n      timestamp: Date.now(),\n      resolved: false\n    }\n    setAlerts(prev => [...prev, alert])\n  }, [])\n\n  // Monitor frame time\n  useEffect(() => {\n    const measureFrameTime = () => {\n      const now = performance.now()\n      if (lastFrameTimeRef.current) {\n        const frameTime = now - lastFrameTimeRef.current\n        frameTimeRef.current.push(frameTime)\n        \n        // Keep only last 60 frames\n        if (frameTimeRef.current.length > 60) {\n          frameTimeRef.current.shift()\n        }\n        \n        // Calculate FPS and average frame time\n        const avgFrameTime = frameTimeRef.current.reduce((sum, time) => sum + time, 0) / frameTimeRef.current.length\n        const fps = 1000 / avgFrameTime\n        \n        setMetrics(prev => ({\n          ...prev,\n          frameTime: avgFrameTime,\n          fps\n        }))\n        \n        // Check for performance issues\n        if (avgFrameTime > config.targetFrameTime * 1.5) {\n          addAlert('warning', `Frame time exceeding target: ${avgFrameTime.toFixed(2)}ms`)\n        }\n      }\n      lastFrameTimeRef.current = now\n      \n      if (isMonitoring) {\n        requestAnimationFrame(measureFrameTime)\n      }\n    }\n\n    if (isMonitoring) {\n      measureFrameTime()\n    }\n  }, [isMonitoring, config.targetFrameTime, addAlert])\n\n  // Performance monitoring loop\n  useEffect(() => {\n    if (!isMonitoring || !optimizer) return\n\n    const collectMetrics = () => {\n      try {\n        // Get memory usage\n        const memoryInfo = (performance as any).memory\n        if (memoryInfo) {\n          const memoryUsage = memoryInfo.usedJSHeapSize\n          setMetrics(prev => ({\n            ...prev,\n            memoryUsage\n          }))\n          \n          // Check memory usage\n          if (memoryUsage > config.maxMemoryPerAgent * 5) {\n            addAlert('warning', `High memory usage: ${(memoryUsage / 1024 / 1024).toFixed(1)}MB`)\n          }\n        }\n\n        // Get performance report from optimizer\n        const report = optimizer.getPerformanceReport()\n        if (report?.current) {\n          setMetrics(prev => ({\n            ...prev,\n            ...report.current\n          }))\n        }\n\n        // Check for various performance issues\n        if (report?.current?.wasmLoadTime > 1000) {\n          addAlert('warning', 'WASM modules loading slowly')\n        }\n        \n        if (report?.current?.neuralInferenceTime > 200) {\n          addAlert('warning', 'Neural inference time high')\n        }\n        \n        if (report?.current?.agentSpawnTime > 1000) {\n          addAlert('warning', 'Agent spawning slow')\n        }\n\n      } catch (error) {\n        console.error('Error collecting performance metrics:', error)\n        addAlert('error', 'Failed to collect performance metrics')\n      }\n    }\n\n    monitoringIntervalRef.current = setInterval(collectMetrics, config.monitoringInterval)\n\n    return () => {\n      if (monitoringIntervalRef.current) {\n        clearInterval(monitoringIntervalRef.current)\n      }\n    }\n  }, [isMonitoring, optimizer, config.monitoringInterval, config.maxMemoryPerAgent, addAlert])\n\n  // Start monitoring\n  const startMonitoring = useCallback(() => {\n    if (!optimizer) {\n      addAlert('error', 'Performance optimizer not initialized')\n      return\n    }\n    \n    setIsMonitoring(true)\n    optimizer.startPerformanceMonitoring()\n    addAlert('info', 'Performance monitoring started')\n    console.log('\uD83D\uDCCA Performance monitoring started')\n  }, [optimizer, addAlert])\n\n  // Stop monitoring\n  const stopMonitoring = useCallback(() => {\n    setIsMonitoring(false)\n    if (monitoringIntervalRef.current) {\n      clearInterval(monitoringIntervalRef.current)\n    }\n    addAlert('info', 'Performance monitoring stopped')\n    console.log('\uD83D\uDCCA Performance monitoring stopped')\n  }, [addAlert])\n\n  // Run optimization\n  const runOptimization = useCallback(async () => {\n    if (!optimizer) {\n      addAlert('error', 'Performance optimizer not initialized')\n      return\n    }\n\n    setIsOptimizing(true)\n    addAlert('info', 'Running performance optimization...')\n    \n    try {\n      await optimizer.initialize()\n      addAlert('info', 'Performance optimization completed')\n      console.log('\uD83D\uDE80 Performance optimization completed')\n    } catch (error) {\n      console.error('Performance optimization failed:', error)\n      addAlert('error', 'Performance optimization failed')\n    } finally {\n      setIsOptimizing(false)\n    }\n  }, [optimizer, addAlert])\n\n  // Run benchmarks\n  const runBenchmarks = useCallback(async () => {\n    if (!optimizer) {\n      addAlert('error', 'Performance optimizer not initialized')\n      return null\n    }\n\n    try {\n      addAlert('info', 'Running performance benchmarks...')\n      const results = await optimizer.runBenchmarks()\n      addAlert('info', 'Performance benchmarks completed')\n      return results\n    } catch (error) {\n      console.error('Benchmarks failed:', error)\n      addAlert('error', 'Performance benchmarks failed')\n      return null\n    }\n  }, [optimizer, addAlert])\n\n  // Update config\n  const updateConfig = useCallback((newConfig: Partial<PerformanceConfig>) => {\n    setConfig(prev => ({\n      ...prev,\n      ...newConfig\n    }))\n    addAlert('info', 'Performance configuration updated')\n  }, [addAlert])\n\n  // Clear alerts\n  const clearAlerts = useCallback(() => {\n    setAlerts([])\n  }, [])\n\n  // Get performance report\n  const getPerformanceReport = useCallback(() => {\n    if (!optimizer) return null\n    return optimizer.getPerformanceReport()\n  }, [optimizer])\n\n  return {\n    metrics,\n    config,\n    alerts,\n    isOptimizing,\n    isMonitoring,\n    optimizer,\n    startMonitoring,\n    stopMonitoring,\n    runOptimization,\n    runBenchmarks,\n    updateConfig,\n    clearAlerts,\n    getPerformanceReport\n  }\n}\n\nexport default usePerformanceMonitoring"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c7b4d457c831f7fe47d887fb9dbc248d7f84e2e1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7sb6539dl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7sb6539dl();
/**
 * React hook for performance monitoring and optimization
 */
import { useState, useEffect, useRef, useCallback } from 'react';
import PerformanceOptimizer from '../performance/performanceOptimizer';
export function usePerformanceMonitoring(initialConfig =
/* istanbul ignore next */
(cov_7sb6539dl().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_7sb6539dl().f[0]++;
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[0]++, useState({
    wasmLoadTime: 0,
    simdOperationTime: 0,
    memoryUsage: 0,
    neuralInferenceTime: 0,
    agentSpawnTime: 0,
    renderTime: 0,
    networkLatency: 0,
    consensusTime: 0,
    fps: 0,
    frameTime: 0
  }));
  const [config, setConfig] =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[1]++, useState({
    enableSIMD: true,
    enableWASMCaching: true,
    enableMemoryPooling: true,
    enableGPUAcceleration: true,
    maxMemoryPerAgent: 50 * 1024 * 1024,
    // 50MB
    targetFrameTime: 16.67,
    // 60fps
    batchSize: 32,
    monitoringInterval: 1000,
    // 1 second
    ...initialConfig
  }));
  const [alerts, setAlerts] =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[2]++, useState([]));
  const [isOptimizing, setIsOptimizing] =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[3]++, useState(false));
  const [isMonitoring, setIsMonitoring] =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[4]++, useState(false));
  const [optimizer, setOptimizer] =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[5]++, useState(null));
  const monitoringIntervalRef =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[6]++, useRef());
  const frameTimeRef =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[7]++, useRef([]));
  const lastFrameTimeRef =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[8]++, useRef(0));
  // Initialize optimizer
  /* istanbul ignore next */
  cov_7sb6539dl().s[9]++;
  useEffect(() => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[1]++;
    cov_7sb6539dl().s[10]++;
    const initOptimizer = async () => {
      /* istanbul ignore next */
      cov_7sb6539dl().f[2]++;
      cov_7sb6539dl().s[11]++;
      try {
        const opt =
        /* istanbul ignore next */
        (cov_7sb6539dl().s[12]++, new PerformanceOptimizer(config));
        /* istanbul ignore next */
        cov_7sb6539dl().s[13]++;
        await opt.initialize();
        /* istanbul ignore next */
        cov_7sb6539dl().s[14]++;
        setOptimizer(opt);
      } catch (error) {
        /* istanbul ignore next */
        cov_7sb6539dl().s[15]++;
        console.error('Failed to initialize performance optimizer:', error);
        /* istanbul ignore next */
        cov_7sb6539dl().s[16]++;
        addAlert('error', 'Failed to initialize performance optimizer');
      }
    };
    /* istanbul ignore next */
    cov_7sb6539dl().s[17]++;
    initOptimizer();
    /* istanbul ignore next */
    cov_7sb6539dl().s[18]++;
    return () => {
      /* istanbul ignore next */
      cov_7sb6539dl().f[3]++;
      cov_7sb6539dl().s[19]++;
      if (optimizer) {
        /* istanbul ignore next */
        cov_7sb6539dl().b[1][0]++;
        cov_7sb6539dl().s[20]++;
        optimizer.cleanup();
      } else
      /* istanbul ignore next */
      {
        cov_7sb6539dl().b[1][1]++;
      }
    };
  }, []);
  // Update optimizer config when config changes
  /* istanbul ignore next */
  cov_7sb6539dl().s[21]++;
  useEffect(() => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[4]++;
    cov_7sb6539dl().s[22]++;
    if (optimizer) {
      /* istanbul ignore next */
      cov_7sb6539dl().b[2][0]++;
      cov_7sb6539dl().s[23]++;
      // Reinitialize optimizer with new config
      optimizer.cleanup();
      const newOptimizer =
      /* istanbul ignore next */
      (cov_7sb6539dl().s[24]++, new PerformanceOptimizer(config));
      /* istanbul ignore next */
      cov_7sb6539dl().s[25]++;
      newOptimizer.initialize().then(() => {
        /* istanbul ignore next */
        cov_7sb6539dl().f[5]++;
        cov_7sb6539dl().s[26]++;
        setOptimizer(newOptimizer);
      });
    } else
    /* istanbul ignore next */
    {
      cov_7sb6539dl().b[2][1]++;
    }
  }, [config]);
  // Add alert helper
  const addAlert =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[27]++, useCallback((type, message) => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[6]++;
    const alert =
    /* istanbul ignore next */
    (cov_7sb6539dl().s[28]++, {
      type,
      message,
      timestamp: Date.now(),
      resolved: false
    });
    /* istanbul ignore next */
    cov_7sb6539dl().s[29]++;
    setAlerts(prev => {
      /* istanbul ignore next */
      cov_7sb6539dl().f[7]++;
      cov_7sb6539dl().s[30]++;
      return [...prev, alert];
    });
  }, []));
  // Monitor frame time
  /* istanbul ignore next */
  cov_7sb6539dl().s[31]++;
  useEffect(() => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[8]++;
    cov_7sb6539dl().s[32]++;
    const measureFrameTime = () => {
      /* istanbul ignore next */
      cov_7sb6539dl().f[9]++;
      const now =
      /* istanbul ignore next */
      (cov_7sb6539dl().s[33]++, performance.now());
      /* istanbul ignore next */
      cov_7sb6539dl().s[34]++;
      if (lastFrameTimeRef.current) {
        /* istanbul ignore next */
        cov_7sb6539dl().b[3][0]++;
        const frameTime =
        /* istanbul ignore next */
        (cov_7sb6539dl().s[35]++, now - lastFrameTimeRef.current);
        /* istanbul ignore next */
        cov_7sb6539dl().s[36]++;
        frameTimeRef.current.push(frameTime);
        // Keep only last 60 frames
        /* istanbul ignore next */
        cov_7sb6539dl().s[37]++;
        if (frameTimeRef.current.length > 60) {
          /* istanbul ignore next */
          cov_7sb6539dl().b[4][0]++;
          cov_7sb6539dl().s[38]++;
          frameTimeRef.current.shift();
        } else
        /* istanbul ignore next */
        {
          cov_7sb6539dl().b[4][1]++;
        }
        // Calculate FPS and average frame time
        const avgFrameTime =
        /* istanbul ignore next */
        (cov_7sb6539dl().s[39]++, frameTimeRef.current.reduce((sum, time) => {
          /* istanbul ignore next */
          cov_7sb6539dl().f[10]++;
          cov_7sb6539dl().s[40]++;
          return sum + time;
        }, 0) / frameTimeRef.current.length);
        const fps =
        /* istanbul ignore next */
        (cov_7sb6539dl().s[41]++, 1000 / avgFrameTime);
        /* istanbul ignore next */
        cov_7sb6539dl().s[42]++;
        setMetrics(prev => {
          /* istanbul ignore next */
          cov_7sb6539dl().f[11]++;
          cov_7sb6539dl().s[43]++;
          return {
            ...prev,
            frameTime: avgFrameTime,
            fps
          };
        });
        // Check for performance issues
        /* istanbul ignore next */
        cov_7sb6539dl().s[44]++;
        if (avgFrameTime > config.targetFrameTime * 1.5) {
          /* istanbul ignore next */
          cov_7sb6539dl().b[5][0]++;
          cov_7sb6539dl().s[45]++;
          addAlert('warning', `Frame time exceeding target: ${avgFrameTime.toFixed(2)}ms`);
        } else
        /* istanbul ignore next */
        {
          cov_7sb6539dl().b[5][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_7sb6539dl().b[3][1]++;
      }
      cov_7sb6539dl().s[46]++;
      lastFrameTimeRef.current = now;
      /* istanbul ignore next */
      cov_7sb6539dl().s[47]++;
      if (isMonitoring) {
        /* istanbul ignore next */
        cov_7sb6539dl().b[6][0]++;
        cov_7sb6539dl().s[48]++;
        requestAnimationFrame(measureFrameTime);
      } else
      /* istanbul ignore next */
      {
        cov_7sb6539dl().b[6][1]++;
      }
    };
    /* istanbul ignore next */
    cov_7sb6539dl().s[49]++;
    if (isMonitoring) {
      /* istanbul ignore next */
      cov_7sb6539dl().b[7][0]++;
      cov_7sb6539dl().s[50]++;
      measureFrameTime();
    } else
    /* istanbul ignore next */
    {
      cov_7sb6539dl().b[7][1]++;
    }
  }, [isMonitoring, config.targetFrameTime, addAlert]);
  // Performance monitoring loop
  /* istanbul ignore next */
  cov_7sb6539dl().s[51]++;
  useEffect(() => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[12]++;
    cov_7sb6539dl().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_7sb6539dl().b[9][0]++, !isMonitoring) ||
    /* istanbul ignore next */
    (cov_7sb6539dl().b[9][1]++, !optimizer)) {
      /* istanbul ignore next */
      cov_7sb6539dl().b[8][0]++;
      cov_7sb6539dl().s[53]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7sb6539dl().b[8][1]++;
    }
    cov_7sb6539dl().s[54]++;
    const collectMetrics = () => {
      /* istanbul ignore next */
      cov_7sb6539dl().f[13]++;
      cov_7sb6539dl().s[55]++;
      try {
        // Get memory usage
        const memoryInfo =
        /* istanbul ignore next */
        (cov_7sb6539dl().s[56]++, performance.memory);
        /* istanbul ignore next */
        cov_7sb6539dl().s[57]++;
        if (memoryInfo) {
          /* istanbul ignore next */
          cov_7sb6539dl().b[10][0]++;
          const memoryUsage =
          /* istanbul ignore next */
          (cov_7sb6539dl().s[58]++, memoryInfo.usedJSHeapSize);
          /* istanbul ignore next */
          cov_7sb6539dl().s[59]++;
          setMetrics(prev => {
            /* istanbul ignore next */
            cov_7sb6539dl().f[14]++;
            cov_7sb6539dl().s[60]++;
            return {
              ...prev,
              memoryUsage
            };
          });
          // Check memory usage
          /* istanbul ignore next */
          cov_7sb6539dl().s[61]++;
          if (memoryUsage > config.maxMemoryPerAgent * 5) {
            /* istanbul ignore next */
            cov_7sb6539dl().b[11][0]++;
            cov_7sb6539dl().s[62]++;
            addAlert('warning', `High memory usage: ${(memoryUsage / 1024 / 1024).toFixed(1)}MB`);
          } else
          /* istanbul ignore next */
          {
            cov_7sb6539dl().b[11][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_7sb6539dl().b[10][1]++;
        }
        // Get performance report from optimizer
        const report =
        /* istanbul ignore next */
        (cov_7sb6539dl().s[63]++, optimizer.getPerformanceReport());
        /* istanbul ignore next */
        cov_7sb6539dl().s[64]++;
        if (report?.current) {
          /* istanbul ignore next */
          cov_7sb6539dl().b[12][0]++;
          cov_7sb6539dl().s[65]++;
          setMetrics(prev => {
            /* istanbul ignore next */
            cov_7sb6539dl().f[15]++;
            cov_7sb6539dl().s[66]++;
            return {
              ...prev,
              ...report.current
            };
          });
        } else
        /* istanbul ignore next */
        {
          cov_7sb6539dl().b[12][1]++;
        }
        // Check for various performance issues
        cov_7sb6539dl().s[67]++;
        if (report?.current?.wasmLoadTime > 1000) {
          /* istanbul ignore next */
          cov_7sb6539dl().b[13][0]++;
          cov_7sb6539dl().s[68]++;
          addAlert('warning', 'WASM modules loading slowly');
        } else
        /* istanbul ignore next */
        {
          cov_7sb6539dl().b[13][1]++;
        }
        cov_7sb6539dl().s[69]++;
        if (report?.current?.neuralInferenceTime > 200) {
          /* istanbul ignore next */
          cov_7sb6539dl().b[14][0]++;
          cov_7sb6539dl().s[70]++;
          addAlert('warning', 'Neural inference time high');
        } else
        /* istanbul ignore next */
        {
          cov_7sb6539dl().b[14][1]++;
        }
        cov_7sb6539dl().s[71]++;
        if (report?.current?.agentSpawnTime > 1000) {
          /* istanbul ignore next */
          cov_7sb6539dl().b[15][0]++;
          cov_7sb6539dl().s[72]++;
          addAlert('warning', 'Agent spawning slow');
        } else
        /* istanbul ignore next */
        {
          cov_7sb6539dl().b[15][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_7sb6539dl().s[73]++;
        console.error('Error collecting performance metrics:', error);
        /* istanbul ignore next */
        cov_7sb6539dl().s[74]++;
        addAlert('error', 'Failed to collect performance metrics');
      }
    };
    /* istanbul ignore next */
    cov_7sb6539dl().s[75]++;
    monitoringIntervalRef.current = setInterval(collectMetrics, config.monitoringInterval);
    /* istanbul ignore next */
    cov_7sb6539dl().s[76]++;
    return () => {
      /* istanbul ignore next */
      cov_7sb6539dl().f[16]++;
      cov_7sb6539dl().s[77]++;
      if (monitoringIntervalRef.current) {
        /* istanbul ignore next */
        cov_7sb6539dl().b[16][0]++;
        cov_7sb6539dl().s[78]++;
        clearInterval(monitoringIntervalRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_7sb6539dl().b[16][1]++;
      }
    };
  }, [isMonitoring, optimizer, config.monitoringInterval, config.maxMemoryPerAgent, addAlert]);
  // Start monitoring
  const startMonitoring =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[79]++, useCallback(() => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[17]++;
    cov_7sb6539dl().s[80]++;
    if (!optimizer) {
      /* istanbul ignore next */
      cov_7sb6539dl().b[17][0]++;
      cov_7sb6539dl().s[81]++;
      addAlert('error', 'Performance optimizer not initialized');
      /* istanbul ignore next */
      cov_7sb6539dl().s[82]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7sb6539dl().b[17][1]++;
    }
    cov_7sb6539dl().s[83]++;
    setIsMonitoring(true);
    /* istanbul ignore next */
    cov_7sb6539dl().s[84]++;
    optimizer.startPerformanceMonitoring();
    /* istanbul ignore next */
    cov_7sb6539dl().s[85]++;
    addAlert('info', 'Performance monitoring started');
    /* istanbul ignore next */
    cov_7sb6539dl().s[86]++;
    console.log('📊 Performance monitoring started');
  }, [optimizer, addAlert]));
  // Stop monitoring
  const stopMonitoring =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[87]++, useCallback(() => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[18]++;
    cov_7sb6539dl().s[88]++;
    setIsMonitoring(false);
    /* istanbul ignore next */
    cov_7sb6539dl().s[89]++;
    if (monitoringIntervalRef.current) {
      /* istanbul ignore next */
      cov_7sb6539dl().b[18][0]++;
      cov_7sb6539dl().s[90]++;
      clearInterval(monitoringIntervalRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_7sb6539dl().b[18][1]++;
    }
    cov_7sb6539dl().s[91]++;
    addAlert('info', 'Performance monitoring stopped');
    /* istanbul ignore next */
    cov_7sb6539dl().s[92]++;
    console.log('📊 Performance monitoring stopped');
  }, [addAlert]));
  // Run optimization
  const runOptimization =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[93]++, useCallback(async () => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[19]++;
    cov_7sb6539dl().s[94]++;
    if (!optimizer) {
      /* istanbul ignore next */
      cov_7sb6539dl().b[19][0]++;
      cov_7sb6539dl().s[95]++;
      addAlert('error', 'Performance optimizer not initialized');
      /* istanbul ignore next */
      cov_7sb6539dl().s[96]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7sb6539dl().b[19][1]++;
    }
    cov_7sb6539dl().s[97]++;
    setIsOptimizing(true);
    /* istanbul ignore next */
    cov_7sb6539dl().s[98]++;
    addAlert('info', 'Running performance optimization...');
    /* istanbul ignore next */
    cov_7sb6539dl().s[99]++;
    try {
      /* istanbul ignore next */
      cov_7sb6539dl().s[100]++;
      await optimizer.initialize();
      /* istanbul ignore next */
      cov_7sb6539dl().s[101]++;
      addAlert('info', 'Performance optimization completed');
      /* istanbul ignore next */
      cov_7sb6539dl().s[102]++;
      console.log('🚀 Performance optimization completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_7sb6539dl().s[103]++;
      console.error('Performance optimization failed:', error);
      /* istanbul ignore next */
      cov_7sb6539dl().s[104]++;
      addAlert('error', 'Performance optimization failed');
    } finally {
      /* istanbul ignore next */
      cov_7sb6539dl().s[105]++;
      setIsOptimizing(false);
    }
  }, [optimizer, addAlert]));
  // Run benchmarks
  const runBenchmarks =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[106]++, useCallback(async () => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[20]++;
    cov_7sb6539dl().s[107]++;
    if (!optimizer) {
      /* istanbul ignore next */
      cov_7sb6539dl().b[20][0]++;
      cov_7sb6539dl().s[108]++;
      addAlert('error', 'Performance optimizer not initialized');
      /* istanbul ignore next */
      cov_7sb6539dl().s[109]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_7sb6539dl().b[20][1]++;
    }
    cov_7sb6539dl().s[110]++;
    try {
      /* istanbul ignore next */
      cov_7sb6539dl().s[111]++;
      addAlert('info', 'Running performance benchmarks...');
      const results =
      /* istanbul ignore next */
      (cov_7sb6539dl().s[112]++, await optimizer.runBenchmarks());
      /* istanbul ignore next */
      cov_7sb6539dl().s[113]++;
      addAlert('info', 'Performance benchmarks completed');
      /* istanbul ignore next */
      cov_7sb6539dl().s[114]++;
      return results;
    } catch (error) {
      /* istanbul ignore next */
      cov_7sb6539dl().s[115]++;
      console.error('Benchmarks failed:', error);
      /* istanbul ignore next */
      cov_7sb6539dl().s[116]++;
      addAlert('error', 'Performance benchmarks failed');
      /* istanbul ignore next */
      cov_7sb6539dl().s[117]++;
      return null;
    }
  }, [optimizer, addAlert]));
  // Update config
  const updateConfig =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[118]++, useCallback(newConfig => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[21]++;
    cov_7sb6539dl().s[119]++;
    setConfig(prev => {
      /* istanbul ignore next */
      cov_7sb6539dl().f[22]++;
      cov_7sb6539dl().s[120]++;
      return {
        ...prev,
        ...newConfig
      };
    });
    /* istanbul ignore next */
    cov_7sb6539dl().s[121]++;
    addAlert('info', 'Performance configuration updated');
  }, [addAlert]));
  // Clear alerts
  const clearAlerts =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[122]++, useCallback(() => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[23]++;
    cov_7sb6539dl().s[123]++;
    setAlerts([]);
  }, []));
  // Get performance report
  const getPerformanceReport =
  /* istanbul ignore next */
  (cov_7sb6539dl().s[124]++, useCallback(() => {
    /* istanbul ignore next */
    cov_7sb6539dl().f[24]++;
    cov_7sb6539dl().s[125]++;
    if (!optimizer) {
      /* istanbul ignore next */
      cov_7sb6539dl().b[21][0]++;
      cov_7sb6539dl().s[126]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_7sb6539dl().b[21][1]++;
    }
    cov_7sb6539dl().s[127]++;
    return optimizer.getPerformanceReport();
  }, [optimizer]));
  /* istanbul ignore next */
  cov_7sb6539dl().s[128]++;
  return {
    metrics,
    config,
    alerts,
    isOptimizing,
    isMonitoring,
    optimizer,
    startMonitoring,
    stopMonitoring,
    runOptimization,
    runBenchmarks,
    updateConfig,
    clearAlerts,
    getPerformanceReport
  };
}
export default usePerformanceMonitoring;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,